(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{246:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("[TOC]")]),t._v(" "),e("ol",[e("li",[t._v("Version: 2.7")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.python.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Official website"),e("OutboundLink")],1)])]),t._v(" "),e("h1",{attrs:{id:"miscellaneous"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#miscellaneous"}},[t._v("#")]),t._v(" Miscellaneous")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("profiling")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.zhihu.com/question/30018428/answer/120882946",target:"_blank",rel:"noopener noreferrer"}},[t._v("zhihu"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("print")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ab'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a whitespace is automatically added")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3: parentheses without comma")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (3,5): parentheses with comma")]),t._v("\n")])])]),e("ul",[e("li",[e("p",[t._v("override the invisible "),e("code",[t._v("\\n")]),t._v(": end with a comma "),e("code",[t._v(",")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("coordination")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("format()")]),t._v(" method for strings")])])])])]),t._v(" "),e("li",[e("p",[t._v("Parameters and arguments")])]),t._v(" "),e("li",[e("p",[t._v("Refer to doc")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("ipython")])]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("ipython")]),t._v(" and "),e("code",[t._v("help")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ ipython\nIn "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" requests\n\nIn "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": help"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("requests.get"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("ipython")]),t._v(" and "),e("code",[t._v("dir")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("In [3]: dir(requests)\nOut[3]: ...\n")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("ipython")]),t._v(" and "),e("code",[t._v("?")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("In [4]: requests.get?\n")])])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("pydoc")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ python "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" pydoc requests\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),e("p",[t._v("http hosted pydoc server at random unused port")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ python "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" pydoc "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nServer ready at "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# python -m pydoc -g # with GUI")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("enumerate()")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("zip()")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("zip(*[iter(s)]*n)")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("map()")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("list(map(iterable))")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("lambda x: 1 if x>0.5 else 0")])])]),t._v(" "),e("li",[e("p",[t._v("find the index of minima or maxima")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__getitem__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("zip")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("enumerate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argmin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# import numpy as np")]),t._v("\n")])])])])]),t._v(" "),e("h1",{attrs:{id:"fundamentals"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fundamentals"}},[t._v("#")]),t._v(" Fundamentals")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Using The Interpreter Prompt")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Use squarely")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ python\n  Python "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.7")]),t._v(".6 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default, Feb "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2014")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":08:15"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GCC "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),t._v(".1 Compatible Apple LLVM "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clang-500.2.79"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" on darwin\n  Type "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"help"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"copyright"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"credits"')]),t._v(" or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"license"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information.\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" print "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n  hello world\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("ul",[e("li",[t._v("Quit the Interpreter Prompt\n"),e("ul",[e("li",[t._v("GNU/Linux or OS X shell: "),e("code",[t._v("ctrl+d")]),t._v(" or "),e("code",[t._v("exit()<CR>")])]),t._v(" "),e("li",[t._v("Windows: "),e("code",[t._v("ctrl+z<CR>")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Run the script")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ python hello.py\nhello world\n")])])]),e("ul",[e("li",[e("code",[t._v("-O")]),t._v(" option: optimization requested\n"),e("ul",[e("li",[e("code",[t._v("__debug__")]),t._v(" will be "),e("code",[t._v("False")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Get help")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("help")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'what'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("press "),e("code",[t._v("q")]),t._v(" to quit")])])])]),t._v(" "),e("li",[e("p",[t._v("General properties of python")]),t._v(" "),e("ul",[e("li",[t._v("indentation sensitive\n"),e("ul",[e("li",[t._v("indentation is used to determine the grouping of statements")]),t._v(" "),e("li",[t._v("block: statements which go together must have the same indentation\n"),e("ul",[e("li",[e("code",[t._v("pass")]),t._v(": indicates an empty block of statements")]),t._v(" "),e("li",[t._v("single statement does not need an indentation")])])]),t._v(" "),e("li",[t._v("official Python language recommendation\n"),e("ul",[e("li",[t._v("Use four spaces for indentation")])])])])]),t._v(" "),e("li",[t._v("Interpreted: does not need compilation\n"),e("ul",[e("li",[t._v("Internally, Python converts the source code into an intermediate form called bytecodes and then translates this into the native language of your computer and then runs it")]),t._v(" "),e("li",[t._v("make Python programs much more portable")])])]),t._v(" "),e("li",[t._v("Extensible and embeddable\n"),e("ul",[e("li",[t._v("with C/C++")])])]),t._v(" "),e("li",[t._v("Extensive Libraries\n"),e("ul",[e("li",[e("a",{attrs:{href:"http://pypi.python.org/pypi",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python Package Index"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[t._v("strongly object-oriented\n"),e("ul",[e("li",[t._v("Python is strongly object-oriented in the sense that everything is an object including numbers, strings and functions")])])]),t._v(" "),e("li",[t._v("Dynamic:\n"),e("ul",[e("li",[t._v("no declaration or data type definition is needed/used")])])]),t._v(" "),e("li",[t._v("short-circuit evaluation")]),t._v(" "),e("li",[t._v("starts counting from 0")])])]),t._v(" "),e("li",[e("p",[t._v("Logical And Physical Line")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Definition")]),t._v(" "),e("ul",[e("li",[t._v("A physical line is what you see when you write the program")]),t._v(" "),e("li",[t._v("A logical line is what Python sees as a single statement")])])]),t._v(" "),e("li",[e("p",[t._v("Implication")]),t._v(" "),e("ul",[e("li",[t._v("Python implicitly assumes that each physical line corresponds to a logical line")]),t._v(" "),e("li",[t._v("Implicitly, Python encourages the use of a single statement per line which makes code more readable")])])]),t._v(" "),e("li",[e("p",[t._v("specify more than one logical line on a single physical line: use semicolon "),e("code",[t._v(";")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for identical examples for the use of semicolon")]),t._v("\ni "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" i\n\ni "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ni "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ni "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" i\n")])])])]),t._v(" "),e("li",[e("p",[t._v("For long code: break one logical line into multiple physical line:")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("use backslash "),e("code",[t._v("\\")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print 5")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("implicit line joining")]),t._v(" "),e("ul",[e("li",[t._v("where the logical line has a starting parentheses "),e("code",[t._v("(")]),t._v(", starting square brackets "),e("code",[t._v("[")]),t._v(" or a starting curly braces "),e("code",[t._v("{")]),t._v(" but not an ending one")])])])])])])])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Comments: "),e("code",[t._v("#")])])]),t._v(" "),e("li",[e("p",[t._v("Identifier Naming")]),t._v(" "),e("ul",[e("li",[t._v("The first character of the identifier must be a letter of the alphabet (uppercase ASCII or lowercase ASCII or Unicode character) or an underscore ( _ )")]),t._v(" "),e("li",[t._v("The rest of the identifier name can also consist of digits")]),t._v(" "),e("li",[t._v("Identifier names are case-sensitive")])])])]),t._v(" "),e("h1",{attrs:{id:"types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#types"}},[t._v("#")]),t._v(" Types")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("See the type: "),e("code",[t._v("type(object)")])])]),t._v(" "),e("li",[e("p",[t._v("Dynamic")]),t._v(" "),e("ul",[e("li",[t._v("Variables are used by just assigning them a value.")]),t._v(" "),e("li",[t._v("No declaration or data type definition is needed/used.")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("int")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("long")]),t._v(" does not exist, included in")])])]),t._v(" "),e("li",[e("p",[t._v("delete/remove an identifier: "),e("code",[t._v("del")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Variable")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("None")]),t._v(" "),e("ul",[e("li",[t._v("special type in Python that represents nothingness")]),t._v(" "),e("li",[t._v("a variable has no value if it has a value of "),e("code",[t._v("None")])])])])])]),t._v(" "),e("li",[e("p",[t._v("String")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("class "),e("code",[t._v("str")])])]),t._v(" "),e("li",[e("p",[t._v("Single Quote "),e("code",[t._v("'string'")]),t._v(": no "),e("code",[t._v("char")]),t._v(" type in python")])]),t._v(" "),e("li",[e("p",[t._v("Double Quotes "),e("code",[t._v('"string"')]),t._v(": identical to single quote")])]),t._v(" "),e("li",[e("p",[t._v("Triple Quotes "),e("code",[t._v("'''")]),t._v(" or "),e("code",[t._v('"""')]),t._v(": multi-line strings")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is a multi-line string. This is the first line.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# second line")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''This is a multi-line string. This is the first line.\nsecond line\n'''")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Strings Are Immutable")])]),t._v(" "),e("li",[e("p",[t._v("Strings can be indexed (subscripted)")]),t._v(" "),e("ul",[e("li",[t._v("a character is simply a string of size one")]),t._v(" "),e("li",[t._v("Indices may also be negative numbers, to start counting from the right")]),t._v(" "),e("li",[t._v("Note that since -0 is the same as 0, negative indices start from -1")])])]),t._v(" "),e("li",[e("p",[t._v("slicing allows you to obtain a substring")]),t._v(" "),e("ul",[e("li",[t._v("Note how the start is always included, and the end always excluded. This makes sure that "),e("code",[t._v("s[:i] + s[i:]")]),t._v(" is always equal to "),e("code",[t._v("s")])]),t._v(" "),e("li",[t._v("Slice indices have useful defaults; an omitted first index defaults to zero, an omitted second index defaults to the size of the string being sliced.")]),t._v(" "),e("li",[t._v("out of range slice indexes are handled gracefully"),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("construct strings from other information")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("format")]),t._v(" method")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("substitute "),e("code",[t._v("{number}")]),t._v(" with corresponding parameters, the numbers are optional but should be coherent (all with a number or all without)")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("age "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nname "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Swaroop'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{0} was {1} years old when he wrote this book'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Why is {0} playing with that python?'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("the conversion to string would be done automatically by the format method")])]),t._v(" "),e("li",[e("p",[t._v("Specify decimal precision")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# decimal (.) precision of 3 for float '0.333'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{0:.3f}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Fill to a width with the text centered")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (^) to 11 width '___hello___'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{0:_^11}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Keyword substitution")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# keyword-based 'Swaroop wrote A Byte of Python'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{name} wrote {book}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Swaroop'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                   book"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A Byte of Python'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("string concatenation")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' is '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' years old'")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("convert other data types to string")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("str()")])]),t._v(" "),e("li",[t._v("be done automatically by the format method")])])]),t._v(" "),e("li",[e("p",[t._v("Escaped Sequences")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("quotes")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'What\\'s your \"name'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"What\'s your \\"name"')]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("some other: "),e("code",[t._v("\\n")]),t._v(", "),e("code",[t._v("\\t")])])]),t._v(" "),e("li",[e("p",[t._v("span multiple lines: a single backslash "),e("code",[t._v("\\")]),t._v(" at the end of the line")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is the first sentence.        This is the second sentence.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(' "This '),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" the first sentence"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \\\n       This "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" the second sentence"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v('"\n')])])])])])]),t._v(" "),e("li",[e("p",[t._v("Raw String: no escaping: by prefixing "),e("code",[t._v("r")]),t._v(" or "),e("code",[t._v("R")]),t._v(" to the string")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('r"Newlines are indicated by \\n"')]),t._v("\n")])])]),e("ul",[e("li",[t._v("Regular Expression Use: better use raw string")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unicode")]),t._v(" type: prefixing "),e("code",[t._v("u")]),t._v(" to the string, "),e("code",[t._v("'\\uxxxx'")]),t._v(" for non-ascii")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("set encoding for python")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -*- coding: utf-8 -*-")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim: set fileencoding=utf-8")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("unicode name")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("u'\\N{BLACK SPADE SUIT}'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ♠")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("get name:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" unicodedata\nunicodedata"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("get number")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("hex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ord")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("String length: "),e("code",[t._v("len(string)")])])])])])]),t._v(" "),e("h1",{attrs:{id:"operators"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#operators"}},[t._v("#")]),t._v(" Operators")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Common Ones")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("+")]),t._v(", "),e("code",[t._v("-")]),t._v(", "),e("code",[t._v("*")]),t._v(", "),e("code",[t._v("/")]),t._v(", "),e("code",[t._v("&")]),t._v(", "),e("code",[t._v("|")])]),t._v(" "),e("li",[t._v("For strings"),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# abbb")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# no minus for strings")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Special ones")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("**")]),t._v(": power")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("%")]),t._v(": modulo")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25.5")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.25")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.5")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25.5")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.25")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -1.5")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25.5")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.25")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -0.75")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("<<")]),t._v(" left shift")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 8: 10 → 1000")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v(">>")]),t._v(" right shift")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5: 1011 → 101")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("^")]),t._v(": bit-wise XOR")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("~")]),t._v(": bit-wise invert, output is "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mo",[t._v("−")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("mi",[t._v("x")]),e("mo",[t._v("+")]),e("mn",[t._v("1")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("-(x+1)")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord"},[t._v("−")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord mathdefault"},[t._v("x")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord"},[t._v("1")]),e("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v(" for input "),e("eq",[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("x")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("x")])])])])])],1)]),t._v(" "),e("li",[e("p",[e("code",[t._v("<")]),t._v(", "),e("code",[t._v(">")]),t._v(", "),e("code",[t._v("<=")]),t._v(", "),e("code",[t._v(">=")]),t._v(", "),e("code",[t._v("==")]),t._v(", "),e("code",[t._v("!=")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("All comparison operators return "),e("code",[t._v("True")]),t._v(" or "),e("code",[t._v("False")])])]),t._v(" "),e("li",[e("p",[t._v("can be chained arbitrarily")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# both True")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("when operands are not both numbers")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# True")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Boolean function: "),e("code",[t._v("not")]),t._v(", "),e("code",[t._v("and")]),t._v(", "),e("code",[t._v("or")])]),t._v(" "),e("ul",[e("li",[t._v("short-circuit evaluation: the rest of a expression is not evaluated if the output is determined")])])]),t._v(" "),e("li",[e("p",[t._v("Rules of precedence: from lowest to highest")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Operator")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("a",{attrs:{href:"https://docs.python.org/3/reference/expressions.html#lambda",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("lambda")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("Lambda expression")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://docs.python.org/3/reference/compound_stmts.html#if",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("if")]),e("OutboundLink")],1),t._v(" – "),e("a",{attrs:{href:"https://docs.python.org/3/reference/compound_stmts.html#else",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("else")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("Conditional expression")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://docs.python.org/3/reference/expressions.html#or",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("or")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("Boolean OR")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://docs.python.org/3/reference/expressions.html#and",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("and")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("Boolean AND")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://docs.python.org/3/reference/expressions.html#not",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("not")]),e("OutboundLink")],1),t._v(" "),e("code",[t._v("x")])]),t._v(" "),e("td",[t._v("Boolean NOT")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://docs.python.org/3/reference/expressions.html#in",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("in")]),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"https://docs.python.org/3/reference/expressions.html#not-in",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("not in")]),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"https://docs.python.org/3/reference/expressions.html#is",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("is")]),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"https://docs.python.org/3/reference/expressions.html#is-not",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("is not")]),e("OutboundLink")],1),t._v(", "),e("code",[t._v("<")]),t._v(", "),e("code",[t._v("<=")]),t._v(", "),e("code",[t._v(">")]),t._v(", "),e("code",[t._v(">=")]),t._v(", "),e("code",[t._v("!=")]),t._v(", "),e("code",[t._v("==")])]),t._v(" "),e("td",[t._v("Comparisons, including membership tests and identity tests")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("|")])]),t._v(" "),e("td",[t._v("Bitwise OR")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("^")])]),t._v(" "),e("td",[t._v("Bitwise XOR")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("&")])]),t._v(" "),e("td",[t._v("Bitwise AND")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<<")]),t._v(", "),e("code",[t._v(">>")])]),t._v(" "),e("td",[t._v("Shifts")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("+")]),t._v(", "),e("code",[t._v("-")])]),t._v(" "),e("td",[t._v("Addition and subtraction")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("*")]),t._v(", "),e("code",[t._v("@")]),t._v(", "),e("code",[t._v("/")]),t._v(", "),e("code",[t._v("//")]),t._v(", "),e("code",[t._v("%")])]),t._v(" "),e("td",[t._v("Multiplication, matrix multiplication, division, floor division, remainder ["),e("a",{attrs:{href:"https://docs.python.org/3/reference/expressions.html#id21",target:"_blank",rel:"noopener noreferrer"}},[t._v("5]"),e("OutboundLink")],1)])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("+x")]),t._v(", "),e("code",[t._v("-x")]),t._v(", "),e("code",[t._v("~x")])]),t._v(" "),e("td",[t._v("Positive, negative, bitwise NOT")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("**")])]),t._v(" "),e("td",[t._v("Exponentiation ["),e("a",{attrs:{href:"https://docs.python.org/3/reference/expressions.html#id22",target:"_blank",rel:"noopener noreferrer"}},[t._v("6]"),e("OutboundLink")],1)])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("await")]),t._v(" "),e("code",[t._v("x")])]),t._v(" "),e("td",[t._v("Await expression")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("x[index]")]),t._v(", "),e("code",[t._v("x[index:index]")]),t._v(", "),e("code",[t._v("x(arguments...)")]),t._v(", "),e("code",[t._v("x.attribute")])]),t._v(" "),e("td",[t._v("Subscription, slicing, call, attribute reference")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("(expressions...)")]),t._v(", "),e("code",[t._v("[expressions...]")]),t._v(", "),e("code",[t._v("{key: value...}")]),t._v(", "),e("code",[t._v("{expressions...}")])]),t._v(" "),e("td",[t._v("Binding or tuple display, list display, dictionary display, set display")])])])])])])])]),t._v(" "),e("h2",{attrs:{id:"some-statements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#some-statements"}},[t._v("#")]),t._v(" Some Statements")]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("yeild")]),t._v(": only used when defining a generator function, and is only used in the body of the generator function")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("exec")]),t._v(": dynamic execution of Python code")]),t._v(" "),e("ul",[e("li",[t._v("dynamic evaluation of expressions is supported by the built-in function "),e("code",[t._v("eval()")])])])])]),t._v(" "),e("h1",{attrs:{id:"control-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#control-flow"}},[t._v("#")]),t._v(" Control Flow")]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("if")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("keywords: "),e("code",[t._v("if")]),t._v(", "),e("code",[t._v("elif")]),t._v(", "),e("code",[t._v("else")])])]),t._v(" "),e("li",[e("p",[t._v("Syntax")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" condition1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# parentheses are optional, colon is a must")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" conditon2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("no "),e("code",[t._v("switch")])])]),t._v(" "),e("li",[e("p",[t._v("condition operator")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" condition "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("while")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("keywords: "),e("code",[t._v("while")]),t._v(", "),e("code",[t._v("else")])])]),t._v(" "),e("li",[e("p",[t._v("Syntax")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" condition"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Explanation")]),t._v(" "),e("ul",[e("li",[t._v("The "),e("code",[t._v("else")]),t._v(" block is executed when the while loop condition becomes "),e("code",[t._v("False")]),t._v(" "),e("ul",[e("li",[t._v("this may even be the first time that the condition is checked")])])]),t._v(" "),e("li",[t._v("A "),e("code",[t._v("else")]),t._v(" clause is always executed for "),e("code",[t._v("while")]),t._v(" unless "),e("code",[t._v("break")])])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("for")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("keywords: "),e("code",[t._v("for")]),t._v(", "),e("code",[t._v("in")]),t._v(", "),e("code",[t._v("else")])])]),t._v(" "),e("li",[e("p",[t._v("Syntax")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" var "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" sequence"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),e("p",[t._v("where "),e("code",[t._v("var")]),t._v(" is a variable and "),e("code",[t._v("sequence")]),t._v(" is discussed later")])]),t._v(" "),e("li",[e("p",[t._v("Common sequences")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("range()")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# start = 0, step = 1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" step"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# step = 1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [0, 1, 2, 3]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1, 3]")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("xrange()")]),t._v(": a long range but generated only one number at a time")])])])]),t._v(" "),e("li",[e("p",[t._v("Explanation")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("else")]),t._v(" works the same way as the one with "),e("code",[t._v("while")])])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("break")])]),t._v(" "),e("ul",[e("li",[t._v("if "),e("code",[t._v("break")]),t._v(" out of a loop, corresponding loop "),e("code",[t._v("else")]),t._v(" is not executed")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("continue")])])])]),t._v(" "),e("h1",{attrs:{id:"function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[t._v("#")]),t._v(" Function")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Define a function")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("foobar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("para1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" para2"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),e("p",[t._v("where the default argument value should be immutable")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("return")])]),t._v(" "),e("ul",[e("li",[t._v("Every function implicitly contains a "),e("code",[t._v("return None")]),t._v(" statement at the end\n"),e("ul",[e("li",[t._v("Unless "),e("code",[t._v("return")]),t._v(" statement is explicitly written")])])]),t._v(" "),e("li",[e("code",[t._v("return")]),t._v(" without a value is equivalent to "),e("code",[t._v("return None")])]),t._v(" "),e("li",[e("code",[t._v("return")]),t._v(" a tuple to pass multiple variables")])])]),t._v(" "),e("li",[e("p",[t._v("Use variables beyond local scope: "),e("code",[t._v("global")]),t._v(" and "),e("code",[t._v("nonlocal")]),t._v(" statement")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Syntax")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("var1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nvar2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" var1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var2\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Note")]),t._v(" "),e("ul",[e("li",[t._v('Names listed in a "global" statement must not be used in the same code block textually preceding that "global" statement.')]),t._v(" "),e("li",[t._v('Names listed in a "global" statement must not be defined as formal parameters or in a "for" loop control target, "class" definition, function definition, or "import" statement.')]),t._v(" "),e("li",[e("code",[t._v("nonlocal")]),t._v(": "),e("code",[t._v("global")]),t._v(" excluded")])])])])]),t._v(" "),e("li",[e("p",[t._v("Keyword Arguments")]),t._v(" "),e("ul",[e("li",[t._v("Definition\n"),e("ul",[e("li",[t._v("If you have some functions with many parameters and you want to specify only some of them, then you can give values for such parameters by naming them")])])]),t._v(" "),e("li",[t._v("Example"),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a is'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'and b is'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'and c is'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c\n\nfunc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfunc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfunc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("VarArgs parameters: "),e("strong",[t._v("var")]),t._v("iable number of "),e("strong",[t._v("arg")]),t._v("uments")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Use the starred parameter")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("total")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initial"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("numbers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("keywords"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    count "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" initial\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" number "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" numbers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        count "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" number\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" keywords"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        count "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" keywords"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" total"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vegetables"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fruits"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Explanation")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("*param")]),t._v(": all the positional arguments from declared point till the end are collected as a tuple")]),t._v(" "),e("li",[e("code",[t._v("**param")]),t._v(": all the keyword arguments from declared point till the end are collected as a dictionary")])])])])]),t._v(" "),e("li",[e("p",[t._v("DocStrings: documentation strings")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Application")]),t._v(" "),e("ul",[e("li",[t._v("helps to document the program better and makes it easier to understand")]),t._v(" "),e("li",[t._v("used by "),e("code",[t._v("help()")])]),t._v(" "),e("li",[t._v("Automated tools can retrieve the documentation, such as "),e("code",[t._v("pydoc")]),t._v(", which generates Python documentation in HTML or text")])])]),t._v(" "),e("li",[e("p",[t._v("Syntax")]),t._v(" "),e("ul",[e("li",[t._v("A string on the first logical line of a function is the docstring for that function")]),t._v(" "),e("li",[t._v("also apply to modules and classes")])])]),t._v(" "),e("li",[e("p",[t._v("Display")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" func"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__doc__\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" classname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__doc__\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" classname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("methodname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__doc__ "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("help")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# no quotes")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Convention")]),t._v(" "),e("ul",[e("li",[t._v("a multi-line string where the first line starts with a capital letter and ends with a dot.")]),t._v(" "),e("li",[t._v("Then the second line is blank")]),t._v(" "),e("li",[t._v("followed by any detailed explanation starting from the third line")])])])])])]),t._v(" "),e("h2",{attrs:{id:"lambda"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lambda"}},[t._v("#")]),t._v(" Lambda")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Syntax: take parameters followed by a single expression")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("points "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\npoints"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sort"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" points\n")])])]),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" l"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 11")]),t._v("\n")])])])])]),t._v(" "),e("h1",{attrs:{id:"modules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modules"}},[t._v("#")]),t._v(" Modules")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Introduction")]),t._v(" "),e("ul",[e("li",[t._v("reuse a number of functions in other programs\n"),e("ul",[e("li",[t._v("A module can be imported by another program to make use of its functionality. This is how we can use the Python standard library as well")])])]),t._v(" "),e("li",[t._v("the simplest way\n"),e("ul",[e("li",[t._v("is to create a file with a "),e("code",[t._v(".py")]),t._v(" extension that contains functions and variables")]),t._v(" "),e("li",[t._v("every Python program is also a module")])])]),t._v(" "),e("li",[t._v("Another method\n"),e("ul",[e("li",[t._v("is to write the modules in the native language in which the Python interpreter itself was written. For example, you can write modules in the "),e("a",{attrs:{href:"https://docs.python.org/2/extending/",target:"_blank",rel:"noopener noreferrer"}},[t._v("C programming language"),e("OutboundLink")],1),t._v(" and when compiled, they can be used from your Python code when using the standard Python interpreter")])])]),t._v(" "),e("li",[t._v("Locations\n"),e("ul",[e("li",[t._v("you can directly import modules located in the current directory")]),t._v(" "),e("li",[t._v("Otherwise, you will have to place your module in one of the directories listed in "),e("code",[t._v("sys.path")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Byte-compiled "),e("code",[t._v(".pyc")]),t._v(" files")]),t._v(" "),e("ul",[e("li",[t._v("Importing a module is a relatively costly affair")]),t._v(" "),e("li",[t._v("so create byte-compiled files with the extension "),e("code",[t._v(".pyc")]),t._v(" which is an intermediate form that Python transforms the program into")])])]),t._v(" "),e("li",[e("p",[t._v("Example: "),e("code",[t._v("sys")]),t._v(" module")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Example")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The command line arguments are:'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" sys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" i\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\nThe PYTHONPATH is'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ python module_using_sys.py we are arguments\nThe "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" line arguments are:\nmodule_using_sys.py\nwe\nare\narguments\n\nThe PYTHONPATH is "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/tmp/py'")]),t._v(",\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# many entries here, not shown here")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/Library/Python/2.7/site-packages'")]),t._v(",\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr/local/lib/python2.7/site-packages'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("sys.argv")])]),t._v(" "),e("ul",[e("li",[t._v("contains the list of command line arguments i.e. the arguments passed to your program using the command line")]),t._v(" "),e("li",[t._v("the name of the script running is always the first argument in the "),e("code",[t._v("sys.argv")]),t._v(" list")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("sys.path")])]),t._v(" "),e("ul",[e("li",[t._v("contains the list of directory names where modules are imported from")]),t._v(" "),e("li",[t._v("you can directly import modules located in the current directory")]),t._v(" "),e("li",[t._v("Otherwise, you will have to place your module in one of the directories listed in "),e("code",[t._v("sys.path")])])])])])]),t._v(" "),e("li",[e("p",[t._v("The "),e("code",[t._v("from ... import")]),t._v(" statement")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Directly import a variable, avoid the member "),e("code",[t._v("modulename.")]),t._v(" prefix")])]),t._v(" "),e("li",[e("p",[t._v("Example")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" math "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sqrt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Square root of 16 is"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sqrt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Import all public names of a module")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" modulename "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n")])])]),e("p",[t._v("those starting with double underscores "),e("code",[t._v("__")]),t._v(" will not be imported")])])])]),t._v(" "),e("li",[e("p",[t._v("Alias")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" modulename "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" alias1\n")])])])]),t._v(" "),e("li",[e("p",[t._v("A module’s "),e("code",[t._v("name")])]),t._v(" "),e("ul",[e("li",[t._v("Every module has a name")]),t._v(" "),e("li",[t._v("statements in a module can find out the name of their module")]),t._v(" "),e("li",[t._v("Whether a module is run standalone or imported"),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This program is being run by itself'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I am being imported from another module'")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("list the identifiers that an object defines: the "),e("code",[t._v("dir()")]),t._v(" function")]),t._v(" "),e("ul",[e("li",[t._v("Default parameter: the current module")]),t._v(" "),e("li",[t._v("should be imported first")]),t._v(" "),e("li",[t._v("works on any object")]),t._v(" "),e("li",[e("code",[t._v("vars()")]),t._v(" also gives the values, but it will not work for all cases")])])]),t._v(" "),e("li",[e("p",[t._v("Packages")]),t._v(" "),e("ul",[e("li",[t._v("A way to organize modules")]),t._v(" "),e("li",[t._v("Packages are just folders of modules with a special "),e("code",[t._v("__init__.py")]),t._v(" file that indicates to Python that this folder is special because it contains Python modules")]),t._v(" "),e("li",[t._v("Example"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("- <some folder present in the sys.path>/\n    - world/\n        - __init__.py\n        - asia/\n            - __init__.py\n            - india/\n                - __init__.py\n                - foo.py\n        - africa/\n            - __init__.py\n            - madagascar/\n                - __init__.py\n                - bar.py\n")])])])])])])]),t._v(" "),e("h1",{attrs:{id:"data-structures"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-structures"}},[t._v("#")]),t._v(" Data Structures")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Sequence")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Sequence types")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://docs.python.org/2/library/functions.html#str",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("str")]),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"https://docs.python.org/2/library/functions.html#unicode",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("unicode")]),e("OutboundLink")],1),t._v(", "),e("code",[t._v("list")]),t._v(", "),e("a",{attrs:{href:"https://docs.python.org/2/library/functions.html#tuple",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("tuple")]),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"https://docs.python.org/2/library/functions.html#bytearray",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("bytearray")]),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"https://docs.python.org/2/library/functions.html#buffer",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("buffer")]),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"https://docs.python.org/2/library/functions.html#xrange",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("xrange")]),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("p",[t._v("Common sequence operation")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Operation")]),t._v(" "),e("th",[t._v("Result")]),t._v(" "),e("th",[t._v("Notes")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("x in s")])]),t._v(" "),e("td",[e("code",[t._v("True")]),t._v(" if an item of "),e("em",[t._v("s")]),t._v(" is equal to "),e("em",[t._v("x")]),t._v(", else "),e("code",[t._v("False")])]),t._v(" "),e("td",[t._v("(1)")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("x not in s")])]),t._v(" "),e("td",[e("code",[t._v("False")]),t._v(" if an item of "),e("em",[t._v("s")]),t._v(" is equal to "),e("em",[t._v("x")]),t._v(", else "),e("code",[t._v("True")])]),t._v(" "),e("td",[t._v("(1)")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("s + t")])]),t._v(" "),e("td",[t._v("the concatenation of "),e("em",[t._v("s")]),t._v(" and "),e("em",[t._v("t")])]),t._v(" "),e("td",[t._v("(6)")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("s * n, n * s")])]),t._v(" "),e("td",[t._v("equivalent to adding "),e("em",[t._v("s")]),t._v(" to itself "),e("em",[t._v("n")]),t._v(" times")]),t._v(" "),e("td",[t._v("(2)")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("s[i]")])]),t._v(" "),e("td",[e("em",[t._v("i")]),t._v("th item of "),e("em",[t._v("s")]),t._v(", origin 0")]),t._v(" "),e("td",[t._v("(3)")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("s[i:j]")])]),t._v(" "),e("td",[t._v("slice of "),e("em",[t._v("s")]),t._v(" from "),e("em",[t._v("i")]),t._v(" to "),e("em",[t._v("j")])]),t._v(" "),e("td",[t._v("(3)(4)")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("s[i:j:k]")])]),t._v(" "),e("td",[t._v("slice of "),e("em",[t._v("s")]),t._v(" from "),e("em",[t._v("i")]),t._v(" to "),e("em",[t._v("j")]),t._v(" with step "),e("em",[t._v("k")])]),t._v(" "),e("td",[t._v("(3)(5)")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("len(s)")])]),t._v(" "),e("td",[t._v("length of "),e("em",[t._v("s")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("code",[t._v("min(s)")])]),t._v(" "),e("td",[t._v("smallest item of "),e("em",[t._v("s")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("code",[t._v("max(s)")])]),t._v(" "),e("td",[t._v("largest item of "),e("em",[t._v("s")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("code",[t._v("s.index(x)")])]),t._v(" "),e("td",[t._v("index of the first occurrence of "),e("em",[t._v("x")]),t._v(" in "),e("em",[t._v("s")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("code",[t._v("s.count(x)")])]),t._v(" "),e("td",[t._v("total number of occurrences of "),e("em",[t._v("x")]),t._v(" in "),e("em",[t._v("s")])]),t._v(" "),e("td")])])]),t._v(" "),e("p",[t._v("This table lists the sequence operations sorted in ascending priority. In the table, "),e("em",[t._v("s")]),t._v(" and "),e("em",[t._v("t")]),t._v(" are sequences of the same type; "),e("em",[t._v("n")]),t._v(", "),e("em",[t._v("i")]),t._v(" and "),e("em",[t._v("j")]),t._v(" are integers")])]),t._v(" "),e("li",[e("p",[t._v("slicing")]),t._v(" "),e("ul",[e("li",[t._v("Note how the start is always included, and the end always excluded. This makes sure that "),e("code",[t._v("s[:i] + s[i:]")]),t._v(" is always equal to "),e("code",[t._v("s")])]),t._v(" "),e("li",[t._v("Slice indices have useful defaults; an omitted first index defaults to zero, an omitted second index defaults to the size of the string being sliced.")]),t._v(" "),e("li",[t._v("the sign of the step determines the direction\n"),e("ul",[e("li",[t._v("reverse: "),e("code",[t._v("s[::-1]")])])])]),t._v(" "),e("li",[t._v("out of range slice indexes are handled gracefully"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> 'a'[5:]\n''\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Notes")]),t._v(" "),e("ol",[e("li",[t._v("substring test:\n"),e("ul",[e("li",[t._v("When "),e("em",[t._v("s")]),t._v(" is a string or Unicode string object, the "),e("code",[t._v("in")]),t._v(" and "),e("code",[t._v("not in")]),t._v(" operations act like a substring test")])])]),t._v(" "),e("li",[e("code",[t._v("0")]),t._v(" when negative and referenced:\n"),e("ul",[e("li",[t._v("Values of "),e("em",[t._v("n")]),t._v(" less than "),e("code",[t._v("0")]),t._v(" are treated as "),e("code",[t._v("0")]),t._v(" (which yields an empty sequence of the same type as "),e("em",[t._v("s")]),t._v(").")]),t._v(" "),e("li",[t._v("Note that items in the sequence "),e("em",[t._v("s")]),t._v(" are not copied; they are "),e("strong",[t._v("referenced")]),t._v(" multiple times.")]),t._v(" "),e("li",[e("code",[t._v("[[] for i in range(3)]")]),t._v(" in lieu of "),e("code",[t._v("[[]] * 3")]),t._v(" for nested lists")])])]),t._v(" "),e("li",[t._v("Reversal order when negative:\n"),e("ul",[e("li",[t._v("If "),e("em",[t._v("i")]),t._v(" or "),e("em",[t._v("j")]),t._v(" is negative, the index is relative to the end of sequence "),e("em",[t._v("s")]),t._v(": "),e("code",[t._v("len(s) + i")]),t._v(" or "),e("code",[t._v("len(s) + j")]),t._v(" is substituted. But note that "),e("code",[t._v("-0")]),t._v(" is still "),e("code",[t._v("0")]),t._v(".")])])]),t._v(" "),e("li",[t._v("Stringent range:\n"),e("ul",[e("li",[t._v("The slice of "),e("em",[t._v("s")]),t._v(" from "),e("em",[t._v("i")]),t._v(" to "),e("em",[t._v("j")]),t._v(" is defined as the sequence of items with index "),e("em",[t._v("k")]),t._v(" such that "),e("code",[t._v("i <= k < j")]),t._v(".")]),t._v(" "),e("li",[t._v("If "),e("em",[t._v("i")]),t._v(" or "),e("em",[t._v("j")]),t._v(" is greater than "),e("code",[t._v("len(s)")]),t._v(", use "),e("code",[t._v("len(s)")]),t._v(".")]),t._v(" "),e("li",[t._v("If "),e("em",[t._v("i")]),t._v(" is omitted or "),e("code",[t._v("None")]),t._v(", use "),e("code",[t._v("0")]),t._v(". If "),e("em",[t._v("j")]),t._v(" is omitted or "),e("code",[t._v("None")]),t._v(", use "),e("code",[t._v("len(s)")]),t._v(".")]),t._v(" "),e("li",[t._v("If "),e("em",[t._v("i")]),t._v(" is greater than or equal to "),e("em",[t._v("j")]),t._v(", the slice is empty.")])])]),t._v(" "),e("li",[t._v("Stringent range:\n"),e("ul",[e("li",[e("code",[t._v("x = i + n*k")]),t._v(" such that "),e("code",[t._v("0 <= n < (j-i)/k")]),t._v(", stopping when "),e("em",[t._v("j")]),t._v(" is reached (but never including "),e("em",[t._v("j")]),t._v(").")]),t._v(" "),e("li",[t._v("When "),e("em",[t._v("k")]),t._v(" is positive, "),e("em",[t._v("i")]),t._v(" and "),e("em",[t._v("j")]),t._v(" are reduced to "),e("code",[t._v("len(s)")]),t._v(" if they are greater.")]),t._v(" "),e("li",[t._v("When "),e("em",[t._v("k")]),t._v(" is negative, "),e("em",[t._v("i")]),t._v(" and "),e("em",[t._v("j")]),t._v(" are reduced to "),e("code",[t._v("len(s) - 1")]),t._v(" if they are greater.")]),t._v(" "),e("li",[t._v("If "),e("em",[t._v("i")]),t._v(" or "),e("em",[t._v("j")]),t._v(" are omitted or "),e("code",[t._v("None")]),t._v(", they become “end” values (which end depends on the sign of "),e("em",[t._v("k")]),t._v(").")]),t._v(" "),e("li",[t._v("Note, "),e("em",[t._v("k")]),t._v(" cannot be zero. If "),e("em",[t._v("k")]),t._v(" is "),e("code",[t._v("None")]),t._v(", it is treated like "),e("code",[t._v("1")]),t._v(".")])])]),t._v(" "),e("li",[e("strong",[t._v("CPython implementation detail:")]),t._v(" "),e("ul",[e("li",[t._v("If "),e("em",[t._v("s")]),t._v(" and "),e("em",[t._v("t")]),t._v(" are both strings, some Python implementations such as CPython can usually perform an in-place optimization.")]),t._v(" "),e("li",[t._v("For performance sensitive code, it is preferable to use the "),e("a",{attrs:{href:"https://docs.python.org/2/library/stdtypes.html#str.join",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("str.join()")]),e("OutboundLink")],1),t._v(" method which assures consistent linear concatenation performance across versions and implementations.")])])])])])])]),t._v(" "),e("li",[e("p",[t._v("List")]),t._v(" "),e("ul",[e("li",[t._v("Syntax\n"),e("ul",[e("li",[t._v("Enclosed in square brackets")])])]),t._v(" "),e("li",[t._v("Access\n"),e("ul",[e("li",[t._v("suffix brackets with numbers")])])]),t._v(" "),e("li",[t._v("Methods\n"),e("ul",[e("li",[t._v("Length: "),e("code",[t._v("len()")])]),t._v(" "),e("li",[t._v("Add:\n"),e("ul",[e("li",[e("code",[t._v("append(x)")]),t._v(" equivalent to "),e("code",[t._v("a[len(a):] = [x]")])]),t._v(" "),e("li",[e("code",[t._v("extend(L)")]),t._v(" equivalent to "),e("code",[t._v("a[len(a):] = L")]),t._v(", or list concatenation")]),t._v(" "),e("li",[e("code",[t._v("insert(i, x)")])])])]),t._v(" "),e("li",[t._v("delete/remove:\n"),e("ul",[e("li",[e("code",[t._v("del")]),t._v(": not a member")]),t._v(" "),e("li",[e("code",[t._v("remove(x)")]),t._v(": Remove the first item from the list whose value is x. It is an error if there is no such item.")]),t._v(" "),e("li",[e("code",[t._v("pop()")]),t._v(": a position argument can be given")])])]),t._v(" "),e("li",[t._v("Sort: "),e("code",[t._v("sort(cmp=None, key=None, reverse=False)")]),t._v(" "),e("ul",[e("li",[t._v("the arguments can be used for sort customization, see "),e("a",{attrs:{href:"https://docs.python.org/2/library/functions.html#sorted",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("sorted()")]),e("OutboundLink")],1),t._v(" for their explanation")])])]),t._v(" "),e("li",[t._v("Find:\n"),e("ul",[e("li",[e("code",[t._v("index(x)")]),t._v(": Return the index in the list of the first item whose value is x. It is an error if there is no such item.")]),t._v(" "),e("li",[e("code",[t._v("cound(x)")]),t._v(": Return the number of times x appears in the list.")])])]),t._v(" "),e("li",[t._v("Check existence\n"),e("ul",[e("li",[e("code",[t._v("in")]),t._v(" operator")])])]),t._v(" "),e("li",[t._v("Reverse: "),e("code",[t._v("reverse()")]),t._v(" method")]),t._v(" "),e("li",[t._v("copy: slice all or use "),e("code",[t._v("copy")]),t._v(" module")]),t._v(" "),e("li",[e("code",[t._v("count(elem)")]),t._v(": count")])])]),t._v(" "),e("li",[t._v("List Comprehension"),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("listone "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nlisttwo "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" listone "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Tuple")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Property")]),t._v(" "),e("ul",[e("li",[t._v("Think of them as similar to lists, but without the extensive functionality that the list class gives you")]),t._v(" "),e("li",[t._v("immutable")]),t._v(" "),e("li",[t._v("Tuples are usually used in cases where a statement or a user-defined function can safely assume that the collection of values i.e. the tuple of values used will not change")]),t._v(" "),e("li",[t._v("can be left value"),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the fastest way to swap two variables in Python")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Syntax")]),t._v(" "),e("ul",[e("li",[t._v("Tuples are defined by specifying items separated by commas within an optional pair of parentheses\n"),e("ul",[e("li",[t._v("explicit parentheses are better than implicit")])])]),t._v(" "),e("li",[t._v("tuple with 0 or 1 items"),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("mytuple "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmytuple "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])])])]),t._v(" "),e("li",[e("p",[t._v("Dictionary, and "),e("code",[t._v("collections.defaultdict")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Concept")]),t._v(" "),e("ul",[e("li",[t._v("Association of keys and values")])])]),t._v(" "),e("li",[e("p",[t._v("Syntax")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("dict1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("keys must be unique and immutable objects (can be a constant)")]),t._v(" "),e("li",[t._v("they are instances/objects of the "),e("code",[t._v("dict")]),t._v(" class\n")])])]),t._v(" "),e("li",[e("p",[t._v("Access: brackets")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("dict1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Operation")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Add")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("dict1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("newkey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newvalue\n")])])])]),t._v(" "),e("li",[e("p",[t._v("delete/remove")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("del")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" dict1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("clear()")]),t._v(" method: remove all")])])])]),t._v(" "),e("li",[e("p",[t._v("Length")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("len(dict1)")])])])]),t._v(" "),e("li",[e("p",[t._v("Check existence")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("in")]),t._v(" operator: keys are checked")])])]),t._v(" "),e("li",[e("p",[t._v("conversation")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("items()")]),t._v(" method: converse dictionary into a tuple list"),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mydict "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" mydict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [('a', 1), ('c', 3), ('b', 2)]")]),t._v("\n")])])])])])])])]),t._v(" "),e("li",[e("p",[t._v("Coordination")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("for")]),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dict1 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# i is keys")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# i, j are keys and values respectively")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Application")]),t._v(" "),e("ul",[e("li",[t._v("keyword arguments (symbol table in compiler design terminology)")])])])])]),t._v(" "),e("li",[e("p",[t._v("Set")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Concept")]),t._v(" "),e("ul",[e("li",[t._v("unordered collections of simple objects")]),t._v(" "),e("li",[t._v("used when the existence of an object in a collection is more important than the order or how many times it occurs")])])]),t._v(" "),e("li",[e("p",[t._v("Syntax")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("setname "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("value1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("operation")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("in")])])]),t._v(" "),e("li",[e("p",[t._v("copy: "),e("code",[t._v("copy()")]),t._v(" method")])]),t._v(" "),e("li",[e("p",[t._v("add: "),e("code",[t._v("add()")]),t._v(" method")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("setname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("relationship: "),e("code",[t._v("issuperset()")]),t._v(" method")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("brick"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("issuperset"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bri"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("delete/remove: "),e("code",[t._v("remove()")]),t._v(" method")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("bri"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remove"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'russia'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("intersection: "),e("code",[t._v("&")]),t._v(" or "),e("code",[t._v("intersection()")]),t._v(" method")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("bri "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" bric\nbri"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("intersection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bric"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])])])]),t._v(" "),e("li",[e("p",[t._v("Strings")]),t._v(" "),e("ul",[e("li",[t._v("see before")]),t._v(" "),e("li",[t._v("operation\n"),e("ul",[e("li",[e("code",[t._v("startswith(prefix, [start, [end]])")]),t._v(" method: return "),e("code",[t._v("True")]),t._v(" if starts with the specified prefix")]),t._v(" "),e("li",[e("code",[t._v("find(sub, [start, [end]])")]),t._v(" method\n"),e("ul",[e("li",[t._v("return the lowest index where the sub is found at "),e("code",[t._v("S[start:end]")])]),t._v(" "),e("li",[t._v("return "),e("code",[t._v("-1")]),t._v(" if failure")])])]),t._v(" "),e("li",[e("code",[t._v("join(iterable)")]),t._v(" join the items of a sequence with the string acting as a delimiter")])])])])]),t._v(" "),e("li",[e("p",[t._v("References")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">>> a = [1, 2, 3]\n>>> b = a\n>>> a = [4, 5, 6]\n>>> a\n[4, 5, 6]\n>>> b\n[1, 2, 3]\n>>> a = [1, 2, 3]\n>>> b = a\n>>> a[0], a[1], a[2] = 4, 5, 6\n>>> a\n[4, 5, 6]\n>>> b\n[4, 5, 6]\n")])])]),e("ul",[e("li",[t._v("binding the name to the project")])])])]),t._v(" "),e("h1",{attrs:{id:"libraries"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraries"}},[t._v("#")]),t._v(" Libraries")]),t._v(" "),e("ol",[e("li",[e("p",[e("a",{attrs:{href:"https://docs.python.org/2/library/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Library References"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"http://docs.python.org/2/library/pdb.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("debugging"),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"http://docs.python.org/2/library/argparse.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("handling command line options"),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"http://docs.python.org/2/library/re.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("regular expressions"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"os"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#os"}},[t._v("#")]),t._v(" "),e("code",[t._v("os")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("make directory")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" os"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exists"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target_dir"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    os"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mkdir"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target_dir"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("ul",[e("li",[t._v("Windows directories\n"),e("ul",[e("li",[t._v("use "),e("code",[t._v("'C:\\\\Documents'")]),t._v(" or "),e("code",[t._v("r’C: \\Documents'")])]),t._v(" "),e("li",[t._v("do not use "),e("code",[t._v("'C:\\Documents'")])])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("os.sep")])]),t._v(" "),e("ul",[e("li",[t._v("gives the directory separator according to your operating system\n"),e("ul",[e("li",[e("code",[t._v("'/'")]),t._v(" in GNU/Linux and Unix")]),t._v(" "),e("li",[e("code",[t._v("'\\\\'")]),t._v(" in Windows")]),t._v(" "),e("li",[e("code",[t._v("':'")]),t._v(" in Macintosh")])])]),t._v(" "),e("li",[e("code",[t._v("'/'")]),t._v(" can be used in Windows?")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("os.system(command)")]),t._v(": Execute the command (a string) in a subshell")]),t._v(" "),e("ul",[e("li",[t._v("returns "),e("code",[t._v("0")]),t._v(" if the command was successfully, else it returns an error number")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("os.getenv(key, default=None)")]),t._v(": Get an environment variable")]),t._v(" "),e("ul",[e("li",[t._v("return default value if the key does not exist")]),t._v(" "),e("li",[t._v("keys\n"),e("ul",[e("li",[t._v("keys of the dict "),e("code",[t._v("os.envrion")])]),t._v(" "),e("li",[e("code",[t._v("'HOME'")]),t._v(" (Unix), "),e("code",[t._v("os.path.join(os.getenv('HOMEDRIVE'), os.getenv('HOMEPATH'))")]),t._v(" (Windows)")])])])])]),t._v(" "),e("li",[e("p",[t._v("current directory: "),e("code",[t._v("os.getcwd()")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("os.curdir")]),t._v(": .")]),t._v(" "),e("li",[t._v("equivalent to "),e("code",[t._v("os.path.realpath(os.curdir)")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("os.path")]),t._v(": module for common pathname manipulations")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("os.path.join(path, *paths)")]),t._v(": Join one or more path components intelligently\n"),e("ul",[e("li",[t._v("If a component is an absolute path, all previous components are thrown away and joining continues from the absolute path component")]),t._v(" "),e("li",[t._v("If a component contains a drive letter, all previous components are thrown away and the drive letter is reset")])])]),t._v(" "),e("li",[e("code",[t._v("os.path.split(path)")]),t._v(": Split a pathname\n"),e("ul",[e("li",[t._v("Return tuple "),e("code",[t._v("(head, tail)")]),t._v(" "),e("ul",[e("li",[t._v("where tail is the last pathname component")]),t._v(" "),e("li",[t._v("The tail part will never contain a slash")]),t._v(" "),e("li",[t._v("if path ends in a slash, tail will be empty")]),t._v(" "),e("li",[t._v("If there is no slash in path, head will be empty")])])])])]),t._v(" "),e("li",[e("code",[t._v("os.path.realpath(path)")]),t._v(" "),e("ul",[e("li",[t._v("Return the canonical path of the specified filename, eliminating any symbolic links encountered in the path (if they are supported by the operating system)")])])]),t._v(" "),e("li",[e("code",[t._v("os.path.relpath(path[, start])")]),t._v(" "),e("ul",[e("li",[t._v("Return a relative filepath to path either from the "),e("em",[t._v("start")]),t._v(" directory")]),t._v(" "),e("li",[e("em",[t._v("start")]),t._v(" defaults to "),e("code",[t._v("os.curdir")])])])]),t._v(" "),e("li",[e("code",[t._v("os.path.getsize(path)")]),t._v(": Return the size, in bytes, of "),e("em",[t._v("path")]),t._v(" "),e("ul",[e("li",[t._v("Raise "),e("code",[t._v("os.error")]),t._v(" if the file does not exist or is inaccessible")])])]),t._v(" "),e("li",[e("code",[t._v("os.path.getmtime(path)")]),t._v(": Return the time of last modification of "),e("em",[t._v("path")]),t._v(" "),e("ul",[e("li",[t._v("The return value is a number giving the number of seconds since the epoch\n"),e("ul",[e("li",[t._v("convert to local time: "),e("code",[t._v("time.ctime([secs])")])])])]),t._v(" "),e("li",[t._v("Raise "),e("code",[t._v("os.error")]),t._v(" if the file does not exist or is inaccessible")])])])])]),t._v(" "),e("li",[e("p",[t._v("Change directory to the current directory")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("os"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chdir"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" os"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("realpath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" sys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"time"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#time"}},[t._v("#")]),t._v(" "),e("code",[t._v("time")])]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("time.strftime(format, tuple)")]),t._v(": convert a time tuple to a string according to a format specification")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("time.strftime('%Y%m%d%H%M%S')")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("time.sleep(seconds)")])]),t._v(" "),e("ul",[e("li",[t._v("Delay execution for a given number of seconds")]),t._v(" "),e("li",[t._v("argument may be a floating point number")])])])]),t._v(" "),e("h2",{attrs:{id:"sys"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sys"}},[t._v("#")]),t._v(" "),e("code",[t._v("sys")])]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("sys.argv")]),t._v(": argument list")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("sys.stdout.flush()")]),t._v(": Flush the internal I/O buffer")]),t._v(" "),e("ul",[e("li",[t._v("when used after "),e("code",[t._v("print")]),t._v(", contents are immediately printed")])])])]),t._v(" "),e("h2",{attrs:{id:"logging"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logging"}},[t._v("#")]),t._v(" "),e("code",[t._v("logging")])]),t._v(" "),e("p",[t._v("tbc")]),t._v(" "),e("h2",{attrs:{id:"platform"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#platform"}},[t._v("#")]),t._v(" "),e("code",[t._v("platform")])]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("platform.platform(aliased=0, terse=0)")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" platform"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("platform"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Windows-7-6.1.7601-SP1'")]),t._v("\n")])])]),e("ul",[e("li",[t._v("Returns a single identifying the underlying platform with as much information as possible")]),t._v(" "),e("li",[t._v("the output is intended to be human readable rather than machine parsable")]),t._v(" "),e("li",[t._v("If "),e("code",[t._v("aliased")]),t._v(" is true, the function will use aliases, e.g. SunOS will be reported as Solaris")]),t._v(" "),e("li",[t._v("If "),e("code",[t._v("terse")]),t._v(" is true, the function returns only the absolute minimum information needed to identify the platform")])])])]),t._v(" "),e("h1",{attrs:{id:"class"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class"}},[t._v("#")]),t._v(" Class")]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("self")])]),t._v(" "),e("ul",[e("li",[t._v("name for referring fields (member variables): "),e("code",[t._v("self.var")])]),t._v(" "),e("li",[t._v("methods must have an extra first name that has to be added to the beginning of the parameter list")]),t._v(" "),e("li",[t._v("do not give a value for this parameter when you call the method, Python will provide it")]),t._v(" "),e("li",[e("code",[t._v("myobject.method(arg1, arg2)")]),t._v(" is automatically converted by Python into "),e("code",[t._v("MyClass.method(myobject, arg1, arg2)")])]),t._v(" "),e("li",[t._v("attribute reference: refer to the variables and methods of the same object using the "),e("code",[t._v("self")]),t._v(" only")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("class")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# official")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("myclass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Special Methods: "),e("a",{attrs:{href:"https://docs.python.org/2/reference/datamodel.html#special-method-names",target:"_blank",rel:"noopener noreferrer"}},[t._v("manual"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[e("code",[t._v("__init__(self, ...)")]),t._v(" method")]),t._v(" "),e("li",[e("code",[t._v("__getitem__(self, key)")]),t._v(" method: indexing")]),t._v(" "),e("li",[e("code",[t._v("__str__(self)")]),t._v(" method: for "),e("code",[t._v("print")]),t._v(" and "),e("code",[t._v("str()")])]),t._v(" "),e("li",[e("code",[t._v("__lt__(self, other)")]),t._v(": override the less than operator "),e("code",[t._v("<")])]),t._v(" "),e("li",[e("code",[t._v("__len__(self)")]),t._v(": for "),e("code",[t._v("len()")]),t._v(" function")])])]),t._v(" "),e("li",[e("p",[t._v("Class variables and object variables")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Class Variables, a.k.a. static member variable")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Robot")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A class variable, counting the number of robots")]),t._v("\n    population "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),e("ul",[e("li",[t._v("refer: "),e("code",[t._v("Robot.population")]),t._v(", or "),e("code",[t._v("self.__class__.population")])])])]),t._v(" "),e("li",[e("p",[t._v("Object variables")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("self.var")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Class method")]),t._v(" "),e("ul",[e("li",[t._v("def: using a decorator (tbc): "),e("code",[t._v("@classmethod")]),t._v(" "),e("ul",[e("li",[t._v("take the class name as implicit argument")])])]),t._v(" "),e("li",[t._v("call: "),e("code",[t._v("classname.classmethod1()")])])])]),t._v(" "),e("li",[e("p",[t._v("static method")]),t._v(" "),e("ul",[e("li",[t._v("def: use "),e("code",[t._v("@staticmethod")])])])]),t._v(" "),e("li",[e("p",[t._v("Encapsulation")]),t._v(" "),e("ul",[e("li",[t._v("All class members are public")]),t._v(" "),e("li",[t._v("make private: using the double underscore prefix such as "),e("code",[t._v("__privatevar")])]),t._v(" "),e("li",[t._v("all the methods are virtual in Python")])])]),t._v(" "),e("li",[e("p",[t._v("Inherit")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("polymorphism")])]),t._v(" "),e("li",[e("p",[t._v("Syntax")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("classdef    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"class"')]),t._v(" classname "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("inheritance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" suite\ninheritance "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"("')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("expression_list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),t._v("\nclassname   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("  identifier\n")])])]),e("p",[t._v("where expression_list is the base class names in a tuple")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("__init__()")]),t._v(": initialize the base class part of the object")]),t._v(" "),e("ul",[e("li",[t._v("call the "),e("code",[t._v("__init__()")]),t._v(" method of the base class is explicitly called using the self variable")]),t._v(" "),e("li",[t._v("Python does not automatically call the constructor of the base class")])])]),t._v(" "),e("li",[e("p",[t._v("call methods of the base class in subclasses")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("baseclassname.method()")])]),t._v(" "),e("li",[t._v("pass in the "),e("code",[t._v("self")]),t._v(" variable along with any arguments")])])]),t._v(" "),e("li",[e("p",[t._v("when calling a method")]),t._v(" "),e("ul",[e("li",[t._v("Python always starts looking for methods in the actual type")]),t._v(" "),e("li",[t._v("If it could not find the method, it starts looking at the methods belonging to its base classes one by one in the order they are specified in the tuple in the class definition")])])])])])]),t._v(" "),e("h1",{attrs:{id:"i-o"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i-o"}},[t._v("#")]),t._v(" I/O")]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("raw_input([prompt])")]),t._v(": Read a string from standard input")]),t._v(" "),e("ul",[e("li",[t._v("The trailing newline is stripped")]),t._v(" "),e("li",[t._v("If the user hits EOF (Unix: Ctrl-D, Windows: Ctrl-Z+Return), raise EOFError")]),t._v(" "),e("li",[t._v("The prompt string, if given, is printed without a trailing newline before reading")])])]),t._v(" "),e("li",[e("p",[t._v("File I/O")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("open and close example")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("poem "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Life is short, use Python.'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Open for 'w'riting")]),t._v("\nf "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'poem.txt'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'w'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Write text to file")]),t._v("\nf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("poem"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Close the file")]),t._v("\nf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[e("code",[t._v("with")]),t._v(" automatically closes the file")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("open(name, mode=None, buffering=None)")])]),t._v(" "),e("ul",[e("li",[t._v("the file will be made if it does not exist")]),t._v(" "),e("li",[t._v("mode\n"),e("ul",[e("li",[e("code",[t._v("'r'")]),t._v(" read, "),e("code",[t._v("'w'")]),t._v(" write, "),e("code",[t._v("'a'")]),t._v(" append, "),e("code",[t._v("'r+'")]),t._v(" both reading and writing")]),t._v(" "),e("li",[e("code",[t._v("'t'")]),t._v(" text, "),e("code",[t._v("'b'")]),t._v(" binary")]),t._v(" "),e("li",[t._v("default: "),e("code",[t._v("'rt'")])])])])])]),t._v(" "),e("li",[e("p",[t._v("read")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("file.readline([size])")]),t._v(": retain a newline\n"),e("ul",[e("li",[t._v("size: non-negative, limits the maximum number of bytes to return")]),t._v(" "),e("li",[t._v("return an empty string at EOF")])])]),t._v(" "),e("li",[e("code",[t._v("file.read([size])")]),t._v(": read at most size bytes and return as a string\n"),e("ul",[e("li",[t._v("if size argument is negative or omitted, read until EOF")]),t._v(" "),e("li",[t._v("note when in non-blocking mode")])])]),t._v(" "),e("li",[e("code",[t._v("file.readlines()")]),t._v(": read all the lines of a file in a list\n"),e("ul",[e("li",[t._v("same as "),e("code",[t._v("list(f)")])])])])])]),t._v(" "),e("li",[e("p",[t._v("write")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("file.write(str)")]),t._v(": write string to file, return "),e("code",[t._v("None")])]),t._v(" "),e("li",[e("code",[t._v("file.writelines(sequence_of_strings)")]),t._v(" "),e("ul",[e("li",[t._v("newlines are added")]),t._v(" "),e("li",[t._v("sequence can be any iterable object producing strings")]),t._v(" "),e("li",[t._v("equivalent to calling "),e("code",[t._v("write()")]),t._v(" for each string")])])])])]),t._v(" "),e("li",[e("p",[t._v("position")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("file.tell()")]),t._v(" "),e("ul",[e("li",[t._v("return the current file position, an integer")])])]),t._v(" "),e("li",[e("code",[t._v("file.seek(offset[, whence])")]),t._v(": move to a new file position, return "),e("code",[t._v("None")]),t._v(" "),e("ul",[e("li",[t._v("offset: byte count")]),t._v(" "),e("li",[t._v("whence\n"),e("ul",[e("li",[t._v("0: from start of file (default)")]),t._v(" "),e("li",[t._v("1: move relative to current position")]),t._v(" "),e("li",[t._v("2: move relative to the end of file")])])])])])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("with")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"poem.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" f"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" line "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" f"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" line"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),e("ul",[e("li",[t._v("Acquiring a resource in the "),e("code",[t._v("try")]),t._v(" block and subsequently releasing the resource in the "),e("code",[t._v("finally")]),t._v(" block")]),t._v(" "),e("li",[t._v("mechanism\n"),e("ul",[e("li",[t._v("it calls the "),e("code",[t._v("file.__enter__()")]),t._v(" function at the start and calls "),e("code",[t._v("file.__exit__()")]),t._v(" at the end")]),t._v(" "),e("li",[t._v("the code that we would have written in a "),e("code",[t._v("finally")]),t._v(" block should be taken care of automatically by the "),e("code",[t._v("exit")]),t._v(" method")])])])])]),t._v(" "),e("li",[e("p",[t._v("Pickle")]),t._v(" "),e("ul",[e("li",[t._v("can store any plain Python object in a file and then get it back later")]),t._v(" "),e("li",[t._v("store (pickling): "),e("code",[t._v("open")]),t._v(" the file in write binary mode and then call "),e("code",[t._v("pickle.dump()")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("pickle.dump(obj, file)")])])])]),t._v(" "),e("li",[t._v("retrieve (unpickling): "),e("code",[t._v("pickle.load(file)")]),t._v(": returns the object")])])])]),t._v(" "),e("h1",{attrs:{id:"exceptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exceptions"}},[t._v("#")]),t._v(" Exceptions")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Error handler")])]),t._v(" "),e("li",[e("p",[t._v("Handling Exceptions: "),e("code",[t._v("try...except")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    text "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("raw_input")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Enter something --\x3e '")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" EOFError"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Why did you do an EOF on me?'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" KeyboardInterrupt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'You cancelled the operation.'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'You entered {}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("ul",[e("li",[e("code",[t._v("try")]),t._v(": put all the statements that might raise exceptions/errors")]),t._v(" "),e("li",[e("code",[t._v("except")]),t._v(" "),e("ul",[e("li",[t._v("handlers for the appropriate errors/exceptions")]),t._v(" "),e("li",[t._v("can handle a single specified error or exception, or a parenthesized list of errors/exceptions")]),t._v(" "),e("li",[t._v("If no names of errors or exceptions are supplied, it will handle all errors and exceptions")]),t._v(" "),e("li",[t._v("there has to be at least one "),e("code",[t._v("except")]),t._v(" clause associated with every "),e("code",[t._v("try")]),t._v(" clause")]),t._v(" "),e("li",[t._v("user-defined override default")])])]),t._v(" "),e("li",[e("code",[t._v("else")]),t._v(": This clause is executed if no exception occurs")])])]),t._v(" "),e("li",[e("p",[t._v("Raising Exceptions: "),e("code",[t._v("raise")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("The error or exception that you can raise should be a class which directly or indirectly must be a derived class of the "),e("code",[t._v("Exception")]),t._v(" class")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShortInputException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Exception"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''A user-defined exception class.'''")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" atleast"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        Exception"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" length\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("atleast "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" atleast\n")])])])]),t._v(" "),e("li",[e("p",[t._v("throw an error, with or without initialization")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    text "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("raw_input")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Enter something --\x3e '")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" ShortInputException"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... Other work can continue as usual here")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("use of exception")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" ShortInputException "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ShortInputException: The input was '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" \\\n           "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{0} long, expected at least {1}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\\\n           "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("atleast"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'No exception was raised.'")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("finally")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n")])])]),e("ul",[e("li",[t._v("executed whether or not an exception was raised\n"),e("ul",[e("li",[t._v("can be used to ensure that the file object is closed properly")])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("assert")]),t._v(": check")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('assert_stmt ::=  "assert" expression ["," expression]\n')])])]),e("ul",[e("li",[e("p",[t._v("The simple form, "),e("code",[t._v("assert expression")]),t._v(", is equivalent to")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __debug__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" expression"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AssertionError\n")])])])]),t._v(" "),e("li",[e("p",[t._v("The extended form, "),e("code",[t._v("assert expression1, expression2")]),t._v(", is equivalent to")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __debug__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" expression1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AssertionError"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])])]),t._v(" "),e("h1",{attrs:{id:"decorator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#decorator"}},[t._v("#")]),t._v(" Decorator")]),t._v(" "),e("ol",[e("li",[t._v("can be imagined to be a shortcut to calling a wrapper function"),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@classmethod")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("funcname")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parameter_list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# equivalent to")]),t._v("\nfuncname "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("classmethod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("funcname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),e("p",[t._v("tbc")]),t._v(" "),e("h1",{attrs:{id:"python-2-to-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python-2-to-3"}},[t._v("#")]),t._v(" Python 2 to 3")]),t._v(" "),e("ol",[e("li",[e("p",[e("a",{attrs:{href:"https://docs.python.org/2/library/2to3.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("2to3 - Automated Python 2 to 3 code translation"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"http://pythonhosted.org/six/",target:"_blank",rel:"noopener noreferrer"}},[t._v('"Six" library'),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"http://lucumr.pocoo.org/2013/5/21/porting-to-python-3-redux/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://lucumr.pocoo.org/2013/5/21/porting-to-python-3-redux/"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"http://pydanny.com/experiences-with-django-python3.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://pydanny.com/experiences-with-django-python3.html"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://docs.djangoproject.com/en/dev/topics/python3/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.djangoproject.com/en/dev/topics/python3/"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"http://www.reddit.com/r/Python/comments/22ovb3/what_are_the_advantages_to_python_3x/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.reddit.com/r/Python/comments/22ovb3/what_are_the_advantages_to_python_3x/"),e("OutboundLink")],1)])])]),t._v(" "),e("h1",{attrs:{id:"gui"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gui"}},[t._v("#")]),t._v(" GUI")]),t._v(" "),e("ul",[e("li",[t._v("Tkinter")]),t._v(" "),e("li",[t._v("Kivy\n"),e("ul",[e("li",[e("a",{attrs:{href:"http://kivy.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://kivy.org"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[t._v("PyGTK\n"),e("ul",[e("li",[t._v("This is the Python binding for the GTK+ toolkit which is the foundation upon which GNOME is built. GTK+ has many quirks in usage but once you become comfortable, you can create GUI apps fast. The Glade graphical interface designer is indispensable. The documentation is yet to improve. GTK+ works well on GNU/Linux but its port to Windows is incomplete. You can create both free as well as proprietary software using GTK+. To get started, read the "),e("a",{attrs:{href:"http://www.pygtk.org/tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("PyGTK tutorial"),e("OutboundLink")],1),t._v(".")])])]),t._v(" "),e("li",[t._v("PyQt\n"),e("ul",[e("li",[t._v("This is the Python binding for the Qt toolkit which is the foundation upon which the KDE is built. Qt is extremely easy to use and very powerful especially due to the Qt Designer and the amazing Qt documentation. PyQt is free if you want to create open source (GPL'ed) software and you need to buy it if you want to create proprietary closed source software. Starting with Qt 4.5 you can use it to create non-GPL software as well. To get started, read about "),e("a",{attrs:{href:"http://qt-project.org/wiki/PySide",target:"_blank",rel:"noopener noreferrer"}},[t._v("PySide"),e("OutboundLink")],1),t._v(".")])])]),t._v(" "),e("li",[t._v("wxPython\n"),e("ul",[e("li",[t._v("This is the Python bindings for the wxWidgets toolkit. wxPython has a learning curve associated with it. However, it is very portable and runs on GNU/Linux, Windows, Mac and even embedded platforms. There are many IDEs available for wxPython which include GUI designers as well such as "),e("a",{attrs:{href:"http://spe.pycs.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SPE (Stani's Python Editor)"),e("OutboundLink")],1),t._v(" and the "),e("a",{attrs:{href:"http://wxglade.sourceforge.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("wxGlade"),e("OutboundLink")],1),t._v(" GUI builder. You can create free as well as proprietary software using wxPython. To get started, read the "),e("a",{attrs:{href:"http://zetcode.com/wxpython/",target:"_blank",rel:"noopener noreferrer"}},[t._v("wxPython tutorial"),e("OutboundLink")],1),t._v(".")])])]),t._v(" "),e("li",[t._v("For more choices, see the "),e("a",{attrs:{href:"http://www.python.org/cgi-bin/moinmoin/GuiProgramming",target:"_blank",rel:"noopener noreferrer"}},[t._v("GuiProgramming wiki page at the official python website"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("li",[t._v("For a more detailed and comprehensive analysis, see Page 26 of the "),e("a",{attrs:{href:"http://archive.pythonpapers.org/ThePythonPapersVolume3Issue1.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("'The Python Papers, Volume 3, Issue 1' (PDF)"),e("OutboundLink")],1),t._v(".")])])])}),[],!1,null,null,null);e.default=n.exports}}]);