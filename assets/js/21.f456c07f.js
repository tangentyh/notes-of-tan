(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{217:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"Java-Basics"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Java-Basics"}},[t._v("#")]),t._v(" Java Basics")]),t._v(" "),s("h2",{attrs:{id:"Docs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Docs"}},[t._v("#")]),t._v(" Docs")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("docs")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("oracle JDK 1.8"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.oracle.com/javase/9/jshell/toc.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("jshell"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/technotes/tools/unix/toc.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java Platform, Standard Edition Tools Reference for Oracle JDK on Solaris, Linux, and OS X, Release 8"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://download.oracle.com/otndocs/jcp/jdbc-4_3-mrel3-spec/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSR-000221 JDBC API 4.3 Maintenance Release 3"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://stackoverflow.com/questions/6986993/how-to-download-javadoc-to-read-offline/36497090",target:"_blank",rel:"noopener noreferrer"}},[t._v("download"),s("OutboundLink")],1),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.oracle.com/technetwork/java/javase/documentation/jdk8-doc-downloads-2133158.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java Development Kit 8 Documentation"),s("OutboundLink")],1)])])])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"http://docs.oracle.com/javase/specs",target:"_blank",rel:"noopener noreferrer"}},[t._v("specification"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.oracle.com/javase/specs/jvms/se8/html/",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Java® Virtual Machine Specification"),s("OutboundLink")],1)])])])]),t._v(" "),s("h2",{attrs:{id:"CLI"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#CLI"}},[t._v("#")]),t._v(" CLI")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("javac")]),t._v(" — compile")]),t._v(" "),s("ul",[s("li",[t._v("timestamps aware — auto compile dependencies and recompile when source file updated according to timestamps")]),t._v(" "),s("li",[t._v("extra options — "),s("code",[t._v("--help-extra")]),t._v(", "),s("code",[t._v("-X")])]),t._v(" "),s("li",[s("code",[t._v("-Xlint:<key>(,<key>)*")]),t._v(" — enable warnings\n"),s("ul",[s("li",[s("code",[t._v("-Xlint")]),t._v(" or "),s("code",[t._v("-Xlint:all")]),t._v(" — all checks")]),t._v(" "),s("li",[s("code",[t._v("-Xlint:deprecation")]),t._v(" — Same as "),s("code",[t._v("-deprecation")]),t._v(", checks for deprecated methods")]),t._v(" "),s("li",[s("code",[t._v("-Xlint:fallthrough")]),t._v(" — Checks for missing "),s("code",[t._v("break")]),t._v(" statements in "),s("code",[t._v("switch")]),t._v(" statements")]),t._v(" "),s("li",[s("code",[t._v("-Xlint:finally")]),t._v(" — Warns about finally clauses that cannot complete normally")]),t._v(" "),s("li",[s("code",[t._v("-Xlint:none")]),t._v(" — Carries out none of the checks")]),t._v(" "),s("li",[s("code",[t._v("-Xlint:path")]),t._v(" — Checks that all directories on the class path and source path exist")]),t._v(" "),s("li",[s("code",[t._v("-Xlint:serial")]),t._v(" — Warns about serializable classes without "),s("code",[t._v("serialVersionUID")])]),t._v(" "),s("li",[s("code",[t._v("-Xlint:unchecked")]),t._v(" — Warns of unsafe conversions between generic and raw types")])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java")]),t._v(" — execute")]),t._v(" "),s("ul",[s("li",[t._v("synopsis"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("java [options] <mainclass> [args...]\n    (to execute a class)\njava [options] -m <module>[/<mainclass>] [args...]\njava [options] --module <module>[/<mainclass>] [args...]\n    (to execute the main class in a module)\n")])])]),s("ul",[s("li",[t._v("args in "),s("code",[t._v("public static void main(String[] args)")]),t._v(" — class name is not included"),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("java Message -g cruel world\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# args: ["-g", "cruel", "world"]')]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("jar — "),s("code",[t._v("java -jar MyProgram.jar")]),t._v(", see "),s("a",{attrs:{href:"#JAR"}},[t._v("Jar")]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("java [options] -jar <jarfile> [args...]\n")])])])]),t._v(" "),s("li",[t._v("single source file program — compile and run, no "),s("code",[t._v(".class")]),t._v(" file generated"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("java [options] <sourcefile> [args]\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("java ClassName.java\n")])])])])])]),t._v(" "),s("li",[s("code",[t._v("-cp")]),t._v(" or "),s("code",[t._v("-classpath")]),t._v(" — specify the class path"),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("java -classpath /home/user/classdir:.:/home/user/archives/archive.jar MyProg\n")])])])]),t._v(" "),s("li",[s("code",[t._v("-verbose")]),t._v(" — watch class loading")]),t._v(" "),s("li",[s("code",[t._v("java -X")]),t._v(" — a listing of all nonstandard options\n"),s("ul",[s("li",[s("code",[t._v("-Xprof")]),t._v(" — profiling, support was removed in 10.0")]),t._v(" "),s("li",[s("code",[t._v("-XshowSettings:properties")]),t._v(", "),s("code",[t._v("-XshowSettings:locale")])]),t._v(" "),s("li",[s("code",[t._v("-Xverify:none")]),t._v(", or "),s("code",[t._v("-noverify")]),t._v(" — turn off verification when loading classes")]),t._v(" "),s("li",[t._v("memory related — see "),s("RouterLink",{attrs:{to:"/backend/java/JVM.html#Memory"}},[t._v("JVM")])],1)])]),t._v(" "),s("li",[t._v("enable and disable assertion — see "),s("a",{attrs:{href:"#Assertion"}},[t._v("Assertion")])]),t._v(" "),s("li",[t._v("system properties — "),s("code",[t._v("-D")]),t._v(", "),s("code",[t._v("System::getProperty")]),t._v(", "),s("code",[t._v("System::getProperties")]),t._v(" "),s("ul",[s("li",[t._v("log related — see "),s("a",{attrs:{href:"#Logging"}},[t._v("Logging")]),t._v(" "),s("ul",[s("li",[t._v("log configuration file location — "),s("code",[t._v("-Djava.util.logging.config.file=configFile")])])])]),t._v(" "),s("li",[t._v("see "),s("RouterLink",{attrs:{to:"/backend/java/javaUtils.html#Legacy-Collections"}},[s("code",[t._v("Properties")])]),t._v(" for list of system properties")],1)])]),t._v(" "),s("li",[t._v("remote debug"),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("java -Xdebug -Xrunjdwp:server"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("y,transport"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dt_socket,address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v(",suspend"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -jar target/myapplication-0.0.1-SNAPSHOT.jar "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remote debug")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("javaw")]),t._v(" — "),s("code",[t._v("java")]),t._v(" without a shell window")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("javadoc")]),t._v(" — generates HTML documentation from your source files")]),t._v(" "),s("ul",[s("li",[t._v("information source\n"),s("ul",[s("li",[t._v("Packages")]),t._v(" "),s("li",[t._v("Public classes and interfaces")]),t._v(" "),s("li",[t._v("Public and protected fields")]),t._v(" "),s("li",[t._v("Public and protected constructors and methods")])])]),t._v(" "),s("li",[t._v("assets directory — "),s("code",[t._v("/doc-files")]),t._v(" directory for assets")]),t._v(" "),s("li",[t._v("syntax\n"),s("ul",[s("li",[s("code",[t._v("/** ... */")])]),t._v(" "),s("li",[t._v("tags "),s("code",[t._v("@")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("@param variable description")])]),t._v(" "),s("li",[s("code",[t._v("@return description")])]),t._v(" "),s("li",[s("code",[t._v("@throws class description")])]),t._v(" "),s("li",[t._v("more")])])]),t._v(" "),s("li",[t._v("HTML tags\n"),s("ul",[s("li",[t._v("use "),s("code",[t._v("{@code ... }")]),t._v(" instead of "),s("code",[t._v("<code>...</code>")]),t._v(" to cope with escaping of "),s("code",[t._v("^")])])])])])]),t._v(" "),s("li",[t._v("example"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Raises the salary of an employee.\n * @param byPercent the percentage by which to raise the salary (e.g. 10 means 10%)\n * @return the amount of the raise\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("raiseSalary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" byPercent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("more")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("javap")]),t._v(" — print java class information")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("-v")]),t._v(" — verbose")]),t._v(" "),s("li",[s("code",[t._v("-c")]),t._v(" — Disassemble the code\n"),s("ul",[s("li",[t._v("can be used to inspect if atomic")])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("jshell")]),t._v(" — REPL from Java 9")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("jconsole")]),t._v(" — Java Monitoring and Management Console")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("jmap")]),t._v(" and "),s("code",[t._v("jhat")]),t._v(" (deprecated) for heap dump and examining dump — see "),s("a",{attrs:{href:"#Debugging"}},[t._v("Debugging")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("serialver")]),t._v(" — get serial version ID")])]),t._v(" "),s("li",[s("p",[t._v("sign")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("keytool")]),t._v(" — signatures, certificates\n"),s("ul",[s("li",[t._v("password for cacerts — "),s("code",[t._v("changeit")])])])]),t._v(" "),s("li",[s("code",[t._v("jarsigner")]),t._v(" — add a signature to a (jar) file")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("javah")]),t._v(" — produces a C header file from class files for "),s("code",[t._v("native")]),t._v(" methods")])])]),t._v(" "),s("h3",{attrs:{id:"JAR"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#JAR"}},[t._v("#")]),t._v(" JAR")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("jar")]),t._v(" — creates an archive for classes and resources, and can manipulate or restore individual classes or resources from an archive")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("jar "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--release VERSION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-C dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" files"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/technotes/guides/jar/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docs"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("compression — ZIP")]),t._v(" "),s("li",[t._v("similar to "),s("code",[t._v("tar")]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("jar cvf JARFileName File1 File2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])])]),t._v(" "),s("li",[s("code",[t._v(".exe")]),t._v(" wrapper — Launch4J, IzPack, etc.")]),t._v(" "),s("li",[t._v("resources\n"),s("ul",[s("li",[t._v("resources finding — delegates to class loader, which remembers how to locate the class, so it can then search for the associated resource in the same location")]),t._v(" "),s("li",[s("code",[t._v("URL Class::getResource(String name)")]),t._v(", "),s("code",[t._v("InputStream Class::getResourceAsStream(String name)")])]),t._v(" "),s("li",[t._v("resource name\n"),s("ul",[s("li",[t._v("absolute — starts with "),s("code",[t._v("/")])]),t._v(" "),s("li",[t._v("relative — "),s("code",[t._v("data/text/about.txt")])])])])])])])]),t._v(" "),s("li",[s("p",[t._v("manifest")]),t._v(" "),s("div",{staticClass:"language-manifest extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Manifest-Version: 1.0\nlines describing this archive\n\nName: Woozle.class\nlines describing this file\nName: com/mycompany/mypkg/\nlines describing this package\n")])])]),s("ul",[s("li",[t._v("each jar file contains a "),s("code",[t._v("META-INF/MANIFEST.MF")]),t._v(" manifest file")]),t._v(" "),s("li",[t._v("syntax — key-value entries\n"),s("ul",[s("li",[t._v("main section — starts with "),s("code",[t._v("Manifest-Version")]),t._v(", applies to the whole JAR file")]),t._v(" "),s("li",[t._v("Subsequent entries — starts with "),s("code",[t._v("Name")]),t._v(", can specify properties of named entities such as individual files, packages, or URLs")]),t._v(" "),s("li",[t._v("section delimiter — blank lines")]),t._v(" "),s("li",[t._v("file end — the file must end with a newline")])])]),t._v(" "),s("li",[t._v("edit manifest"),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("jar cfm JARFileName ManifestFileName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create")]),t._v("\njar ufm MyArchive.jar manifest-additions.mf "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# update")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("specify entry point for execution\n"),s("ul",[s("li",[s("code",[t._v("jar -e")]),t._v(" option")]),t._v(" "),s("li",[s("code",[t._v("Main-Class")]),t._v(" in manifest")]),t._v(" "),s("li",[t._v("execution — "),s("code",[t._v("java -jar MyProgram.jar")])])])]),t._v(" "),s("li",[t._v("sealing — a package can have no more classes, "),s("code",[t._v("Sealed: boolean")]),t._v(", "),s("code",[t._v("false")]),t._v(" by default"),s("div",{staticClass:"language-manifest extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Name: com/mycompany/util/\nSealed: true\n")])])]),s("ul",[s("li",[t._v("global default defined in main section")])])])])])]),t._v(" "),s("h2",{attrs:{id:"Philosophy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Philosophy"}},[t._v("#")]),t._v(" Philosophy")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("class based")]),t._v(" "),s("ul",[s("li",[t._v("everything inside class")])])]),t._v(" "),s("li",[s("p",[t._v("camelCase naming")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Character.isJavaIdentifierStart()")]),t._v(" and "),s("code",[t._v("Character.isJavaIdentifierPart()")])]),t._v(" "),s("li",[s("code",[t._v("$")]),t._v(" is intended for names that are generated by the Java compiler and other tools")])])]),t._v(" "),s("li",[s("p",[t._v("curly braces and semicolons")])]),t._v(" "),s("li",[s("p",[t._v("initialize local variables before read otherwise compilation error")])]),t._v(" "),s("li",[s("p",[t._v("does not have operator overloading")])])]),t._v(" "),s("h3",{attrs:{id:"Control-Flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Control-Flow"}},[t._v("#")]),t._v(" Control Flow")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("no block variable shadowing — may not declare identically named variables in two nested blocks")]),t._v(" "),s("ul",[s("li",[t._v("in JS and C++ inner one shadows outer one")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("switch")])]),t._v(" "),s("ul",[s("li",[t._v("A case label can be\n"),s("ul",[s("li",[t._v("primitive type expressions — a constant expression of type "),s("code",[t._v("char")]),t._v(" , "),s("code",[t._v("byte")]),t._v(" , "),s("code",[t._v("short")]),t._v(" , or "),s("code",[t._v("int")])]),t._v(" "),s("li",[s("code",[t._v("Enum")]),t._v(" — like "),s("code",[t._v("with")]),t._v(" in JS"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),t._v(" sz "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" SMALL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// no need to use Size.SMALL")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// . . .")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// . . .")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("strings — Starting with Java SE 7, a string literal, uses "),s("code",[t._v("hashCode()")]),t._v(" behind scenes")])])])])]),t._v(" "),s("li",[s("p",[t._v("labeled "),s("code",[t._v("break")]),t._v(" and "),s("code",[t._v("continue")]),t._v(" — for labeled blocks, can only jump out of a block, never into a block")])]),t._v(" "),s("li",[s("p",[t._v("iterator — "),s("code",[t._v("for (variable : collection) statement")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("collection")]),t._v(" — an array or an object of a class that implements the "),s("code",[t._v("Iterable")]),t._v(" interface")]),t._v(" "),s("li",[t._v("see "),s("RouterLink",{attrs:{to:"/backend/java/javaUtils.html#Collections"}},[t._v("Collections")])],1)])]),t._v(" "),s("li",[s("p",[t._v("vararg parameter — "),s("code",[t._v("...")])]),t._v(" "),s("ul",[s("li",[t._v("if only an array passed, then that array is used, without nesting")])])])]),t._v(" "),s("h3",{attrs:{id:"Package"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Package"}},[t._v("#")]),t._v(" Package")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("package")]),t._v(" "),s("ul",[s("li",[t._v("package name — reversely ordered domain")]),t._v(" "),s("li",[t._v("package availability — A class can use all classes from its own package and all public classes from other packages.")]),t._v(" "),s("li",[t._v("package at runtime\n"),s("ul",[s("li",[t._v("locating classes is done by compiler — the only benefit of the "),s("code",[t._v("import")]),t._v(" statement is convenience")]),t._v(" "),s("li",[t._v("canonical name after compilation — the byte codes in class files always canonical names to refer to other classes")])])])])]),t._v(" "),s("li",[s("p",[t._v("class importation")]),t._v(" "),s("ul",[s("li",[t._v("built-in — "),s("code",[t._v("java.lang")])]),t._v(" "),s("li",[t._v("without "),s("code",[t._v("import")]),t._v(" — use canonical name")]),t._v(" "),s("li",[s("code",[t._v("import")]),t._v(" statement"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("import a class — canonical name")]),t._v(" "),s("li",[t._v("import a package — "),s("code",[t._v("*")])]),t._v(" "),s("li",[t._v("import a inner class — "),s("code",[t._v("java.util.AbstractMap.SimpleEntry")])]),t._v(" "),s("li",[t._v("solve name conflict — import the specific class, or use canonical name"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compile-time error when use `Date` class")]),t._v("\n")])])])])])]),t._v(" "),s("li",[t._v("static imports — the importing of static methods and fields"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("add to package — put the name of the package at the top of a source file")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("directory — match the canonical name"),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("javac com/mycompany/PayrollApp.java\njava com.mycompany.PayrollApp\n")])])])]),t._v(" "),s("li",[t._v("default package — classes belong to the default package if no "),s("code",[t._v("package")]),t._v(" statement")]),t._v(" "),s("li",[t._v("no custom "),s("code",[t._v("java.")]),t._v(' prefixed packages — disallow loading of user-defined classes whose package name starts with "'),s("code",[t._v("java.")]),t._v('"')])])]),t._v(" "),s("li",[s("p",[t._v("class path")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/home/user/classdir:.:/home/user/archives/archive.jar\nc:\\classdir;.;c:\\archives\\archive.jar\n")])])]),s("ul",[s("li",[t._v("system property — "),s("code",[t._v("java.class.path")])]),t._v(" "),s("li",[t._v("possible components"),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("/home/user/classdir:.:/home/user/archives/"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - In UNIX, the `*` must be escaped to prevent shell expansion.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# c:\\classdir;.;c:\\archives\\*")]),t._v("\n")])])]),s("ul",[s("li",[t._v("base directory for the package tree")]),t._v(" "),s("li",[t._v("jar files")]),t._v(" "),s("li",[t._v("jar file directory")]),t._v(" "),s("li",[t._v("do not add runtime libary files — "),s("code",[t._v("rt.jar")]),t._v(" and the other JAR files in the "),s("code",[t._v("jre/lib")]),t._v(" and "),s("code",[t._v("jre/lib/ext")]),t._v(" directories are always searched for classes (modules from JDK 9, and no more "),s("code",[t._v("ext")]),t._v(")")])])]),t._v(" "),s("li",[t._v("used by "),s("code",[t._v("java")]),t._v(" but not "),s("code",[t._v("javac")]),t._v(" "),s("ul",[s("li",[t._v("the "),s("code",[t._v("javac")]),t._v(" compiler — always looks for files in the current directory")]),t._v(" "),s("li",[t._v("the "),s("code",[t._v("java")]),t._v(" virtual machine — launcher only looks into the class path, default class path is "),s("code",[t._v(".")])])])]),t._v(" "),s("li",[t._v("class search order\n"),s("ul",[s("li",[t._v("for "),s("code",[t._v("javac")]),t._v(" — from "),s("code",[t._v("java.lang")]),t._v(" to imports to current package")]),t._v(" "),s("li",[t._v("for "),s("code",[t._v("java")]),t._v(" — from runtime libary to the class path")])])]),t._v(" "),s("li",[t._v("set class path\n"),s("ul",[s("li",[s("code",[t._v("-cp")]),t._v(" or "),s("code",[t._v("-classpath")]),t._v(" option"),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("java -classpath /home/user/classdir:.:/home/user/archives/archive.jar MyProg\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# java -classpath c:\\classdir;.;c:\\archives\\archive.jar MyProg")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("the "),s("code",[t._v("CLASSPATH")]),t._v(" environment variable")])])])])])]),t._v(" "),s("h2",{attrs:{id:"Fundamentals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Fundamentals"}},[t._v("#")]),t._v(" Fundamentals")]),t._v(" "),s("h3",{attrs:{id:"Data-Types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Data-Types"}},[t._v("#")]),t._v(" Data Types")]),t._v(" "),s("h4",{attrs:{id:"primitive-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#primitive-types"}},[t._v("#")]),t._v(" primitive types")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("integer types")]),t._v(" "),s("ul",[s("li",[t._v("types\n"),s("ul",[s("li",[s("code",[t._v("byte")])]),t._v(" "),s("li",[s("code",[t._v("short")]),t._v(" — 2 bytes")]),t._v(" "),s("li",[s("code",[t._v("int")])]),t._v(" "),s("li",[s("code",[t._v("long")])])])]),t._v(" "),s("li",[t._v("number literals\n"),s("ul",[s("li",[s("code",[t._v("long")]),t._v(" — "),s("code",[t._v("l")]),t._v(" or "),s("code",[t._v("L")]),t._v(" suffix for "),s("code",[t._v("long")]),t._v(" type")]),t._v(" "),s("li",[t._v("hexadecimal, octal and binary — "),s("code",[t._v("0x")]),t._v(", "),s("code",[t._v("0")]),t._v(", "),s("code",[t._v("0b")]),t._v(" or "),s("code",[t._v("0B")])]),t._v(" "),s("li",[t._v("friendly underscores — "),s("code",[t._v("1_000_000")]),t._v(", "),s("code",[t._v("0b1111_0100_0010_0100_0000")])])])]),t._v(" "),s("li",[t._v("no "),s("code",[t._v("unsigned")])]),t._v(" "),s("li",[t._v("shift overflow bits — mod"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1l")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1l << (65 % 64)")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("loop shift")])]),t._v(" "),s("li",[s("p",[t._v("float point types")]),t._v(" "),s("ul",[s("li",[t._v("types\n"),s("ul",[s("li",[s("code",[t._v("float")]),t._v(" — 4 bytes")]),t._v(" "),s("li",[s("code",[t._v("double")])])])]),t._v(" "),s("li",[t._v("number literals\n"),s("ul",[s("li",[s("code",[t._v("float")]),t._v(" — "),s("code",[t._v("f")]),t._v(" or "),s("code",[t._v("F")]),t._v(" suffix")]),t._v(" "),s("li",[s("code",[t._v("double")]),t._v(" — "),s("code",[t._v("d")]),t._v(", "),s("code",[t._v("D")]),t._v(" suffix or no suffix")]),t._v(" "),s("li",[t._v("exponent — "),s("code",[t._v("e")])]),t._v(" "),s("li",[t._v("binary exponent — "),s("code",[t._v("p")]),t._v(", e.g. "),s("code",[t._v("0x1.0p-3")]),t._v(" (2^-3)")])])]),t._v(" "),s("li",[t._v("overflows and errors\n"),s("ul",[s("li",[s("code",[t._v("Double.POSITIVE_INFINITY")]),t._v(", "),s("code",[t._v("Double.NEGATIVE_INFINITY")]),t._v(", and "),s("code",[t._v("Double.NaN")])]),t._v(" "),s("li",[s("code",[t._v("Double.isNaN()")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("char")]),t._v(" — describes a code unit in the UTF-16 BE encoding")]),t._v(" "),s("ul",[s("li",[t._v("syntax — single quote")]),t._v(" "),s("li",[t._v("Unicode escaping, e.g. "),s("code",[t._v("\\u0fff")]),t._v(" — inside and outside quotes"),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("\\u005B\\u005D args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\u0022+\\u0022"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// yielding ""+""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \\u000A is a newline // syntax error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// since \\u000A is replaced with a newline when the program is read")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Look inside c:\\users // syntax error")]),t._v("\n")])])]),s("ul",[s("li",[t._v("processing — Unicode escape sequences are processed before the code is parsed")]),t._v(" "),s("li",[t._v("other escapes — "),s("code",[t._v("\\b")]),t._v(", "),s("code",[t._v("\\t")]),t._v(", "),s("code",[t._v("\\n")]),t._v(", "),s("code",[t._v("\\r")])]),t._v(" "),s("li",[s("code",[t._v("native2ascii")]),t._v(" — CLI for converting the native character encoding to plain ASCII, removed in JDK 9 due to the ability to support UTF-8 based properties resource bundles")])])]),t._v(" "),s("li",[t._v("code unit — a 16-bit value\n"),s("ul",[s("li",[t._v("supplementary characters — whose code points are greater than "),s("code",[t._v("U+FFFF")]),t._v(", encoded as consecutive pairs of code units, a range of 2048 unused values of the basic multilingual plane")]),t._v(" "),s("li",[t._v("surrogates area — high-surrogates range "),s("code",[t._v("U+D800")]),t._v(" to "),s("code",[t._v("U+DBFF")]),t._v(" for the first code unit, low-surrogates range "),s("code",[t._v("U+DC00")]),t._v(" to "),s("code",[t._v("U+DFFF")]),t._v(" for the second code unit")])])]),t._v(" "),s("li",[t._v("usage\n"),s("ul",[s("li",[t._v("use "),s("code",[t._v("String")]),t._v(" — recommendation is not to use the "),s("code",[t._v("char")]),t._v(" type unless you are actually manipulating UTF-16 code units")])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("boolean")])]),t._v(" "),s("ul",[s("li",[t._v("cannot convert between integers and boolean values")]),t._v(" "),s("li",[s("code",[t._v("if (x = 0)")]),t._v(" does not compile")]),t._v(" "),s("li",[t._v("stored as "),s("code",[t._v("int")])])])])]),t._v(" "),s("h5",{attrs:{id:"primitive-type-conversion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#primitive-type-conversion"}},[t._v("#")]),t._v(" primitive type conversion")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("conversion")]),t._v(" "),s("ul",[s("li",[t._v("legal conversion — types with less information to types with more information, but not vice versa")]),t._v(" "),s("li",[t._v("type priority — "),s("code",[t._v("double")]),t._v(" > "),s("code",[t._v("float")]),t._v(" > "),s("code",[t._v("long")]),t._v(" > "),s("code",[t._v("int")]),t._v(" > "),s("code",[t._v("char")])]),t._v(" "),s("li",[t._v("implicit conversion using operators — converted to a common type before the operation is carried out\n"),s("ul",[s("li",[t._v("example — for "),s("code",[t._v("int x")]),t._v(", "),s("code",[t._v("x += 3.5")]),t._v(" is "),s("code",[t._v("x = (int)(x + 3.5)")])])])])])]),t._v(" "),s("li",[s("p",[t._v("casts")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.997")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nx2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.round() return long for double, int for float")]),t._v("\n")])])]),s("ul",[s("li",[t._v("truncate when out of range — "),s("code",[t._v("(byte) 300")]),t._v(" is 44")]),t._v(" "),s("li",[t._v("not between "),s("code",[t._v("boolean")]),t._v(" and number — cannot cast between "),s("code",[t._v("boolean")]),t._v(" values and any numeric type")])])])]),t._v(" "),s("h4",{attrs:{id:"other-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#other-types"}},[t._v("#")]),t._v(" other types")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("enum")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" SMALL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MEDIUM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LARGE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EXTRA_LARGE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MEDIUM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// s can be null")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SMALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"S"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MEDIUM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"M"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("LARGE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"L"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EXTRA_LARGE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XL"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" abbreviation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" abbreviation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("abbreviation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" abbreviation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAbbreviation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" abbreviation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("enum")]),t._v(" extends "),s("code",[t._v("Enum")]),t._v(" — "),s("code",[t._v("Size")]),t._v(" is actually a subclass of "),s("code",[t._v("Enum")]),t._v(", having exactly four instances (static field)\n"),s("ul",[s("li",[t._v("?? — not possible to construct new objects, "),s("code",[t._v("==")]),t._v(" can be used")])])]),t._v(" "),s("li",[t._v("implicitly defined methods (i.e. added by the compiler)\n"),s("ul",[s("li",[s("code",[t._v("static E[] values()")])]),t._v(" "),s("li",[s("code",[t._v("static E valueOf(String name)")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Enum")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("String toString()")])]),t._v(" "),s("li",[s("code",[t._v("static <T extends Enum<T>> T valueOf(Class<T> enumType, String name)")])]),t._v(" "),s("li",[s("code",[t._v("int ordinal()")])]),t._v(" "),s("li",[s("code",[t._v("int compareTo(E other)")]),t._v(" — order comparaison, result <0, 0 or >0")])])]),t._v(" "),s("li",[s("p",[t._v("arrays")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" smallPrimes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" smallPrimes2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// anonymous array")]),t._v("\n")])])]),s("ul",[s("li",[t._v("arrays are objects — extends "),s("code",[t._v("Object")]),t._v(" and implements "),s("code",[t._v("Cloneable")]),t._v(", "),s("code",[t._v("Serializable")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("final int length")])]),t._v(" "),s("li",[s("code",[t._v("T[] clone()")])]),t._v(" "),s("li",[s("code",[t._v("Object")]),t._v(" methods")])])]),t._v(" "),s("li",[t._v("initialization\n"),s("ul",[s("li",[t._v("all elements are initialized with zero or "),s("code",[t._v("false")])]),t._v(" "),s("li",[t._v("Arrays of objects are initialized with the special value "),s("code",[t._v("null")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" names "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])]),t._v(" "),s("li",[t._v("two dimensional"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" balances"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbalances "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NYEARS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NRATES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" magicSquare "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("ragged"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" odds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NMAX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" NMAX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    odds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"Classes-and-Modifiers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Classes-and-Modifiers"}},[t._v("#")]),t._v(" Classes and Modifiers")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("public class")])]),t._v(" "),s("ul",[s("li",[t._v("filename and class name — the name of the file must match the name of the "),s("code",[t._v("public")]),t._v(" class")]),t._v(" "),s("li",[t._v("unique in a file — can only have one "),s("code",[t._v("public")]),t._v(" class in a source file")]),t._v(" "),s("li",[t._v("when run "),s("code",[t._v("java ClassName")]),t._v(" in CLI, the "),s("code",[t._v("main")]),t._v(" method in "),s("code",[t._v("ClassName")]),t._v(" is run")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("class")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("this")]),t._v(" "),s("ul",[s("li",[t._v("field variable shadowing — "),s("code",[t._v("this.")]),t._v(" is optional, local variables can shadow instance fields")]),t._v(" "),s("li",[t._v("implicit parameter — implicit parameter "),s("code",[t._v("this")]),t._v(" does not appear in the method declaration\n"),s("ul",[s("li",[t._v("can be explicitly declared as the first parameter, usually for annotations")])])]),t._v(" "),s("li",[t._v("as constructor — the form "),s("code",[t._v("this(...)")]),t._v(", constructor call must be the first statement in a constructor")])])]),t._v(" "),s("li",[t._v("initialization\n"),s("ul",[s("li",[t._v("implicit field initialization — fields automatically set to a default zero")]),t._v(" "),s("li",[t._v("explicit field initialization — initialize with constant value or an expression")]),t._v(" "),s("li",[t._v("initialization block\n"),s("ul",[s("li",[t._v("can be "),s("code",[t._v("static")]),t._v(" — static initialization block")]),t._v(" "),s("li",[t._v("can set fields but cannot read later fields — legal to set fields defined later in the class. However, to avoid circular definitions, not legal to read from fields initialized later")])])]),t._v(" "),s("li",[t._v("execution order — runs after "),s("code",[t._v("super()")]),t._v(" call or other constructor call, but before the rest of the constructor, see below")])])]),t._v(" "),s("li",[t._v("constructors\n"),s("ul",[s("li",[t._v("method name — same as the class")]),t._v(" "),s("li",[s("code",[t._v("new")]),t._v(" — must be called with "),s("code",[t._v("new")])]),t._v(" "),s("li",[t._v("default no-arg constructor — when no constructor present, a no-argument constructor is provided")]),t._v(" "),s("li",[t._v("call another constructor — see "),s("code",[t._v("this")]),t._v(" above")])])]),t._v(" "),s("li",[t._v("execution order when a constructor is called\n"),s("ol",[s("li",[t._v("other constructor call — if the first line of the constructor calls a second constructor, then the second constructor runs before the body of this constructor.")]),t._v(" "),s("li",[t._v("implicit field initialization — all data fields are initialized to their default values (0 , "),s("code",[t._v("false")]),t._v(" , or "),s("code",[t._v("null")]),t._v(")")]),t._v(" "),s("li",[t._v("explicit field initialization and initialization blocks — all field initializers and initialization blocks are executed, in the order in which they occur in the class declaration")]),t._v(" "),s("li",[t._v("the rest — The body of the constructor is executed.")])])]),t._v(" "),s("li",[t._v("encapsulation\n"),s("ul",[s("li",[t._v("getter, setter — "),s("code",[t._v("private")]),t._v(" data field with "),s("code",[t._v("public")]),t._v(" accessor and mutator")]),t._v(" "),s("li",[t._v("return clone for mutable objects — If you need to return a reference to a mutable object, return a clone")])])]),t._v(" "),s("li",[t._v("destructor\n"),s("ul",[s("li",[t._v("garbage collection — Java does automatic garbage collection, does not support destructors")]),t._v(" "),s("li",[s("code",[t._v("Object::finalize")]),t._v(" — The "),s("code",[t._v("finalize")]),t._v(" method will be called before the garbage collector sweeps away the object, but do not rely on, since cannot know when this method will be called, deprecated in JDK 9")]),t._v(" "),s("li",[s("code",[t._v("Runtime::addShutdownHook")])])])])])]),t._v(" "),s("li",[s("p",[t._v("access modifiers")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("public")]),t._v(" — no access limit")]),t._v(" "),s("li",[s("code",[t._v("private")]),t._v(" — accessible only when the class is the same")]),t._v(" "),s("li",[s("code",[t._v("protected")]),t._v(" — can be accessed by subclasses and within the same package\n"),s("ul",[s("li",[t._v("limitation to subclasses — when not within the same package, "),s("code",[t._v("SuperType.protectedField")]),t._v(" are not accessible to subclass")])])]),t._v(" "),s("li",[t._v("default package access — when no access modifiers specified, can be accessed within the same package")]),t._v(" "),s("li",[t._v("use in fields — "),s("code",[t._v("private")]),t._v(" is recommended")]),t._v(" "),s("li",[t._v("access privileges when overriding — no more restrictive access privileges when overriding")])])]),t._v(" "),s("li",[s("p",[t._v("other modifiers")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("final")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("final")]),t._v(" fields — must be initialized when the object is constructed (can be initialized in constructor) and cannot be modified")]),t._v(" "),s("li",[s("code",[t._v("final")]),t._v(" methods — cannot be overloaded")]),t._v(" "),s("li",[s("code",[t._v("final class")]),t._v(" — cannot be inherited, and only the methods, not the fields, are automatically "),s("code",[t._v("final")])]),t._v(" "),s("li",[s("code",[t._v("final")]),t._v(" parameters — cannot be modified")])])]),t._v(" "),s("li",[s("code",[t._v("static")]),t._v(" "),s("ul",[s("li",[t._v("call by instance — static methods can be invoked by object call, but not recommended")]),t._v(" "),s("li",[t._v("execution order — static initialization occurs when the class is first loaded")]),t._v(" "),s("li",[t._v("get class from static method ("),s("code",[t._v("this.getClass()")]),t._v(" will not work in static methods) besides "),s("code",[t._v(".class")]),t._v(" property"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEnclosingClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("code",[t._v("strictfp")]),t._v(" — methods tagged with the "),s("code",[t._v("strictfp")]),t._v(" keyword must use strict rules for floating-point computations that yield reproducible results")])])])]),t._v(" "),s("h3",{attrs:{id:"Math"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Math"}},[t._v("#")]),t._v(" Math")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("Math")]),t._v(" — elementary exponential, logarithm, square root, and trigonometric functions")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Math.E")]),t._v(", "),s("code",[t._v("Math.PI")])]),t._v(" "),s("li",[s("code",[t._v("static double random()")]),t._v(" — uses "),s("code",[t._v("java.util.Random")]),t._v(" behind scenes")]),t._v(" "),s("li",[s("code",[t._v("min")]),t._v(", "),s("code",[t._v("max")])]),t._v(" "),s("li",[t._v("double\n"),s("ul",[s("li",[s("code",[t._v("public static double ulp(double d)")]),t._v(" — An ulp, unit in the last place, of a double value is the positive distance between this floating-point value and the double value next larger in magnitude")])])]),t._v(" "),s("li",[t._v("rounding\n"),s("ul",[s("li",[s("code",[t._v("static double ceil(double a)")])]),t._v(" "),s("li",[s("code",[t._v("static long round(double a)")]),s("br"),t._v(" "),s("code",[t._v("static int round(float a)")])]),t._v(" "),s("li",[s("code",[t._v("static double floor(double a)")])]),t._v(" "),s("li",[s("code",[t._v("Math.floorDiv()")])]),t._v(" "),s("li",[s("code",[t._v("Math.floorMod(x, y)")]),t._v(" — "),s("code",[t._v("x - Math.floorDiv(x, y) * y")]),t._v(" "),s("ul",[s("li",[t._v("compared to "),s("code",[t._v("x % y")]),t._v(" — "),s("code",[t._v("x - x / y * y")])])])])])]),t._v(" "),s("li",[s("code",[t._v("-Exact")]),t._v(" suffixed methods — "),s("code",[t._v("ArithmeticException")]),t._v(" if overflow\n"),s("ul",[s("li",[s("code",[t._v("static int addExact(int x, int y)")]),s("br"),t._v(" "),s("code",[t._v("static long addExact(long x, long y)")])]),t._v(" "),s("li",[s("code",[t._v("addExact")]),t._v(", "),s("code",[t._v("subtractExact")]),t._v(", "),s("code",[t._v("multiplyExact")]),t._v(", "),s("code",[t._v("decrementExact")]),t._v(", "),s("code",[t._v("incrementExact")]),t._v(", "),s("code",[t._v("negateExact")])]),t._v(" "),s("li",[s("code",[t._v("static int toIntExact(long value)")])])])]),t._v(" "),s("li",[t._v("more")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.util.Random")]),t._v(" — generate a stream of pseudorandom numbers, of which "),s("code",[t._v("Math.random()")]),t._v(" uses an "),s("code",[t._v("static final")]),t._v(" instance")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v("\n")])])]),s("ul",[s("li",[t._v("creation\n"),s("ul",[s("li",[s("code",[t._v("Random()")])]),t._v(" "),s("li",[s("code",[t._v("Random(long seed)")])])])]),t._v(" "),s("li",[t._v("thread-safe — use "),s("code",[t._v("ThreadLocalRandom")]),t._v(" to avoid "),s("code",[t._v("AtomicLong::compareAndSet")])]),t._v(" "),s("li",[t._v("set — "),s("code",[t._v("void setSeed(long seed)")])]),t._v(" "),s("li",[t._v("next — for "),s("code",[t._v("boolean")]),t._v(", "),s("code",[t._v("byte")]),t._v(", "),s("code",[t._v("double")]),t._v(", "),s("code",[t._v("float")]),t._v(", "),s("code",[t._v("int")]),t._v(", "),s("code",[t._v("long")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("int nextInt()")])]),t._v(" "),s("li",[s("code",[t._v("int nextInt(int bound)")])]),t._v(" "),s("li",[t._v("more")]),t._v(" "),s("li",[s("code",[t._v("double nextGaussian()")])])])]),t._v(" "),s("li",[t._v("stream")]),t._v(" "),s("li",[s("code",[t._v("java.security.SecureRandom")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("StrictMath")]),t._v(" — guaranteeing identical results on all platforms")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.math.BigInteger")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigInteger")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("creation\n"),s("ul",[s("li",[s("code",[t._v("static BigInteger valueOf(long val)")])]),t._v(" "),s("li",[s("code",[t._v("static BigInteger ONE")])]),t._v(" "),s("li",[s("code",[t._v("static BigInteger TEN")])]),t._v(" "),s("li",[s("code",[t._v("static BigInteger ZERO")])])])]),t._v(" "),s("li",[t._v("arithmetic\n"),s("ul",[s("li",[s("code",[t._v("BigInteger add(BigInteger other)")])]),t._v(" "),s("li",[s("code",[t._v("BigInteger subtract(BigInteger other)")])]),t._v(" "),s("li",[s("code",[t._v("BigInteger multiply(BigInteger other)")])]),t._v(" "),s("li",[s("code",[t._v("BigInteger divide(BigInteger other)")])]),t._v(" "),s("li",[s("code",[t._v("BigInteger mod(BigInteger other)")])]),t._v(" "),s("li",[s("code",[t._v("BigInteger modInverse(BigInteger m)")])]),t._v(" "),s("li",[s("code",[t._v("BigInteger modPow(BigInteger exponent, BigInteger m)")])]),t._v(" "),s("li",[t._v("more")])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.math.BigDecimal")]),t._v(" — Immutable, arbitrary-precision signed decimal numbers, decimal version of "),s("code",[t._v("BigInteger")])])])]),t._v(" "),s("h3",{attrs:{id:"Built-In-Classes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Built-In-Classes"}},[t._v("#")]),t._v(" Built-In Classes")]),t._v(" "),s("ol",[s("li",[t._v("inside "),s("code",[t._v("java.lang")]),t._v(" package")])]),t._v(" "),s("h4",{attrs:{id:"System"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#System"}},[t._v("#")]),t._v(" System")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("System")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n")])])]),s("ul",[s("li",[t._v("std\n"),s("ul",[s("li",[s("code",[t._v("static InputStream in")]),t._v(" — instance of "),s("code",[t._v("BufferedInputStream")])]),t._v(" "),s("li",[s("code",[t._v("static PrintStream err")])]),t._v(" "),s("li",[s("code",[t._v("static PrintStream out")])]),t._v(" "),s("li",[s("code",[t._v("static Console console()")])]),t._v(" "),s("li",[s("code",[t._v("static void setErr(PrintStream err)")])]),t._v(" "),s("li",[s("code",[t._v("static void setIn(InputStream in)")])]),t._v(" "),s("li",[s("code",[t._v("static void setOut(PrintStream out)")])])])]),t._v(" "),s("li",[t._v("util\n"),s("ul",[s("li",[s("code",[t._v("static native void arraycopy(Object src, int srcPos, Object dest, int destPos, int length)")])]),t._v(" "),s("li",[s("code",[t._v("static long currentTimeMillis()")])]),t._v(" "),s("li",[s("code",[t._v("static long nanoTime()")])]),t._v(" "),s("li",[s("code",[t._v("static native int identityHashCode(Object x)")]),t._v(" — "),s("code",[t._v("Object::hashCode")]),t._v(" regardless of overriden or not, 0 for "),s("code",[t._v("null")])])])]),t._v(" "),s("li",[t._v("system property — see "),s("RouterLink",{attrs:{to:"/backend/java/javaUtils.html#Legacy-Collections"}},[t._v("Legacy Collections")]),t._v(" for the list of system properties\n"),s("ul",[s("li",[s("code",[t._v("static Properties getProperties()")])]),t._v(" "),s("li",[s("code",[t._v("static String getProperty(String key)")]),s("br"),t._v(" "),s("code",[t._v("static String getProperty(String key, String def)")])]),t._v(" "),s("li",[s("code",[t._v("Integer::getInteger")]),t._v(", "),s("code",[t._v("Long::getLong")])]),t._v(" "),s("li",[s("code",[t._v("static void setProperties(Properties props)")]),s("br"),t._v(" "),s("code",[t._v("static String setProperty(String key, String value)")])]),t._v(" "),s("li",[s("code",[t._v("static String clearProperty(String key)")])]),t._v(" "),s("li",[s("code",[t._v("static String lineSeparator()")]),t._v(" — equivalent to "),s("code",[t._v('System.getProperty("line.separator")')]),t._v(" "),s("ul",[s("li",[t._v("see "),s("RouterLink",{attrs:{to:"/backend/java/javaIO.html#File-Classes"}},[s("code",[t._v("File")])]),t._v(" for other separators")],1)])])])],1),t._v(" "),s("li",[t._v("environment\n"),s("ul",[s("li",[s("code",[t._v("static Map<String,String> getenv()")])]),t._v(" "),s("li",[s("code",[t._v("static String getenv(String name)")])])])]),t._v(" "),s("li",[t._v("JVM\n"),s("ul",[s("li",[s("code",[t._v("static void exit(int status)")])]),t._v(" "),s("li",[s("code",[t._v("static void gc()")]),t._v(" — run garbage collector")]),t._v(" "),s("li",[s("code",[t._v("static SecurityManager getSecurityManager()")])]),t._v(" "),s("li",[s("code",[t._v("static Channel inheritedChannel()")]),t._v(" — the channel inherited from the entity that created this Java virtual machine")]),t._v(" "),s("li",[s("code",[t._v("static void load(String filename)")])]),t._v(" "),s("li",[s("code",[t._v("static void loadLibrary(String libname)")])]),t._v(" "),s("li",[s("code",[t._v("static String mapLibraryName(String libname)")])]),t._v(" "),s("li",[s("code",[t._v("static void runFinalization()")])]),t._v(" "),s("li",[s("code",[t._v("static void setSecurityManager(SecurityManager s)")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("SecurityManager")]),t._v(" — check permissions, like read / write on certain files")])])]),t._v(" "),s("h4",{attrs:{id:"String"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#String"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("CharSequence")]),t._v(" — provides uniform, read-only access to many different kinds of char sequences")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CharSequence")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("char charAt(int index)")])]),t._v(" "),s("li",[s("code",[t._v("default IntStream chars()")])]),t._v(" "),s("li",[s("code",[t._v("default IntStream codePoints()")])]),t._v(" "),s("li",[s("code",[t._v("int length()")])]),t._v(" "),s("li",[s("code",[t._v("CharSequence subSequence(int start, int end)")])]),t._v(" "),s("li",[s("code",[t._v("String toString()")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("String")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CharSequence")]),t._v("\n")])])]),s("ul",[s("li",[t._v("length\n"),s("ul",[s("li",[s("code",[t._v("int length()")])]),t._v(" "),s("li",[s("code",[t._v("boolean isEmpty()")])]),t._v(" "),s("li",[s("code",[t._v("int codePointCount(int startIndex, int endIndex)")]),t._v(" — the number of code points"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cpCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("codePointCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])]),t._v(" "),s("li",[t._v("substring or transform\n"),s("ul",[s("li",[s("code",[t._v("char charAt(int index)")]),t._v(", "),s("code",[t._v("int codePointAt(int index)")]),t._v(", "),s("code",[t._v("codePointBefore")])]),t._v(" "),s("li",[t._v("conversion methods to and from "),s("code",[t._v("bytes[]")]),t._v(", "),s("code",[t._v("char[]")])]),t._v(" "),s("li",[s("code",[t._v("String substring(int beginIndex)")]),t._v(" "),s("code",[t._v("String substring(int beginIndex, int endIndex)")])]),t._v(" "),s("li",[s("code",[t._v("String replace(char oldChar, char newChar)")]),s("br"),t._v(" "),s("code",[t._v("String replace(CharSequence target, CharSequence replacement)")]),s("br"),t._v(" "),s("code",[t._v("String replaceAll(String regex, String replacement)")]),s("br"),t._v(" "),s("code",[t._v("String replaceFirst(String regex, String replacement)")])]),t._v(" "),s("li",[s("code",[t._v("String toLowerCase()")]),t._v(" "),s("code",[t._v("String toUpperCase()")])]),t._v(" "),s("li",[s("code",[t._v("String trim()")])]),t._v(" "),s("li",[s("code",[t._v("String[] split(String regex)")]),s("br"),t._v(" "),s("code",[t._v("String[] split(String regex, int limit)")])])])]),t._v(" "),s("li",[t._v("creation\n"),s("ul",[s("li",[s("code",[t._v("static String format(String format, Object... args)")]),s("br"),t._v(" "),s("code",[t._v("static String format(Locale l, String format, Object... args)")])]),t._v(" "),s("li",[s("code",[t._v("static String join(CharSequence delimiter, CharSequence... elements)")]),s("br"),t._v(" "),s("code",[t._v("static String join(CharSequence delimiter, Iterable<? extends CharSequence> elements)")]),s("br"),t._v(" "),s("code",[t._v("Collectors::joining")]),s("br"),t._v(" "),s("code",[t._v("StringJoiner")])]),t._v(" "),s("li",[s("code",[t._v("valueOf")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("static String valueOf(type c)")]),t._v(" — from various types")]),t._v(" "),s("li",[s("code",[t._v("static String copyValueOf(char[] data)")]),t._v(" — "),s("code",[t._v("valueOf")]),t._v(" equivalent"),s("br"),t._v(" "),s("code",[t._v("static String copyValueOf(char[] data, int offset, int count)")])])])]),t._v(" "),s("li",[s("code",[t._v("String concat(String str)")])]),t._v(" "),s("li",[s("code",[t._v("String(byte[] bytes)")]),s("br"),t._v(" "),s("code",[t._v("String(byte[] bytes, Charset charset)")]),s("br"),t._v(" "),s("code",[t._v("String(byte[] bytes, int offset, int length)")]),s("br"),t._v(" "),s("code",[t._v("String(byte[] bytes, int offset, int length, Charset charset)")])]),t._v(" "),s("li",[s("code",[t._v("String(int[] codePoints, int offset, int count)")])]),t._v(" "),s("li",[s("code",[t._v("String(char[] value)")]),s("br"),t._v(" "),s("code",[t._v("String(char[] value, int offset, int count)")])]),t._v(" "),s("li",[s("code",[t._v("String(String original)")])]),t._v(" "),s("li",[s("code",[t._v("String(StringBuffer buffer)")])]),t._v(" "),s("li",[s("code",[t._v("String(StringBuilder builder)")])])])]),t._v(" "),s("li",[t._v("comparaison\n"),s("ul",[s("li",[s("code",[t._v("int hashCode()")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("code",[t._v("boolean equals(Object other)")]),t._v(", "),s("code",[t._v("boolean equalsIgnoreCase(String other)")]),t._v(" "),s("ul",[s("li",[t._v("reference type — do not use the "),s("code",[t._v("==")]),t._v(" operator to test whether two strings are equal")]),t._v(" "),s("li",[t._v("string pool — only string literals are shared, not strings that are the result of operations like "),s("code",[t._v("+")]),t._v(" or "),s("code",[t._v("substring")])])])]),t._v(" "),s("li",[s("code",[t._v("int compareToIgnoreCase(String str)")])]),t._v(" "),s("li",[s("code",[t._v("boolean startsWith(String prefix)")]),t._v(", "),s("code",[t._v("boolean endsWith(String suffix)")])]),t._v(" "),s("li",[s("code",[t._v("boolean contentEquals(CharSequence cs)")]),t._v(", "),s("code",[t._v("boolean contentEquals(StringBuffer sb)")])]),t._v(" "),s("li",[s("code",[t._v("String intern()")]),t._v(" — determined by "),s("code",[t._v("equals")]),t._v(", return the string from string pool, add to the pool if not contained already")])])]),t._v(" "),s("li",[t._v("transverse\n"),s("ul",[s("li",[t._v("with index "),s("code",[t._v("i")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// incremental")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sentence"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("codePointAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Character")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSupplementaryCodePoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// decreasing")]),t._v("\ni"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Character")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSurrogate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sentence"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sentence"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("codePointAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("code",[t._v("int offsetByCodePoints()")]),t._v(" — get at the i^th^ code point")]),t._v(" "),s("li",[s("code",[t._v("int offsetByCodePoints(int index, int codePointOffset)")]),t._v(" — the resulted index by moving given number of code points from given index")]),t._v(" "),s("li",[s("code",[t._v("str.codePoints().toArray()")])])])]),t._v(" "),s("li",[t._v("find\n"),s("ul",[s("li",[s("code",[t._v("boolean contains(CharSequence s)")])]),t._v(" "),s("li",[s("code",[t._v("boolean matches(String regex)")])]),t._v(" "),s("li",[s("code",[t._v("boolean regionMatches(boolean ignoreCase, int toffset, String other, int ooffset, int len)")]),t._v(" — Tests if two string regions are equal"),s("br"),t._v(" "),s("code",[t._v("boolean regionMatches(int toffset, String other, int ooffset, int len)")])]),t._v(" "),s("li",[s("code",[t._v("int indexOf(String str)")]),s("br"),t._v(" "),s("code",[t._v("int indexOf(String str, int fromIndex)")]),s("br"),t._v(" "),s("code",[t._v("int indexOf(int cp)")]),s("br"),t._v(" "),s("code",[t._v("int indexOf(int cp, int fromIndex)")])]),t._v(" "),s("li",[s("code",[t._v("int lastIndexOf(String str)")]),s("br"),t._v(" "),s("code",[t._v("int lastIndexOf(String str, int fromIndex)")]),s("br"),t._v(" "),s("code",[t._v("int lastIndexOf(int cp)")]),s("br"),t._v(" "),s("code",[t._v("int lastIndexOf(int cp, int fromIndex)")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("StringBuilder")]),t._v(" — mutable, not synchronized "),s("code",[t._v("StringBuffer")]),t._v(", build a string from many small pieces")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CharSequence")]),t._v("\n")])])]),s("ul",[s("li",[t._v("constructors\n"),s("ul",[s("li",[s("code",[t._v("StringBuilder()")])]),t._v(" "),s("li",[s("code",[t._v("StringBuilder(CharSequence seq)")])]),t._v(" "),s("li",[s("code",[t._v("StringBuilder(int capacity)")])]),t._v(" "),s("li",[s("code",[t._v("StringBuilder(String str)")])])])]),t._v(" "),s("li",[t._v("modify\n"),s("ul",[s("li",[s("code",[t._v("StringBuilder append(String str)")])]),t._v(" "),s("li",[s("code",[t._v("StringBuilder append(char c)")])]),t._v(" "),s("li",[s("code",[t._v("StringBuilder appendCodePoint(int cp)")])]),t._v(" "),s("li",[s("code",[t._v("void setCharAt(int i, char c)")])]),t._v(" "),s("li",[s("code",[t._v("StringBuilder insert(int offset, String str)")])]),t._v(" "),s("li",[s("code",[t._v("StringBuilder insert(int offset, char c)")])]),t._v(" "),s("li",[s("code",[t._v("StringBuilder delete(int startIndex, int endIndex)")])]),t._v(" "),s("li",[s("code",[t._v("StringBuilder deleteCharAt(int index)")])]),t._v(" "),s("li",[t._v("more")])])]),t._v(" "),s("li",[t._v("output — "),s("code",[t._v("String toString()")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("StringBuffer")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CharSequence")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.util.StringJoiner")]),t._v(" — store components in "),s("code",[t._v("String[]")]),t._v(" with doubling strategy when expanding capability, used by "),s("code",[t._v("Collectors::joining")]),t._v(" and "),s("code",[t._v("String::join")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringJoiner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n")])])]),s("ul",[s("li",[t._v("constructors\n"),s("ul",[s("li",[s("code",[t._v("StringJoiner(CharSequence delimiter)")])]),t._v(" "),s("li",[s("code",[t._v("StringJoiner(CharSequence delimiter, CharSequence prefix, CharSequence suffix)")])])])]),t._v(" "),s("li",[t._v("use\n"),s("ul",[s("li",[s("code",[t._v("StringJoiner add(CharSequence newElement)")])]),t._v(" "),s("li",[s("code",[t._v("int length()")])]),t._v(" "),s("li",[s("code",[t._v("StringJoiner merge(StringJoiner other)")])]),t._v(" "),s("li",[s("code",[t._v("StringJoiner setEmptyValue(CharSequence emptyValue)")])]),t._v(" "),s("li",[s("code",[t._v("String toString()")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"Object-Wrappers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Object-Wrappers"}},[t._v("#")]),t._v(" Object Wrappers")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("wrappers")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Integer")]),t._v(" , "),s("code",[t._v("Long")]),t._v(" , "),s("code",[t._v("Float")]),t._v(" , "),s("code",[t._v("Double")]),t._v(" , "),s("code",[t._v("Short")]),t._v(" , "),s("code",[t._v("Byte")]),t._v(" , "),s("code",[t._v("Character")]),t._v(" , and "),s("code",[t._v("Boolean")])]),t._v(" "),s("li",[t._v("all extends "),s("code",[t._v("Number")]),t._v(" except "),s("code",[t._v("Boolean")]),t._v(" — no arithmetic operations and number conversions for boolean")]),t._v(" "),s("li",[t._v("immutable and "),s("code",[t._v("final")])]),t._v(" "),s("li",[t._v("autowrapping (autoboxing) — done by compiler, nothing related to VM\n"),s("ul",[s("li",[s("code",[t._v("valueOf")]),t._v(" — example: "),s("code",[t._v("list.add(3);")]),t._v(" is automatically translated to "),s("code",[t._v("list.add(Integer.valueOf(3));")])]),t._v(" "),s("li",[s("code",[t._v("typeValue()")]),t._v(" — example: the compiler translates "),s("code",[t._v("int n = list.get(i);")]),t._v(" into "),s("code",[t._v("int n = list.get(i).intValue();")])]),t._v(" "),s("li",[t._v("arithmetic operations — example: "),s("code",[t._v("Integer n = 3; n++;")]),t._v(" compiler automatically inserts instructions to unbox the object, increment the resulting value, and box it back.")])])]),t._v(" "),s("li",[t._v("fixed wrapping — wrapped into fixed objects\n"),s("ul",[s("li",[s("code",[t._v("boolean , byte , char <= 127")])]),t._v(" "),s("li",[s("code",[t._v("short")]),t._v(" , and "),s("code",[t._v("int")]),t._v(" between -128 and 127")])])]),t._v(" "),s("li",[t._v("wrapper class references can be "),s("code",[t._v("null")]),t._v(" — possible "),s("code",[t._v("NullPointerException")])]),t._v(" "),s("li",[t._v("conditional promotion — "),s("code",[t._v("Integer")]),t._v(" to "),s("code",[t._v("Double")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prints 1.0")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Number")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("byte byteValue()")])]),t._v(" "),s("li",[s("code",[t._v("abstract double doubleValue()")])]),t._v(" "),s("li",[s("code",[t._v("abstract float floatValue()")])]),t._v(" "),s("li",[s("code",[t._v("abstract int intValue()")])]),t._v(" "),s("li",[s("code",[t._v("abstract long longValue()")])]),t._v(" "),s("li",[s("code",[t._v("short shortValue()")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Integer")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("fields\n"),s("ul",[s("li",[s("code",[t._v("static int BYTES")]),t._v(" — usually 4")]),t._v(" "),s("li",[s("code",[t._v("static int MAX_VALUE")])]),t._v(" "),s("li",[s("code",[t._v("static int MIN_VALUE")])]),t._v(" "),s("li",[s("code",[t._v("static int SIZE")]),t._v(" — usually 32")]),t._v(" "),s("li",[s("code",[t._v("static Class<Integer> TYPE")]),t._v(" — "),s("code",[t._v("int.class")])])])]),t._v(" "),s("li",[t._v("creation\n"),s("ul",[s("li",[s("code",[t._v("Integer(int value)")]),t._v(" — deprecated since JDK 9")]),t._v(" "),s("li",[s("code",[t._v("Integer(String s)")]),t._v(" — uses "),s("code",[t._v("parseInt")]),t._v(" internally, deprecated since JDK 9")]),t._v(" "),s("li",[s("code",[t._v("static Integer decode(String nm)")]),t._v(" — accepts decimal, hexadecimal ("),s("code",[t._v("0x")]),t._v(", "),s("code",[t._v("0X")]),t._v(", "),s("code",[t._v("#")]),t._v(" prefixed), octal ("),s("code",[t._v("0")]),t._v(" prefixed), can be negative")]),t._v(" "),s("li",[s("code",[t._v("static Integer valueOf(int i)")]),s("br"),t._v(" "),s("code",[t._v("static Integer valueOf(String s)")]),t._v(" — uses "),s("code",[t._v("parseInt")]),t._v(" internally"),s("br"),t._v(" "),s("code",[t._v("static Integer valueOf(String s, int radix)")])])])]),t._v(" "),s("li",[t._v("conversion to primitive types\n"),s("ul",[s("li",[t._v("methods in "),s("code",[t._v("Number")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("int intValue()")])])])]),t._v(" "),s("li",[s("code",[t._v("static int parseInt(String s)")]),s("br"),t._v(" "),s("code",[t._v("static int parseInt(String s, int radix)")])])])]),t._v(" "),s("li",[t._v("arithmetic operations\n"),s("ul",[s("li",[s("code",[t._v("static int signum(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static int sum(int a, int b)")])])])]),t._v(" "),s("li",[t._v("unsigned\n"),s("ul",[s("li",[s("code",[t._v("static int parseUnsignedInt(String s)")])]),t._v(" "),s("li",[s("code",[t._v("static int parseUnsignedInt(String s, int radix)")])]),t._v(" "),s("li",[s("code",[t._v("static int divideUnsigned(int dividend, int divisor)")])]),t._v(" "),s("li",[s("code",[t._v("static int compareUnsigned(int x, int y)")])]),t._v(" "),s("li",[s("code",[t._v("static int remainderUnsigned(int dividend, int divisor)")])]),t._v(" "),s("li",[s("code",[t._v("static String toBinaryString(int i)")]),t._v(" — two's complement representation")]),t._v(" "),s("li",[s("code",[t._v("static String toHexString(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static String toOctalString(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static String toUnsignedString(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static String toUnsignedString(int i, int radix)")])]),t._v(" "),s("li",[s("code",[t._v("static long toUnsignedLong(int x)")])])])]),t._v(" "),s("li",[t._v("bits in the two's complement\n"),s("ul",[s("li",[s("code",[t._v("static int bitCount(int i)")]),t._v(" — the number of one-bits")]),t._v(" "),s("li",[s("code",[t._v("static int highestOneBit(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static int lowestOneBit(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static int numberOfLeadingZeros(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static int numberOfTrailingZeros(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static int reverse(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static int reverseBytes(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static int rotateLeft(int i, int distance)")])]),t._v(" "),s("li",[s("code",[t._v("static int rotateRight(int i, int distance)")])])])]),t._v(" "),s("li",[t._v("for "),s("code",[t._v("int")]),t._v(" and "),s("code",[t._v("null")]),t._v(" compatible\n"),s("ul",[s("li",[s("code",[t._v("static int compare(int x, int y)")])]),t._v(" "),s("li",[s("code",[t._v("static int hashCode(int value)")])]),t._v(" "),s("li",[s("code",[t._v("static String toString(int i)")])]),t._v(" "),s("li",[s("code",[t._v("static String toString(int i, int radix)")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Double")])]),t._v(" "),s("ul",[s("li",[t._v("counterparts of fields and methods in "),s("code",[t._v("Integer")])]),t._v(" "),s("li",[t._v("IEEE 754\n"),s("ul",[s("li",[s("code",[t._v("static int MAX_EXPONENT")])]),t._v(" "),s("li",[s("code",[t._v("static int MIN_EXPONENT")])]),t._v(" "),s("li",[s("code",[t._v("static double MIN_NORMAL")])])])]),t._v(" "),s("li",[t._v("infinite and not a number\n"),s("ul",[s("li",[s("code",[t._v("static double NaN")])]),t._v(" "),s("li",[s("code",[t._v("static double NEGATIVE_INFINITY")])]),t._v(" "),s("li",[s("code",[t._v("static double POSITIVE_INFINITY")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isFinite(double d)")])]),t._v(" "),s("li",[s("code",[t._v("boolean isInfinite()")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isInfinite(double v)")])]),t._v(" "),s("li",[s("code",[t._v("boolean isNaN()")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isNaN(double v)")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Character")]),t._v(" — see after")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Boolean")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"Inheritance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Inheritance"}},[t._v("#")]),t._v(" Inheritance")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("inheritance")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("extends")])]),t._v(" "),s("li",[s("code",[t._v("super")])]),t._v(" "),s("li",[s("code",[t._v("super()")]),t._v(" "),s("ul",[s("li",[t._v("first statement — the call using "),s("code",[t._v("super")]),t._v(" must be the first statement in the constructor for the subclass")]),t._v(" "),s("li",[t._v("default no-arg constructor — if the subclass constructor does not call a superclass constructor explicitly, the no-argument "),s("code",[t._v("super()")]),t._v(" is invoked")]),t._v(" "),s("li",[t._v("order — invoked before initializers")])])]),t._v(" "),s("li",[t._v("polymorphism\n"),s("ul",[s("li",[t._v("object variables are polymorphic — a variable can be assigned subclasses of its type")]),t._v(" "),s("li",[t._v("no polymorphism exploit in arrays — all arrays remember the element type with which they were created ("),s("code",[t._v("new")]),t._v("ed)"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Manager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" managers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Manager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" staff "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" managers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK")]),t._v("\nstaff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Harry Hacker"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ArrayStoreException")]),t._v("\n")])])])])])])])]),t._v(" "),s("li",[s("p",[t._v("method call")]),t._v(" "),s("ul",[s("li",[t._v("overriding resolution — according to function signatures, done by compiler\n"),s("ul",[s("li",[t._v("function signature\n"),s("ul",[s("li",[t._v("return type — return type is not a part of the signature (but is in JVM so bridge methods work)")]),t._v(" "),s("li",[t._v("bridge method — when return another type, a bridge method is synthesized")])])])])]),t._v(" "),s("li",[t._v("static binding — for "),s("code",[t._v("private")]),t._v(", "),s("code",[t._v("static")]),t._v(", "),s("code",[t._v("final")]),t._v(" methods or constructors, done by compiler")]),t._v(" "),s("li",[t._v("dynamic binding — JVM resolving the implicit parameter with method table lookup\n"),s("ul",[s("li",[t._v("method table — method table lists all method signatures and the actual methods to be called, computed by VM for each class in advance")]),t._v(" "),s("li",[t._v("order of method table lookup — from actual type to superclasses to "),s("code",[t._v("Object")])]),t._v(" "),s("li",[t._v("overhead of dynamic binding — no need to use static binding to avoid the overhead, JIT does the inlining optimization")])])])])]),t._v(" "),s("li",[s("p",[t._v("casting")]),t._v(" "),s("ul",[s("li",[t._v("direct assign to more general — cast to more general, a subclass reference to a superclass variable, direct assign")]),t._v(" "),s("li",[t._v("cast needed for more specific — cast to more specific, a superclass reference to a subclass variable, use the same syntax as primitive type cast, check at runtime\n"),s("ul",[s("li",[t._v("exception — "),s("code",[t._v("ClassCastException")]),t._v(" when cannot cast")]),t._v(" "),s("li",[t._v("check — use "),s("code",[t._v("instanceof")]),t._v(" to check before casting")]),t._v(" "),s("li",[t._v("cast range — can cast only within an inheritance hierarchy")]),t._v(" "),s("li",[t._v("minimal usage — best to minimize the use of casts and the "),s("code",[t._v("instanceof")]),t._v(" operator")])])])])]),t._v(" "),s("li",[s("p",[t._v("abstract class")]),t._v(" "),s("ul",[s("li",[t._v("no instance — cannot be instantiated, but can be super type")]),t._v(" "),s("li",[t._v("abstract methods — any class can be tagged "),s("code",[t._v("abstract")]),t._v(", but not vice versa\n"),s("ul",[s("li",[t._v("can be none — abstract classes can have no abstract methods, abstract classes can have fields and concrete methods")]),t._v(" "),s("li",[t._v("none in concrete class — a class with one or more "),s("code",[t._v("abstract")]),t._v(" methods must itself be declared "),s("code",[t._v("abstract")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Object")]),t._v(" — the cosmic superclass")]),t._v(" "),s("ul",[s("li",[t._v("for all reference type — only the values of primitive types (numbers, characters, and boolean values) are not objects")]),t._v(" "),s("li",[s("code",[t._v("boolean equals(Object otherObject)")]),t._v(" — determines whether two object references are identical\n"),s("ul",[s("li",[t._v("override — template as below, need to override "),s("code",[t._v("hashCode")]),t._v(" also if "),s("code",[t._v("equals")]),t._v(" overriden"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" otherObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// super.equals(other)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a quick test to see if the objects are identical, may be unnecessary if covered in `super.equals(other)`")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" otherObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// must return false if the explicit parameter is null")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("otherObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if the classes don't match, they can't be equal")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// alternative — use instanceof and tagging final to allow objects of different subclasses to be equal to one another")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" otherObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// now we know otherObject is a non-null Employee")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),t._v(" other "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" otherObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test whether the fields have identical values")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" hireDay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hireDay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("code",[t._v("native int hashCode()")]),t._v(" — derived from the memory address, recommended to be compatible with "),s("code",[t._v("equals()")])]),t._v(" "),s("li",[s("code",[t._v("String toString()")]),t._v(" — "),s("code",[t._v('getClass().getName() + "@" + Integer.toHexString(hashCode());')]),t._v(" "),s("ul",[s("li",[t._v("for arrays — arrays will come up with something like "),s("code",[t._v('"[I@1a46e30"')]),t._v(", where "),s("code",[t._v("[I")]),t._v(" denotes an array of integers ")])])]),t._v(" "),s("li",[s("code",[t._v("Class<?> getClass()")])]),t._v(" "),s("li",[s("code",[t._v("protected Object clone()")])]),t._v(" "),s("li",[s("code",[t._v("protected void finalize()")]),t._v(" — deprecated in JDK 9")]),t._v(" "),s("li",[t._v("concurrency related — see after")]),t._v(" "),s("li",[t._v("methods in "),s("code",[t._v("Objects")]),t._v(" and object wrappers")])])])]),t._v(" "),s("h2",{attrs:{id:"Interfaces-Lambdas-and-Inner-Classes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Interfaces-Lambdas-and-Inner-Classes"}},[t._v("#")]),t._v(" Interfaces, Lambdas and Inner Classes")]),t._v(" "),s("h3",{attrs:{id:"Interfaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Interfaces"}},[t._v("#")]),t._v(" Interfaces")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("interface")]),t._v(" "),s("ul",[s("li",[t._v("methods in interfaces\n"),s("ul",[s("li",[t._v("non-static methods — all methods are implicitly "),s("code",[t._v("abstract public")]),t._v(", redundancy is discouraged\n"),s("ul",[s("li",[t._v("when implementing — "),s("code",[t._v("public")]),t._v(" still required when implementing")])])]),t._v(" "),s("li",[t._v("static methods — supported as of Java SE 8, need explicit access modifier")]),t._v(" "),s("li",[t._v("prohibited modifiers — an interface method may not be declared with "),s("code",[t._v("protected")]),t._v(" or package access, or with the modifiers "),s("code",[t._v("final")]),t._v(", "),s("code",[t._v("synchronized")]),t._v(", or "),s("code",[t._v("native")])])])]),t._v(" "),s("li",[t._v("inner classes in interfaces — automatically "),s("code",[t._v("static public")])]),t._v(" "),s("li",[t._v("constant fields — implicitly "),s("code",[t._v("public static final")]),t._v(", automatically inherited when implementing")]),t._v(" "),s("li",[t._v("no instance fields")]),t._v(" "),s("li",[s("code",[t._v("implements")]),t._v(", "),s("code",[t._v("SuperInterface.super")]),t._v(" — examples below")]),t._v(" "),s("li",[t._v("can be generic — "),s("code",[t._v("class Employee implements Comparable<Employee>")])]),t._v(" "),s("li",[t._v("use as super type — supports "),s("code",[t._v("instanceof")]),t._v(", "),s("code",[t._v("extend")]),t._v(", multiple inheritance\n"),s("ul",[s("li",[t._v("diamond problem — see below")])])]),t._v(" "),s("li",[t._v("initialization time point — initialized when they are first accessed, typically by reading a field that is not a compile time constant")])])]),t._v(" "),s("li",[s("p",[t._v("default methods")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("default")]),t._v(" implementation"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// By default, all elements are the same")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("code",[t._v("default")]),t._v(" method conflict resolving — interface vs superclass vs another interface\n"),s("ul",[s("li",[t._v("superclasses take precedence — default methods are ignored if implemented in superclasses\n"),s("ul",[s("li",[t._v("no default "),s("code",[t._v("Object")]),t._v(" methods — not possible to make a default method that redefines one of the methods in the "),s("code",[t._v("Object")]),t._v(" class")]),t._v(" "),s("li",[t._v("no abstract "),s("code",[t._v("Object")]),t._v(" methods — redeclaring methods from the "),s("code",[t._v("Object")]),t._v(" class do not make the methods abstract, no effect to function interfaces")]),t._v(" "),s("li",[t._v("attach javadoc by "),s("code",[t._v("Object")]),t._v(" methods — some interfaces redeclare "),s("code",[t._v("Object")]),t._v(" methods in order to attach javadoc comments, like "),s("code",[t._v("Comparator")])])])]),t._v(" "),s("li",[t._v("interface clash — if clashes, even only one of the methods is "),s("code",[t._v("default")]),t._v(", the method must be overriden\n"),s("ul",[s("li",[s("code",[t._v("SuperInterface.super")]),t._v(" — choose one when interface clash"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Named")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Named")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])])])])]),t._v(" "),s("li",[s("p",[t._v("companion class")]),t._v(" "),s("ul",[s("li",[t._v("used to place static methods — it has been common to place static methods in companion classes, like "),s("code",[t._v("Collection")]),t._v(" / "),s("code",[t._v("Collections")]),t._v(" or "),s("code",[t._v("Path")]),t._v(" / "),s("code",[t._v("Paths")])]),t._v(" "),s("li",[t._v("used to implement some or all of methods of an interface — such as "),s("code",[t._v("Collection")]),t._v(" / "),s("code",[t._v("AbstractCollection")]),t._v(" or "),s("code",[t._v("MouseListener")]),t._v(" / "),s("code",[t._v("MouseAdapter")])]),t._v(" "),s("li",[s("code",[t._v("default")]),t._v(" and "),s("code",[t._v("static")]),t._v(" methods in interfaces — with Java SE 8, this technique of companion class is obsolete, as the support of default methods and static methods")])])]),t._v(" "),s("li",[s("p",[t._v("some use of interface")]),t._v(" "),s("ul",[s("li",[t._v("callback — pass an object of a class implementing a callback interface, methods in the interface will be called when the event fires")]),t._v(" "),s("li",[t._v("tagging interface — "),s("code",[t._v("Cloneable")])])])])]),t._v(" "),s("h4",{attrs:{id:"Common-Interfaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Common-Interfaces"}},[t._v("#")]),t._v(" Common Interfaces")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("Interface Comparable<T>")]),t._v(" — "),s("code",[t._v("int compareTo(T o)")])]),t._v(" "),s("ul",[s("li",[t._v("overflow when implementing with subtraction — make sure absolute values of operands are at most "),s("code",[t._v("(Integer.MAX_VALUE - 1) / 2")]),t._v(" "),s("ul",[s("li",[t._v("otherwise use "),s("code",[t._v("Integer.compare()")])])])]),t._v(" "),s("li",[s("code",[t._v("equals()")]),t._v(" compliance — strongly recommended (though not required) to comply with "),s("code",[t._v("equals()")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("BigDecimal")]),t._v(" violates — "),s("code",[t._v('new BigDecimal("1.0").equals(new BigDecimal("1.00"))')]),t._v(" is "),s("code",[t._v("false")]),t._v(" because the numbers differ in precision")])])]),t._v(" "),s("li",[t._v("associative — to make "),s("code",[t._v("x.compareTo(y)")]),t._v(" compatible with "),s("code",[t._v("y.compareTo(x)")]),t._v(", start with below when implementing"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassCastException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Interface java.util.Comparator<T>")]),t._v(" — "),s("code",[t._v("int compare(T o1, T o2)")])]),t._v(" "),s("ul",[s("li",[t._v("nature and reversed order\n"),s("ul",[s("li",[s("code",[t._v("static <T extends Comparable<? super T>> Comparator<T> naturalOrder()")])]),t._v(" "),s("li",[s("code",[t._v("static <T extends Comparable<? super T>> Comparator<T> reverseOrder()")]),t._v(" — uses "),s("code",[t._v("Collections::reverseOrder")]),t._v(" under the hood")])])]),t._v(" "),s("li",[t._v("key extract"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sort people by name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("people"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("comparing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("static <T,U extends Comparable<? super U>> Comparator<T> comparing(Function<? super T,? extends U> keyExtractor)")])]),t._v(" "),s("li",[s("code",[t._v("static <T,U> Comparator<T> comparing(Function<? super T,? extends U> keyExtractor, Comparator<? super U> keyComparator)")])]),t._v(" "),s("li",[s("code",[t._v("static <T> Comparator<T> comparingDouble(ToDoubleFunction<? super T> keyExtractor)")])]),t._v(" "),s("li",[s("code",[t._v("static <T> Comparator<T> comparingInt(ToIntFunction<? super T> keyExtractor)")])]),t._v(" "),s("li",[s("code",[t._v("static <T> Comparator<T> comparingLong(ToLongFunction<? super T> keyExtractor)")])])])]),t._v(" "),s("li",[t._v("comparator chaining"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("people"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparator")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("comparing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLastName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("thenComparing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirstName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("default Comparator<T> thenComparing(Comparator<? super T> other)")]),s("br"),t._v(" "),s("code",[t._v("default <U extends Comparable<? super U>> Comparator<T> thenComparing(Function<? super T,? extends U> keyExtractor)")]),s("br"),t._v(" "),s("code",[t._v("default <U> Comparator<T> thenComparing(Function<? super T,? extends U> keyExtractor, Comparator<? super U> keyComparator)")])]),t._v(" "),s("li",[s("code",[t._v("default Comparator<T> thenComparingType(ToTypeFunction<? super T> keyExtractor)")]),t._v(" — "),s("code",[t._v("type")]),t._v(" for "),s("code",[t._v("int")]),t._v(", "),s("code",[t._v("double")]),t._v(" and "),s("code",[t._v("long")])]),t._v(" "),s("li",[s("code",[t._v("default Comparator<T> reversed()")]),t._v(" — uses "),s("code",[t._v("Collections::reverseOrder")]),t._v(" under the hood")])])]),t._v(" "),s("li",[t._v("comparing "),s("code",[t._v("null")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("static <T> Comparator<T> nullsFirst(Comparator<? super T> comparator)")])]),t._v(" "),s("li",[s("code",[t._v("static <T> Comparator<T> nullsLast(Comparator<? super T> comparator)")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Interface Cloneable")])]),t._v(" "),s("ul",[s("li",[t._v("mark interface — serves as a tag, a checked "),s("code",[t._v("CloneNotSupportedException")]),t._v(" if an object requests cloning but does not implement that interface")]),t._v(" "),s("li",[t._v("make a class cloneable — implement this interface, redefine "),s("code",[t._v("clone")]),t._v(" to be "),s("code",[t._v("public")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Object::clone")]),t._v(" — protected, and does a shallow copy")]),t._v(" "),s("li",[t._v("use "),s("code",[t._v("Object::clone")]),t._v(" — "),s("code",[t._v("(T) super.clone()")])])])]),t._v(" "),s("li",[t._v("return "),s("code",[t._v("Object")]),t._v(" by convention — Up to Java SE 1.4, the clone method always had return type "),s("code",[t._v("Object")]),t._v(", but now the correct return type can be specified\n"),s("ul",[s("li",[t._v("inconsistency — "),s("code",[t._v("HashMap::clone")]),t._v(" and "),s("code",[t._v("ArrayList::clone")]),t._v(" etc. return "),s("code",[t._v("Object")]),t._v(", whereas "),s("code",[t._v("int[]::clone")]),t._v(" and "),s("code",[t._v("ArrayDeque::clone")]),t._v(" etc. return specific type")])])])])])]),t._v(" "),s("h3",{attrs:{id:"Lambdas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Lambdas"}},[t._v("#")]),t._v(" Lambdas")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("closure")]),t._v(" "),s("ul",[s("li",[t._v("effectively final — any captured variable in a lambda expression must be effectively final: no difference if declared "),s("code",[t._v("final")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActionListener")]),t._v(" listener "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error: Cannot refer to changing i")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Timer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listener"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("no mutation outside — illegal to refer to a variable in a lambda expression that is mutated outside")]),t._v(" "),s("li",[t._v("no mutation inside — cannot mutate captured value")]),t._v(" "),s("li",[t._v("access mutable data — use an array of length 1")])])]),t._v(" "),s("li",[t._v("no block variable shadowing — illegal to declare a parameter or a local variable in the lambda that has the same name as a local variable")]),t._v(" "),s("li",[t._v("block scope — the same scope as a nested block")]),t._v(" "),s("li",[t._v("same "),s("code",[t._v("this")]),t._v(" — "),s("code",[t._v("this")]),t._v(" is the same as what outside the lambda")]),t._v(" "),s("li",[t._v("number of instantiations — only one instantiation inside loops when no closure"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntUnaryOperator")]),t._v(" oper "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" opCounter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lambdaTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntUnaryOperator")]),t._v(" op"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("op "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" oper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("opCounter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    oper "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" op"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" op"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyAsInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lambdaTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opCounter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lambdaTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opCounter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("lambda expression syntax")]),t._v(" "),s("ul",[s("li",[t._v("inline"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("block with explicit "),s("code",[t._v("return")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("type inference"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparator")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" comp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("type inference without parentheses"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActionListener")]),t._v(" listener "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The time is "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("inferred return type — return type is always inferred, cannot be specified")])])]),t._v(" "),s("li",[s("p",[t._v("functional interface — an interface with a single abstract method, like "),s("code",[t._v("Comparator<T>")])]),t._v(" "),s("ul",[s("li",[t._v("for conversion from lambdas — conversion to a functional interface is the only function for lambdas")]),t._v(" "),s("li",[t._v("object instance used behind the scenes — methods like "),s("code",[t._v("Arrays::sort")]),t._v(" receives an object of some class that implements the interface, lambda is executed when invoking the method of that interface")]),t._v(" "),s("li",[s("code",[t._v("@FunctionalInterface")]),t._v(" — optional annotation")]),t._v(" "),s("li",[t._v("lambda expression holders (also function interface) — see "),s("a",{attrs:{href:"#Common-Functional-Interfaces"}},[t._v("Common Functional Interfaces")]),t._v(" for "),s("code",[t._v("java.util.function")])])])]),t._v(" "),s("li",[s("p",[t._v("method reference — use as lambdas")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("object"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("instanceMethod")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("instanceMethod")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("instanceMethod")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// uses `this` as the target and invokes the superclass version of the given method")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("staticMethod")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("instanceMethod")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the implicit parameter becomes explicit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// constructor reference")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n")])])]),s("ul",[s("li",[t._v("object instance used behind the scenes — turned into instances of functional interfaces like lambdas")]),t._v(" "),s("li",[s("code",[t._v("int[]::new")]),t._v(" — "),s("code",[t._v("new T[n]")]),t._v(" is illegal, so libary designers use this syntax to mitigate"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" people "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" people "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"Common-Functional-Interfaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Common-Functional-Interfaces"}},[t._v("#")]),t._v(" Common Functional Interfaces")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("java.util.function")]),t._v(" package, all "),s("code",[t._v("@FunctionalInterface")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.util.function.Function<T, R>")]),t._v(" — "),s("code",[t._v("R apply(T t)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("static <T> Function<T,T> identity()")])]),t._v(" "),s("li",[t._v("chaining\n"),s("ul",[s("li",[s("code",[t._v("default <V> Function<T,V> andThen(Function<? super R,? extends V> after)")])]),t._v(" "),s("li",[s("code",[t._v("default <V> Function<V,R> compose(Function<? super V,? extends T> before)")])])])]),t._v(" "),s("li",[t._v("variants\n"),s("ul",[s("li",[s("code",[t._v("java.util.function.DoubleFunction<R>")]),t._v(" — "),s("code",[t._v("R apply(double value)")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.DoubleToIntFunction")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.DoubleToLongFunction")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.IntFunction<R>")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.IntToDoubleFunction")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.IntToLongFunction")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.LongFunction<R>")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.LongToDoubleFunction")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.LongToIntFunction")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.ToDoubleFunction<T>")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.ToIntFunction<T>")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.ToLongFunction<T>")])])])]),t._v(" "),s("li",[t._v("variants with two parameters\n"),s("ul",[s("li",[s("code",[t._v("java.util.function.BiFunction<T,U,R>")]),t._v(" — "),s("code",[t._v("R apply(T t, U u)")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.ToDoubleBiFunction<T,U>")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.ToIntBiFunction<T,U>")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.ToLongBiFunction<T,U>")])])])])])]),t._v(" "),s("li",[s("p",[t._v("operator — "),s("code",[t._v("Function")]),t._v(" with type parameters of the same primitive type")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FunctionalInterface")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UnaryOperator")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("unary\n"),s("ul",[s("li",[s("code",[t._v("java.util.function.UnaryOperator<T>")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("static <T> UnaryOperator<T> identity()")])])])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.DoubleUnaryOperator")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.IntUnaryOperator")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.LongUnaryOperator")])])])]),t._v(" "),s("li",[t._v("binary\n"),s("ul",[s("li",[s("code",[t._v("java.util.function.BinaryOperator<T>")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("static <T> BinaryOperator<T> maxBy(Comparator<? super T> comparator)")])]),t._v(" "),s("li",[s("code",[t._v("static <T> BinaryOperator<T> minBy(Comparator<? super T> comparator)")])])])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.DoubleBinaryOperator")]),t._v(" — "),s("code",[t._v("double applyAsDouble(double left, double right)")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.IntBinaryOperator")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.LongBinaryOperator")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.util.function.Supplier<T>")]),t._v(" — "),s("code",[t._v("T get()")])]),t._v(" "),s("ul",[s("li",[t._v("variants\n"),s("ul",[s("li",[s("code",[t._v("java.util.function.BooleanSupplier")]),t._v(" — "),s("code",[t._v("boolean getAsBoolean()")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.DoubleSupplier")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.IntSupplier")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.LongSupplier")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.util.function.Consumer<T>")]),t._v(" — "),s("code",[t._v("void accept(T t)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("default Consumer<T> andThen(Consumer<? super T> after)")]),t._v(" — chaining"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// default implementation")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("accept")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" after"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("accept")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("variants\n"),s("ul",[s("li",[s("code",[t._v("java.util.function.DoubleConsumer")]),t._v(" — "),s("code",[t._v("void accept(double value)")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.IntConsumer")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.LongConsumer")])])])]),t._v(" "),s("li",[t._v("variants with two parameters\n"),s("ul",[s("li",[s("code",[t._v("java.util.function.BiConsumer<T, U>")]),t._v(" — "),s("code",[t._v("void accept(T t, U u)")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.ObjDoubleConsumer<T>")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.ObjIntConsumer<T>")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.ObjLongConsumer<T>")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.util.function.Predicate<T>")]),t._v(" — "),s("code",[t._v("boolean test(T t)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("static <T> Predicate<T> isEqual(Object targetRef)")])]),t._v(" "),s("li",[t._v("chaining\n"),s("ul",[s("li",[s("code",[t._v("default Predicate<T> and(Predicate<? super T> other)")])]),t._v(" "),s("li",[s("code",[t._v("default Predicate<T> negate()")])]),t._v(" "),s("li",[s("code",[t._v("default Predicate<T> or(Predicate<? super T> other)")])])])]),t._v(" "),s("li",[t._v("variants\n"),s("ul",[s("li",[s("code",[t._v("java.util.function.DoublePredicate")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.IntPredicate")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.LongPredicate")])]),t._v(" "),s("li",[s("code",[t._v("java.util.function.BiPredicate<T,U>")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"Inner-Class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Inner-Class"}},[t._v("#")]),t._v(" Inner Class")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("inner class")]),t._v(" "),s("ul",[s("li",[t._v("explicit reference to the outer class — outer class can be explicitly referred to as "),s("code",[t._v("OuterClass.this")]),t._v(" "),s("ul",[s("li",[t._v("passed as implicit parameter to inner class constructors")])])]),t._v(" "),s("li",[t._v("implicit reference — can access the data from the scope in which they are defined\n"),s("ul",[s("li",[t._v("synthesized constructor parameter for implicit reference — the compiler modifies all inner class constructors, adding a parameter for the outer class reference")])])]),t._v(" "),s("li",[t._v("constructing inner classes — "),s("code",[t._v("new")]),t._v(" keyword changes for implicit reference\n"),s("ul",[s("li",[t._v("inside outer class — "),s("code",[t._v("this.new")]),t._v(" or alternatively "),s("code",[t._v("new")])]),t._v(" "),s("li",[t._v("outside outer class — "),s("code",[t._v("outerObj.new")])])])]),t._v(" "),s("li",[t._v("access control — can be hidden from other classes in the same package\n"),s("ul",[s("li",[t._v("only inner classes can be private — regular classes always have either package or public visibility")]),t._v(" "),s("li",[s("code",[t._v("private")]),t._v(" accessible for each other — between the outer class and inner classes")])])]),t._v(" "),s("li",[t._v("refer to inner class outside the outer class — "),s("code",[t._v("OuterClass.InnerClass")])])])]),t._v(" "),s("li",[s("p",[t._v("inner class limits")]),t._v(" "),s("ul",[s("li",[t._v("static fields — must be "),s("code",[t._v("final")])]),t._v(" "),s("li",[t._v("static methods — cannot have static methods")])])]),t._v(" "),s("li",[s("p",[t._v("inner class after compilation or at runtime — synthesized regular classes")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Outer$Inner")]),t._v(" class — inner classes are translated into regular class files with "),s("code",[t._v("$")]),t._v(" (dollar signs) delimiting outer and inner class names\n"),s("ul",[s("li",[t._v("compared to regular classes — more access privileges to the outer class, like private fields")])])]),t._v(" "),s("li",[t._v("synthesized outer class reference — inner class has a "),s("code",[t._v("final")]),t._v(" "),s("code",[t._v("this$0")]),t._v(" field for reference to outer class generated by compiler")]),t._v(" "),s("li",[t._v("private inner classes — JVM does not support private classes, so the compiler produces a package-visible class with a private constructor, and a second package-visible constructor that calls the private one"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TalkingClock")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimePrinter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TalkingClock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TalkingClock")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimePrinter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TalkingClock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TalkingClock")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the last parameter type is synthesized solely to distinguish this constructor from others")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TalkingClock")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimePrinter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// actual call in outer class")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("mechanism for more privileged access to outer class — synthesized outer class backdoor method\n"),s("ul",[s("li",[t._v("backdoor method — outer class generates a package accessible static "),s("code",[t._v("access$0(OuterClass outer)")]),t._v(" method (method name can vary slightly), for inner class, outer class private field access is translated to backdoor method call")]),t._v(" "),s("li",[t._v("vulnerability — the generated backdoor method name is not legal in source code, but can be exploited by build or modify a class file")])])]),t._v(" "),s("li",[t._v("JVM unaware — the virtual machine does not have any special knowledge about inner classes")]),t._v(" "),s("li",[t._v("verify by inspecting class files — use "),s("code",[t._v("javap -p")]),t._v(" to verify")])])]),t._v(" "),s("li",[s("p",[t._v("local inner class — class locally in a single method")]),t._v(" "),s("ul",[s("li",[t._v("no access modifier — never declared with an access specifier")]),t._v(" "),s("li",[t._v("restricted scope — scope is always restricted to the block being declared")]),t._v(" "),s("li",[t._v("effectively final closure — can access effectively final local variables\n"),s("ul",[s("li",[t._v("as final fields — behind the scenes stored as a final field of inner class, and spawned to constructor for initialization")]),t._v(" "),s("li",[t._v("access mutable data — use an array of length 1")])])]),t._v(" "),s("li",[t._v("anonymous inner subclass"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SuperType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("construction parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// inner class methods and data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("implement an interface — "),s("code",[t._v("SuperType")]),t._v(" can be an interface, the inner class implements that interface")]),t._v(" "),s("li",[t._v("extend a class — "),s("code",[t._v("SuperType")]),t._v(" can also be a class, the inner class extends that class\n"),s("ul",[s("li",[t._v("a different subclass — take care that "),s("code",[t._v("equals()")]),t._v(" with "),s("code",[t._v("SuperType")]),t._v(" may fail")])])]),t._v(" "),s("li",[t._v("anonymity cannot have constructors — the name of a constructor must be the same as the name of a class")]),t._v(" "),s("li",[t._v("use case\n"),s("ul",[s("li",[t._v("double brace initialization for "),s("code",[t._v("ArrayList")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Harry"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tony"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("get the class from static methods, alternative to "),s("code",[t._v("T.class")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEnclosingClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])])])])]),t._v(" "),s("li",[s("p",[t._v("static inner class")]),t._v(" "),s("ul",[s("li",[t._v("static — do not have a outer class reference, can have static fields and methods")]),t._v(" "),s("li",[t._v("use case\n"),s("ul",[s("li",[t._v("enums are static inner classes")]),t._v(" "),s("li",[t._v("use in outer static methods — must be declared static if needed in a outer class static method")]),t._v(" "),s("li",[t._v("return type — can be used for holder for a method to return multiple values")])])]),t._v(" "),s("li",[t._v("the only static classes — only inner classes can be declared static")]),t._v(" "),s("li",[t._v("implicitly static\n"),s("ul",[s("li",[t._v("inner interfaces are implicitly "),s("code",[t._v("static")])]),t._v(" "),s("li",[t._v("inner classes inside interfaces are automatically "),s("code",[t._v("static public")])])])])])])]),t._v(" "),s("h2",{attrs:{id:"Reflection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Reflection"}},[t._v("#")]),t._v(" Reflection")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("runtime type identification — used by VM for method resolution")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Class getClass()")]),t._v(" in "),s("code",[t._v("Object")])]),t._v(" "),s("li",[s("code",[t._v("static Class<?> forName(String className)")]),t._v(" in "),s("code",[t._v("Class")])]),t._v(" "),s("li",[s("code",[t._v("T.class")]),t._v(" if "),s("code",[t._v("T")]),t._v(" is any Java type (or "),s("code",[t._v("void.class")]),t._v(")")]),t._v(" "),s("li",[t._v("type capturing — use "),s("code",[t._v("Class<T>")]),t._v(" as a parameter for type match, when called with a class object, the type parameter "),s("code",[t._v("T")]),t._v(" will be matched")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("interface java.lang.reflect.Type")]),t._v(" — super interface for all types, implemented or extended by "),s("code",[t._v("Class<T>")]),t._v(", "),s("code",[t._v("GenericArrayType")]),t._v(", "),s("code",[t._v("ParameterizedType")]),t._v(", "),s("code",[t._v("TypeVariable<D>")]),t._v(", "),s("code",[t._v("WildcardType")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("default String getTypeName()")])]),t._v(" "),s("li",[t._v("generics reflection methods — in implementing classes or sub-Interfaces")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("interface java.lang.reflect.AnnotatedElement")]),t._v(" — represents an annotated element with methods getting annotations")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.lang.reflect.GenericDeclaration")]),t._v(" — entities that declare type variables")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericDeclaration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotatedElement")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("TypeVariable<?>[] getTypeParameters()")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Class")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericDeclaration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotatedElement")]),t._v("\n")])])]),s("ul",[s("li",[t._v("reflection\n"),s("ul",[s("li",[s("code",[t._v("String getName()")])]),t._v(" "),s("li",[s("code",[t._v("String getTypeName()")])]),t._v(" "),s("li",[s("code",[t._v("String toString()")])]),t._v(" "),s("li",[s("code",[t._v("Class<?> getComponentType()")]),t._v(" — type of elements in an array, "),s("code",[t._v("null")]),t._v(" if "),s("code",[t._v("this")]),t._v(" is not an array")]),t._v(" "),s("li",[s("code",[t._v("ClassLoader getClassLoader()")])]),t._v(" "),s("li",[s("code",[t._v("T[] getEnumConstants()")])]),t._v(" "),s("li",[s("code",[t._v("Class<? super T> getSuperclass()")])])])]),t._v(" "),s("li",[t._v("instance creation\n"),s("ul",[s("li",[s("code",[t._v("T newInstance()")])]),t._v(" "),s("li",[s("code",[t._v("T cast(Object obj) throws ClassCastException")])])])]),t._v(" "),s("li",[t._v("method reflection — from this class and superclasses, "),s("code",[t._v("declared-")]),t._v(" only for this class\n"),s("ul",[s("li",[s("code",[t._v("Field[] getFields()")])]),t._v(" "),s("li",[s("code",[t._v("Field getField(String name)")])]),t._v(" "),s("li",[s("code",[t._v("Field[] getDeclaredFields()")])]),t._v(" "),s("li",[s("code",[t._v("Field getDeclaredField(String name)")])]),t._v(" "),s("li",[s("code",[t._v("Method[] getMethods()")])]),t._v(" "),s("li",[s("code",[t._v("Method getMethod(String name, Class<?>... parameterTypes)")])]),t._v(" "),s("li",[s("code",[t._v("Method[] getDeclaredMethods()")])]),t._v(" "),s("li",[s("code",[t._v("Method getDeclaredMethod(String name, Class<?>... parameterTypes)")])]),t._v(" "),s("li",[s("code",[t._v("Constructor[] getConstructors()")])]),t._v(" "),s("li",[s("code",[t._v("Constructor<T> getConstructor(Class<?>... parameterTypes)")])]),t._v(" "),s("li",[s("code",[t._v("Constructor[] getDeclaredConstructors()")])]),t._v(" "),s("li",[s("code",[t._v("Constructor<T> getDeclaredConstructor(Class<?>... parameterTypes)")])])])]),t._v(" "),s("li",[t._v("inner class and outer class\n"),s("ul",[s("li",[s("code",[t._v("Class<?>[] getClasses()")])]),t._v(" "),s("li",[s("code",[t._v("Class<?> getEnclosingClass()")])])])]),t._v(" "),s("li",[t._v("generics\n"),s("ul",[s("li",[s("code",[t._v("Type[] getGenericInterfaces()")])]),t._v(" "),s("li",[s("code",[t._v("Type getGenericSuperclass()")])]),t._v(" "),s("li",[s("code",[t._v("TypeVariable<Class<T>>[] getTypeParameters()")])])])]),t._v(" "),s("li",[t._v("get resources, delegating to class loader\n"),s("ul",[s("li",[s("code",[t._v("URL getResource(String name)")])]),t._v(" "),s("li",[s("code",[t._v("InputStream getResourceAsStream(String name)")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.lang.reflect.Field")]),s("br"),t._v(" "),s("code",[t._v("java.lang.reflect.Method")]),s("br"),t._v(" "),s("code",[t._v("java.lang.reflect.Constructor")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Class<?> getDeclaringClass()")])]),t._v(" "),s("li",[s("code",[t._v("Class<?>[] getExceptionTypes()")]),t._v(" ("),s("code",[t._v("Constructor")]),t._v(" and "),s("code",[t._v("Method")]),t._v(")")]),t._v(" "),s("li",[s("code",[t._v("Class<?>[] getParameterTypes()")]),t._v(" ("),s("code",[t._v("Constructor")]),t._v(" and "),s("code",[t._v("Method")]),t._v(")")]),t._v(" "),s("li",[s("code",[t._v("int getModifiers()")])]),t._v(" "),s("li",[s("code",[t._v("String getName()")])]),t._v(" "),s("li",[t._v("inherited from "),s("code",[t._v("java.lang.reflect.AccessibleObject")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("boolean isAccessible()")])]),t._v(" "),s("li",[s("code",[t._v("void setAccessible()")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.lang.reflect.Constructor")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constructor")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executable")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("T newInstance(Object... initargs)")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.lang.reflect.Method")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executable")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("Object invoke(Object obj, Object... args)")]),t._v(" "),s("ul",[s("li",[t._v("For a static method, the first parameter is ignored, use "),s("code",[t._v("null")])]),t._v(" "),s("li",[t._v("slow and as last resort")])])]),t._v(" "),s("li",[s("code",[t._v("Class<?> getReturnType()")])]),t._v(" "),s("li",[t._v("Generics\n"),s("ul",[s("li",[s("code",[t._v("TypeVariable[] getTypeParameters()")])]),t._v(" "),s("li",[s("code",[t._v("Type getGenericReturnType()")])]),t._v(" "),s("li",[s("code",[t._v("Type[] getGenericParameterTypes()")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.lang.reflect.Field")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Field")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccessibleObject")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Member")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("Object get(Object obj)")]),t._v(" — "),s("code",[t._v("obj.field")]),s("br"),t._v(" "),s("code",[t._v("type getType(Object obj)")]),t._v(" — for primitive")]),t._v(" "),s("li",[s("code",[t._v("void set(Object obj, Object value)")]),s("br"),t._v(" "),s("code",[t._v("type setType(Object obj, type value)")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.lang.reflect.Modifier")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("static String toString(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isAbstract(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isFinal(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isInterface(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isNative(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isPrivate(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isProtected(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isPublic(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isStatic(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isStrict(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isSynchronized(int mod)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isVolatile(int mod)")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.lang.reflect.Array")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("static Object newInstance(Class<?> componentType, int length)")]),s("br"),t._v(" "),s("code",[t._v("static Object newInstance(Class<?> componentType, int... dimensions)")]),t._v(" "),s("ul",[s("li",[t._v("in coordination with "),s("code",[t._v("ClassObj.getComponentType()")])]),t._v(" "),s("li",[s("code",[t._v("type[]")]),t._v(" can be converted to an "),s("code",[t._v("Object")]),t._v(", but not "),s("code",[t._v("Object[]")])])])]),t._v(" "),s("li",[s("code",[t._v("static int getLength(Object array)")])]),t._v(" "),s("li",[s("code",[t._v("static void set(Object array)")])]),t._v(" "),s("li",[s("code",[t._v("static Object get(Object array)")])]),t._v(" "),s("li",[s("code",[t._v("static type getType(Object array)")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Package")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotatedElement")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"Proxy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Proxy"}},[t._v("#")]),t._v(" Proxy")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("proxies")]),t._v(" "),s("ul",[s("li",[t._v("usage — at runtime, create new classes that implement given interfaces, with a method invocation handler")]),t._v(" "),s("li",[t._v("proxy class definition\n"),s("ul",[s("li",[t._v("runtime defined class — proxy objects are of classes defined at runtime with names such as "),s("code",[t._v("$Proxy0")])]),t._v(" "),s("li",[t._v("modifiers and inheritance — all proxies are "),s("code",[t._v("public final")]),t._v(" and extends "),s("code",[t._v("Proxy")])]),t._v(" "),s("li",[t._v("cached — only one proxy class for a particular class loader and ordered set of interfaces")]),t._v(" "),s("li",[t._v("package — default package if given interfaces all public, else belongs to the package of given non-public interfaces")])])]),t._v(" "),s("li",[t._v("proxying — all proxy classes override the "),s("code",[t._v("toString()")]),t._v(", "),s("code",[t._v("equals()")]),t._v(", and "),s("code",[t._v("hashCode()")]),t._v(", and given interface methods with "),s("code",[t._v("InvocationHandler::invoke")]),t._v(" "),s("ul",[s("li",[t._v("other methods in "),s("code",[t._v("Object")]),t._v(" are untouched")])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("interface java.lang.reflect.InvocationHandler")]),t._v(" — invocation handlers")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("public Object invoke(Object proxy, Method method, Object[] args) throws Throwable")])]),t._v(" "),s("li",[t._v("additional data is stored in the invocation handler")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("java.lang.reflect.Proxy")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v("\n")])])]),s("ul",[s("li",[t._v("creation\n"),s("ul",[s("li",[s("code",[t._v("static Object newProxyInstance(ClassLoader loader, Class<?>[] interfaces, InvocationHandler h)")])]),t._v(" "),s("li",[s("code",[t._v("static Class<?> getProxyClass(ClassLoader loader, Class<?>... interfaces)")])])])]),t._v(" "),s("li",[s("code",[t._v("static InvocationHandler getInvocationHandler(Object proxy)")])]),t._v(" "),s("li",[s("code",[t._v("static boolean isProxyClass(Class<?> cl)")])])])]),t._v(" "),s("li",[s("p",[t._v("use example")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProxyTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" elems "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" —i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            elems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newProxyInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TraceHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("binarySearch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadLocalRandom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("current")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TraceHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InvocationHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TraceHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print implicit argument")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print method name")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"("')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print explicit arguments")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// invoke actual method")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"Error-Handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Error-Handling"}},[t._v("#")]),t._v(" Error Handling")]),t._v(" "),s("h3",{attrs:{id:"Debugging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Debugging"}},[t._v("#")]),t._v(" Debugging")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("general")]),t._v(" "),s("ul",[s("li",[t._v("use debugger")]),t._v(" "),s("li",[t._v("test with main method, or unit test tools")])])]),t._v(" "),s("li",[s("p",[t._v("print or log")]),t._v(" "),s("ul",[s("li",[t._v("debug by print concatenated or formatted string")]),t._v(" "),s("li",[t._v("logging proxy — anonymous inner class overriding methods of interest with logger")]),t._v(" "),s("li",[t._v("stack trace — "),s("code",[t._v("Throwable::printStackTrace")]),t._v(" and rethrow, or "),s("code",[t._v("Thread.dumpStack()")]),t._v(" "),s("ul",[s("li",[t._v("capture string instead of printing to "),s("code",[t._v("System.err")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringWriter")]),t._v(" out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" description "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("change handler for uncaught exceptions"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDefaultUncaughtExceptionHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UncaughtExceptionHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uncaughtException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* logging... */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])])]),t._v(" "),s("li",[s("p",[t._v("CLI options related to debugging")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ctrl")]),t._v(" + "),s("code",[t._v("\\")]),t._v(" — get thread dump when the program hangs??")]),t._v(" "),s("li",[s("code",[t._v("java")]),t._v(" "),s("ul",[s("li",[t._v("use "),s("code",[t._v("-verbose")]),t._v(" when launching JVM for diagnosing class path problems")]),t._v(" "),s("li",[t._v("use "),s("code",[t._v("Xprof")]),t._v(" for profiling, note that support was removed in 10.0")]),t._v(" "),s("li",[s("code",[t._v("-XX:+HeapDumpOnOutOfMemoryError")])])])]),t._v(" "),s("li",[t._v("use "),s("code",[t._v("-Xlint:all")]),t._v(" when "),s("code",[t._v("javac")])]),t._v(" "),s("li",[t._v("use "),s("code",[t._v("jconsole")]),t._v(" to track memory consumption, thread usage, class loading")]),t._v(" "),s("li",[s("code",[t._v("jmap")]),t._v(" and "),s("code",[t._v("jhat")]),t._v(" ("),s("code",[t._v("jhat")]),t._v(" removed in JDK 9) — "),s("code",[t._v("jmap")]),t._v(" to get a heap dump and "),s("code",[t._v("jhat")]),t._v(" to examine"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("jmap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dump"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("format"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dumpFileName processID\njhat dumpFileName\n")])])]),s("ul",[s("li",[t._v("at "),s("code",[t._v("localhost:7000")])])])]),t._v(" "),s("li",[s("code",[t._v("jstat")])]),t._v(" "),s("li",[s("code",[t._v("jcmd")])]),t._v(" "),s("li",[s("code",[t._v("hprof")])]),t._v(" "),s("li",[s("code",[t._v("jps")])]),t._v(" "),s("li",[s("code",[t._v("jstack")])]),t._v(" "),s("li",[s("code",[t._v("syslog")])])])])]),t._v(" "),s("h3",{attrs:{id:"Exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Exceptions"}},[t._v("#")]),t._v(" Exceptions")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("unchecked exceptions and checked exceptions")]),t._v(" "),s("ul",[s("li",[t._v("unchecked — any exception that derives from the class "),s("code",[t._v("Error")]),t._v(" or the class "),s("code",[t._v("RuntimeException")]),t._v(" an unchecked exception")]),t._v(" "),s("li",[t._v("checked — All other exceptions are called checked exceptions, including "),s("code",[t._v("Exception")])]),t._v(" "),s("li",[t._v("why called checked — The compiler checks that you provide exception handlers for all checked exceptions")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Throwable")]),t._v(" — the superclass of all errors and exceptions, other objects cannot be thrown")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v("\n")])])]),s("ul",[s("li",[t._v("constructors\n"),s("ul",[s("li",[s("code",[t._v("Throwable()")])]),t._v(" "),s("li",[s("code",[t._v("Throwable(String message)")])]),t._v(" "),s("li",[s("code",[t._v("Throwable(String message, Throwable cause)")])]),t._v(" "),s("li",[s("code",[t._v("protected Throwable(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace)")])]),t._v(" "),s("li",[s("code",[t._v("Throwable(Throwable cause)")])])])]),t._v(" "),s("li",[t._v("stack trace\n"),s("ul",[s("li",[s("code",[t._v("void printStackTrace()")]),s("br"),t._v(" "),s("code",[t._v("void printStackTrace(PrintStream s)")]),s("br"),t._v(" "),s("code",[t._v("void printStackTrace(PrintWriter s)")])]),t._v(" "),s("li",[s("code",[t._v("void setStackTrace(StackTraceElement[] stackTrace)")])]),t._v(" "),s("li",[s("code",[t._v("StackTraceElement[] getStackTrace()")])]),t._v(" "),s("li",[s("code",[t._v("Throwable fillInStackTrace()")])])])]),t._v(" "),s("li",[t._v("error message\n"),s("ul",[s("li",[s("code",[t._v("String getMessage()")])]),t._v(" "),s("li",[s("code",[t._v("String getLocalizedMessage()")]),t._v(" — for overriding, defaults to "),s("code",[t._v("getMessage()")])]),t._v(" "),s("li",[s("code",[t._v("String toString()")]),t._v(" — class name, and message if applicable")])])]),t._v(" "),s("li",[t._v("wrapping\n"),s("ul",[s("li",[s("code",[t._v("Throwable initCause(Throwable cause)")])]),t._v(" "),s("li",[s("code",[t._v("Throwable getCause()")])])])]),t._v(" "),s("li",[t._v("suppress\n"),s("ul",[s("li",[s("code",[t._v("void addSuppressed(Throwable exception)")])]),t._v(" "),s("li",[s("code",[t._v("Throwable[] getSuppressed()")])])])]),t._v(" "),s("li",[t._v("subclasses\n"),s("ul",[s("li",[s("code",[t._v("Error")])]),t._v(" "),s("li",[s("code",[t._v("Exception")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Error")]),t._v(" — internal errors and resource exhaustion situations, not expected to throw by user")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Exception")]),t._v(" and its hierarchy")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("CloneNotSupportedException")])]),t._v(" "),s("li",[s("code",[t._v("InterruptedException")])]),t._v(" "),s("li",[s("code",[t._v("ReflectiveOperationException")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ClassNotFoundException")])]),t._v(" "),s("li",[s("code",[t._v("IllegalAccessException")])]),t._v(" "),s("li",[s("code",[t._v("InstantiationException")])]),t._v(" "),s("li",[s("code",[t._v("NoSuchFieldException")])]),t._v(" "),s("li",[s("code",[t._v("NoSuchMethodException")])])])]),t._v(" "),s("li",[s("code",[t._v("RuntimeException")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ArithmeticException")])]),t._v(" "),s("li",[s("code",[t._v("ArrayStoreException")])]),t._v(" "),s("li",[s("code",[t._v("ClassCastException")])]),t._v(" "),s("li",[s("code",[t._v("EnumConstantNotPresentException")])]),t._v(" "),s("li",[s("code",[t._v("IllegalArgumentException")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("IllegalThreadStateException")])]),t._v(" "),s("li",[s("code",[t._v("NumberFormatException")])])])]),t._v(" "),s("li",[s("code",[t._v("IllegalMonitorStateException")])]),t._v(" "),s("li",[s("code",[t._v("IllegalStateException")])]),t._v(" "),s("li",[s("code",[t._v("IndexOutOfBoundsException")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ArrayIndexOutOfBoundsException")])]),t._v(" "),s("li",[s("code",[t._v("StringIndexOutOfBoundsException")])])])]),t._v(" "),s("li",[s("code",[t._v("NegativeArraySizeException")])]),t._v(" "),s("li",[s("code",[t._v("NullPointerException")])]),t._v(" "),s("li",[s("code",[t._v("SecurityException")])]),t._v(" "),s("li",[s("code",[t._v("TypeNotPresentException")])]),t._v(" "),s("li",[s("code",[t._v("UnsupportedOperationException")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("StackTraceElement")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StackTraceElement")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v("\n")])])]),s("ul",[s("li",[t._v("creation\n"),s("ul",[s("li",[s("code",[t._v("StackTraceElement(String declaringClass, String methodName, String fileName, int lineNumber)")])]),t._v(" "),s("li",[s("code",[t._v("Throwable::getStackTrace")])]),t._v(" "),s("li",[s("code",[t._v("Thread::getStackTrace")])]),t._v(" "),s("li",[s("code",[t._v("Thread.getAllStackTraces()")])])])]),t._v(" "),s("li",[t._v("stack info\n"),s("ul",[s("li",[s("code",[t._v("String getClassName()")])]),t._v(" "),s("li",[s("code",[t._v("String getFileName()")])]),t._v(" "),s("li",[s("code",[t._v("int getLineNumber()")])]),t._v(" "),s("li",[s("code",[t._v("String getMethodName()")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"Exception-Handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Exception-Handling"}},[t._v("#")]),t._v(" Exception Handling")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("exception specification — declare checked exceptions")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// modifiers return_type method_name(parameters) throws Exception1, Exception2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java.io.FileInputStream")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileNotFoundException")]),t._v("\n")])])]),s("ul",[s("li",[t._v("when to declare\n"),s("ul",[s("li",[t._v("nested method call — when calling a method that threatens to throw a checked exception")]),t._v(" "),s("li",[s("code",[t._v("throw")]),t._v(" checked exceptions spontaneously — check exceptions can be thrown only when declared by the method")])])]),t._v(" "),s("li",[t._v("if not declared — compiling error if a method fails to faithfully declare all checked exceptions or handle them")]),t._v(" "),s("li",[t._v("if caught — no need for "),s("code",[t._v("throws")])]),t._v(" "),s("li",[t._v("when overriding a method\n"),s("ul",[s("li",[t._v("more specific exceptions or not at all — exception specification cannot be more general; OK to throw more specific exceptions, or not to throw any exceptions in the subclass method")]),t._v(" "),s("li",[t._v("none if none in superclass — if the superclass method throws no checked exception at all, neither can the subclass")])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("try catch")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// statements that might throw exceptions")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileNotFoundException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// optionally final in parameter")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// emergency action for missing files")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UnknownHostException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// emergency action for unknown hosts")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// emergency action for all other I/O problems")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// close resources")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("multiple exception types — only needed when catching exception types that are not subclasses of one another"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileNotFoundException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UnknownHostException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// emergency action for missing files and unknown hosts")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("implicit "),s("code",[t._v("final")]),t._v(" — the exception variable is implicitly "),s("code",[t._v("final")]),t._v(" when multiple exception types")])])]),t._v(" "),s("li",[t._v("rethrow — "),s("code",[t._v("throw")]),t._v(" in "),s("code",[t._v("catch")]),t._v(" block\n"),s("ul",[s("li",[t._v("exception wrapping — use "),s("code",[t._v("Throwable::initCause")]),t._v(" to throw as another wrapped type and "),s("code",[t._v("Throwable::getCause")]),t._v(" for original failure")]),t._v(" "),s("li",[t._v("bypass exception specification limit — rethrow a wrapped "),s("code",[t._v("RuntimeException")]),t._v(" if a method cannot throw checked exception\n"),s("ul",[s("li",[t._v("for "),s("code",[t._v("IOException")]),t._v(" — for example, "),s("code",[t._v("java.io.UncheckedIOException")]),t._v(" is designed to wrap "),s("code",[t._v("IOException")])])])]),t._v(" "),s("li",[t._v("use generics to make checked exceptions unchecked, see "),s("a",{attrs:{href:"#Generics"}},[t._v("Generics")])])])]),t._v(" "),s("li",[t._v("smart narrowing — when rethrow any exception"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateRecord")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// access the database")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("level"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("example above — compiler now tracks the fact that "),s("code",[t._v("e")]),t._v(" originates from the "),s("code",[t._v("try")]),t._v(" block, it is valid to declare the enclosing method as throws "),s("code",[t._v("SQLException")])]),t._v(" "),s("li",[t._v("smart narrowing conditions\n"),s("ul",[s("li",[t._v("only checked exceptions — provided that the only checked exceptions in that block are "),s("code",[t._v("SQLException")]),t._v(" instances")]),t._v(" "),s("li",[s("code",[t._v("final")]),t._v(" "),s("code",[t._v("e")]),t._v(" — and provided that "),s("code",[t._v("e")]),t._v(" is not changed in the catch block")])])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("finally")]),t._v(" — always executed, can be used without "),s("code",[t._v("catch")])]),t._v(" "),s("ul",[s("li",[t._v("order — executes before the method return, if "),s("code",[t._v("return")]),t._v(" used before "),s("code",[t._v("finally")])]),t._v(" "),s("li",[t._v("mask "),s("code",[t._v("return")]),t._v(" and exceptions\n"),s("ul",[s("li",[s("code",[t._v("return")]),t._v(" in "),s("code",[t._v("finally")]),t._v(" will mask previous "),s("code",[t._v("return")])]),t._v(" "),s("li",[t._v("exceptions in "),s("code",[t._v("finally")]),t._v(" will mask exceptions previously thrown")])])]),t._v(" "),s("li",[t._v("handle exceptions in "),s("code",[t._v("finally")]),t._v(" "),s("ul",[s("li",[t._v("wrap a "),s("code",[t._v("try catch")]),t._v(" block to handle possible exception thrown by "),s("code",[t._v("finally")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" in "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// code that might throw exceptions")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in.close();")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// show error message")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("rethrow the original, suppress exception thrown by "),s("code",[t._v("finally")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" in "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" ex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// code that might throw exceptions")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" ex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSuppressed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("try (resources)")]),t._v(" — auto close when exiting the block")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// work with res")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("the resource needs to implement "),s("code",[t._v("AutoCloseable")]),t._v(" which has a single method"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutoCloseable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("multiple resources — use semicolon as delimiter")]),t._v(" "),s("li",[t._v("when both "),s("code",[t._v("try")]),t._v(" block and "),s("code",[t._v("AutoCloseable::close")]),t._v(" throw exception — any exceptions thrown by "),s("code",[t._v("close")]),t._v(" methods are suppressed")]),t._v(" "),s("li",[t._v("can have "),s("code",[t._v("catch")]),t._v(" and "),s("code",[t._v("finally")]),t._v(" blocks, but not recommended")])])])]),t._v(" "),s("h3",{attrs:{id:"Assertion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Assertion"}},[t._v("#")]),t._v(" Assertion")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("assert")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" condition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("condition")]),t._v(" — throw an "),s("code",[t._v("AssertionError")]),t._v(" if the assertion fails")]),t._v(" "),s("li",[s("code",[t._v("expression")]),t._v(" — passed to "),s("code",[t._v("AssertionError::new")]),t._v(" to produce a message string, using "),s("code",[t._v("String::valueOf")]),t._v(" when converting")]),t._v(" "),s("li",[t._v("enabling and disabling\n"),s("ul",[s("li",[t._v("disabled — disabled by default, "),s("code",[t._v("-da")]),t._v(" or "),s("code",[t._v("-disableassertions")]),t._v(" to explicitly disable certain classes")]),t._v(" "),s("li",[t._v("enable — by "),s("code",[t._v("-ea")]),t._v(" or "),s("code",[t._v("-enableassertions")]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("java -enableassertions MyApp\njava -ea:MyClass -ea:com.mycompany.mylib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". MyApp "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for specific classes")]),t._v("\n")])])]),s("ul",[s("li",[t._v("enabling mechanism — when enabled, no recompiling, but the class loader stops stripping out the assertion code")])])]),t._v(" "),s("li",[t._v("also for JVM loaded classes — some classes are not loaded by a class loader but directly by the virtual machine, but above switches still work")]),t._v(" "),s("li",[t._v("enable for system classes — "),s("code",[t._v("-enablesystemassertions")]),t._v(" / "),s("code",[t._v("-esa")]),t._v(" for system classes")])])])])]),t._v(" "),s("li",[s("p",[t._v("assert use")]),t._v(" "),s("ul",[s("li",[t._v("fatal errors — assertion failures are intended to be fatal, unrecoverable errors")]),t._v(" "),s("li",[t._v("for development and testing — assertion checks are turned on only during development and testing")]),t._v(" "),s("li",[t._v("use for precondition — parameter checking")]),t._v(" "),s("li",[t._v("use for documenting assumptions"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use comments to document underlying assumptions")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (i % 3 == 2)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use assertion instead")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// even better assertion")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("AssertionError")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AssertionError")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"Logging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Logging"}},[t._v("#")]),t._v(" Logging")]),t._v(" "),s("p",[t._v("see "),s("RouterLink",{attrs:{to:"/backend/java/javaMisc.html#Logging"}},[t._v("Logging")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"Generics"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Generics"}},[t._v("#")]),t._v(" Generics")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Generics")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("further reading"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("diamond syntax")]),t._v(" "),s("li",[t._v("raw and typed\n"),s("ul",[s("li",[t._v("typed are subtypes — typed ones are subtypes of the raw one")]),t._v(" "),s("li",[t._v("warning when using raw types")]),t._v(" "),s("li",[t._v("raw at runtime — types only checked when compiling, all are raw without type at runtime")])])]),t._v(" "),s("li",[t._v("differently parallelized, different type — no relationship between "),s("code",[t._v("Generic<Type_2>")]),t._v(" and "),s("code",[t._v("Generic<Type_2>")]),t._v(", regardless of the relationship between the type variables")]),t._v(" "),s("li",[t._v("at runtime in JVM\n"),s("ul",[s("li",[t._v("erased to bound — type variables are erased and replaced by first bound, or "),s("code",[t._v("Object")])]),t._v(" "),s("li",[t._v("cast when needed — compiler inserts casts to other bounds when necessary\n"),s("ul",[s("li",[t._v("place the predominant interface at the first one for performance")])])]),t._v(" "),s("li",[t._v("bridge methods are synthesized when necessary (when overriding)\n"),s("ul",[s("li",[t._v("override method can have a different signature — due to type erasure of generics or different return type")]),t._v(" "),s("li",[t._v("bridge method — the same signature of super type method, calls actual method")])])])])])])]),t._v(" "),s("li",[s("p",[t._v("generic syntax")]),t._v(" "),s("ul",[s("li",[t._v("name conventions\n"),s("ul",[s("li",[s("code",[t._v("E")]),t._v(" — for the element type of a collection")]),t._v(" "),s("li",[s("code",[t._v("K")]),t._v(" and "),s("code",[t._v("V")]),t._v(" — for key and value types of a table")]),t._v(" "),s("li",[s("code",[t._v("T")]),t._v(" (and the neighboring "),s("code",[t._v("U")]),t._v(" and "),s("code",[t._v("S")]),t._v(") — for “any type at all”")])])]),t._v(" "),s("li",[t._v("generic class syntax"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("U")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("generic methods inside ordinary classes"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SafeVarargs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to suppress Warning: Possible heap pollution from parameterized vararg type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMiddle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("call — type parameter before method name, "),s("code",[t._v("className.<type>method(params)")]),t._v(" "),s("ul",[s("li",[t._v("avoid parsing ambiguities in C++ — "),s("code",[t._v("g(f<a,b>(c))")])])])]),t._v(" "),s("li",[t._v("type inference — type can be inferred from parameters, but can be problematic when multiple super types")])])]),t._v(" "),s("li",[t._v("generic bounds — "),s("code",[t._v("extends")]),t._v(", including"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("class bound — must be the first one in the bounds list")]),t._v(" "),s("li",[t._v("interface bound and class bound — arbitrary number of interfaces, but at most one class")])])]),t._v(" "),s("li",[t._v("wildcards — "),s("code",[t._v("?")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("?")]),t._v(" — for a variable of type "),s("code",[t._v("?")]),t._v(", can only assign when left value is "),s("code",[t._v("Object")]),t._v(", or right value is "),s("code",[t._v("null")])]),t._v(" "),s("li",[s("code",[t._v("? extends SomeType")]),t._v(" — including; a variable of this type can only be right value"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Manager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" managerBuddies "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ceo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" wildcardBuddies "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" managerBuddies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wildcardBuddies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirst")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function signature is `? extends Employee getFirst()`, OK")]),t._v("\nwildcardBuddies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFirst")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lowlyEmployee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function signature is `void setFirst(? extends Employee)`, compile-time error")]),t._v("\n")])])])]),t._v(" "),s("li",[s("code",[t._v("? super SomeType")]),t._v(" — including; the contrary of "),s("code",[t._v("? extends SomeType")]),t._v(" (left value can only be "),s("code",[t._v("Object")]),t._v(")\n"),s("ul",[s("li",[t._v("example — "),s("code",[t._v("<T extends Comparable<? super T>>")]),t._v(", a rescue when "),s("code",[t._v("T")]),t._v(" does not implement "),s("code",[t._v("Comparable")]),t._v(" but its super class does")])])]),t._v(" "),s("li",[t._v("wildcard capture — when the wildcard represents a single, definite type, it can be captured by type parameter"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("swapHelper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirst")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFirst")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSecond")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSecond")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("swap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("swapHelper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])])]),t._v(" "),s("li",[s("p",[t._v("use generics to make checked exceptions unchecked")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SuppressWarnings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unchecked"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("throwAs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do work")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the compiler will believe that t becomes an unchecked exception")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Block")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuntimeException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("throwAs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// alternatively, see https://stackoverflow.com/questions/31316581/a-peculiar-feature-of-exception-type-inference-in-java-8")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Block.throwAs(t);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("limits of generics")]),t._v(" "),s("ul",[s("li",[t._v("type parameters cannot be primitive types — not compatible with "),s("code",[t._v("Object")]),t._v(" when type erased at runtime")]),t._v(" "),s("li",[t._v("not in static context — type variables not valid in static context (parameterized types are available)"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" singleInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSingleInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("singleInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... construct new instance of T")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" singleInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("not when "),s("code",[t._v("throw")]),t._v(" or "),s("code",[t._v("catch")]),t._v(" — cannot throw or catch instances of a generic class")]),t._v(" "),s("li",[t._v("not when cast and "),s("code",[t._v("instanceof")]),t._v(" — compile warning when cast ("),s("code",[t._v("(Pair<String>) a")]),t._v("), compile error when "),s("code",[t._v("instanceof")]),t._v(" ("),s("code",[t._v("a instanceof Pair<T>")]),t._v(")")]),t._v(" "),s("li",[t._v("name clash\n"),s("ul",[s("li",[t._v("name clash with methods in "),s("code",[t._v("Object")]),t._v(" — error by clash with "),s("code",[t._v("Object::equals")]),t._v(" when defining "),s("code",[t._v("equals(T other)")])]),t._v(" "),s("li",[t._v("error when generic interfaces implemented more than once with different arguments — will be a conflict with the synthesized bridge methods"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Manager")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Manager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bridge method for Comparable<X>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("li",[t._v("heap pollution, cannot initialize arrays of parameterized types, but can be declared — error when "),s("code",[t._v("new Pair<String>[10]")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// legal but not safe workaround, possible heap pollution")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" table "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// heap pollution")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" objArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" table"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// defined above")]),t._v("\nobjArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("cannot instantiate type variable — error when "),s("code",[t._v("new T()")]),t._v(" "),s("ul",[s("li",[t._v("workaround — provide the constructor using lambda"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makePair")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makePair")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Supplier")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" constr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" constr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("workaround — use reflection"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makePair")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makePair")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" cl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pair")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" ex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("li",[t._v("cannot construct generic array — error when "),s("code",[t._v("new T[n]")]),t._v(" "),s("ul",[s("li",[t._v("parameterized vararg type ("),s("code",[t._v("T...")]),t._v(") — against the rule, but can use "),s("code",[t._v("@SafeVarargs")]),t._v(" to suppress warning")]),t._v(" "),s("li",[t._v("workaround — use "),s("code",[t._v("Object[]")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SuppressWarnings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unchecked"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// no cast needed")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("workaround — use cast from "),s("code",[t._v("Object[]")]),t._v(", type erasure makes the cast undetectable at runtime"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" elements "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("not work when assigning to actual type — "),s("code",[t._v("ArrayList::toArray")]),t._v(" either return "),s("code",[t._v("Object[]")]),t._v(" or take a "),s("code",[t._v("T[]")]),t._v(" parameter to return "),s("code",[t._v("T[]")])])])]),t._v(" "),s("li",[t._v("workaround — provide constructor or use reflection, see above")])])])])])]),t._v(" "),s("h2",{attrs:{id:"Annotations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Annotations"}},[t._v("#")]),t._v(" Annotations")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("annotations")]),t._v(" "),s("ul",[s("li",[t._v("syntax — each annotation is preceded by an "),s("code",[t._v("@")]),t._v(" symbol, used like a modifier and is placed before the annotated item without a semicolon\n"),s("ul",[s("li",[t._v("an item can have multiple annotations")]),t._v(" "),s("li",[t._v("one annotation can be used multiple times on one item if "),s("code",[t._v("@Repeatable")])])])]),t._v(" "),s("li",[t._v("annotation interfaces — define annotations, creates actual Java interfaces, implicitly extend "),s("code",[t._v("Annotation")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("modifiers "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("elementName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  type "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("elementName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("cannot be extended or implemented explicitly")]),t._v(" "),s("li",[t._v("when being processed — tools that process annotations receive objects implementing annotation interfaces, and call methods to retrieve elements")]),t._v(" "),s("li",[s("code",[t._v("java.lang.annotation.Annotation")]),t._v(" — The common interface extended by all annotation types. Note that an interface that manually extends this one does not define an annotation type."),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Annotation")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("Class<? extends Annotation> annotationType()")])])])])])]),t._v(" "),s("li",[t._v("annotation places\n"),s("ul",[s("li",[t._v("declarations")]),t._v(" "),s("li",[t._v("type uses")])])])])]),t._v(" "),s("li",[s("p",[t._v("annotation elements")]),t._v(" "),s("ul",[s("li",[t._v("elements of annotations — parameters when annotating, all element values must be compile-time constants, correspond to methods of annotation interfaces"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AnnotationName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elementName1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" elementName2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AnnotationName")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AnnotationName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valueForSingleElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("marker annotation — annotations no elements need to be specified when annotating")]),t._v(" "),s("li",[t._v("single value annotation — only one element called "),s("code",[t._v("value")])])])]),t._v(" "),s("li",[t._v("annotation element types — non-null, usually "),s("code",[t._v('""')]),t._v(" or "),s("code",[t._v("Void.class")]),t._v(" as substitution\n"),s("ul",[s("li",[t._v("primitive types")]),t._v(" "),s("li",[s("code",[t._v("String")])]),t._v(" "),s("li",[s("code",[t._v("Class")])]),t._v(" "),s("li",[s("code",[t._v("Enum")])]),t._v(" "),s("li",[t._v("annotation types, error to introduce circular dependencies"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Reference")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Reference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// an annotation type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BugReport")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Reference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3352627"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// when annotating")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("arrays of the preceding types (flat), enclosed in braces when annotating"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BugReport")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reportedBy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Harry"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Carl"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BugReport")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reportedBy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Joe"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// OK, same as {"Joe"}')]),t._v("\n")])])])])])])])]),t._v(" "),s("li",[s("p",[t._v("declaration annotations")]),t._v(" "),s("ul",[s("li",[t._v("annotation target — implementing classes of "),s("code",[t._v("AnnotatedElement")]),t._v(": "),s("code",[t._v("Class")]),t._v(" (also interfaces), "),s("code",[t._v("Constructor")]),t._v(", "),s("code",[t._v("Executable")]),t._v(", "),s("code",[t._v("Field")]),t._v(", "),s("code",[t._v("Method")]),t._v(", "),s("code",[t._v("Package")]),t._v(", "),s("code",[t._v("Parameter")]),t._v("; sub-interface "),s("code",[t._v("TypeVariable")]),t._v(" and local variables\n"),s("ul",[s("li",[t._v("package annotations — in "),s("code",[t._v("package-info.java")]),t._v(", can only be processed at the source level"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Package-level javadoc\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GPL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gnu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("GPL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("parameter annotations — explicitly declare "),s("code",[t._v("this")]),t._v(" if necessary")])])]),t._v(" "),s("li",[t._v("local variable annotations — can only be processed at the source level")]),t._v(" "),s("li",[t._v("an annotation can annotate itself")])])]),t._v(" "),s("li",[s("p",[t._v("type use ("),s("code",[t._v("ElementType.TYPE_USE")]),t._v(") annotations — annotate types, as sub-interfaces of "),s("code",[t._v("AnnotatedElement")])]),t._v(" "),s("ul",[s("li",[t._v("type arguments — "),s("code",[t._v("List<@NonNull String>")]),t._v(", "),s("code",[t._v("List<@Localized ? extends Message>")]),t._v(", "),s("code",[t._v("List<? extends @Localized Message>")])]),t._v(" "),s("li",[t._v("arrays — "),s("code",[t._v("@NonNull String[][] words")]),t._v(" ("),s("code",[t._v("words[i][j]")]),t._v(" is not "),s("code",[t._v("null")]),t._v("), "),s("code",[t._v("String @NonNull [][] words")]),t._v(" ("),s("code",[t._v("words")]),t._v(" is not "),s("code",[t._v("null")]),t._v("), "),s("code",[t._v("String[] @NonNull [] words")]),t._v(" ("),s("code",[t._v("words[i]")]),t._v(" is not "),s("code",[t._v("null")]),t._v(")")]),t._v(" "),s("li",[t._v("when inheriting — "),s("code",[t._v("class Warning extends @Localized Message")])]),t._v(" "),s("li",[t._v("when "),s("code",[t._v("new")]),t._v(" — "),s("code",[t._v("new @Localized String(...)")])]),t._v(" "),s("li",[t._v("casts and "),s("code",[t._v("instanceof")]),t._v(" — "),s("code",[t._v("(@Localized String) text")]),t._v(", "),s("code",[t._v("if (text instanceof @Localized String)")])]),t._v(" "),s("li",[t._v("exception specifications — "),s("code",[t._v("public String read() throws @Localized IOException")])]),t._v(" "),s("li",[t._v("method references — "),s("code",[t._v("@Localized Message::getText")])]),t._v(" "),s("li",[t._v("cannot"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NonNull")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ERROR: Cannot annotate class literal")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("@"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NonNull")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ERROR: Cannot annotate import")]),t._v("\n")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"Standard-Annotations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Standard-Annotations"}},[t._v("#")]),t._v(" Standard Annotations")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("for compilation")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("@Deprecated")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RUNTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("CONSTRUCTOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FIELD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOCAL_VARIABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("METHOD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("PACKAGE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("PARAMETER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Deprecated")]),t._v("\n")])])])]),t._v(" "),s("li",[s("code",[t._v("@SuppressWarnings")]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FIELD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("METHOD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("PARAMETER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CONSTRUCTOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOCAL_VARIABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SOURCE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SuppressWarnings")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v('@SuppressWarnings("fallthrough")')])])])]),t._v(" "),s("li",[s("code",[t._v("@Override")]),t._v(" — error when not overriding but define a new method"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("METHOD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SOURCE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Override")]),t._v("\n")])])])]),t._v(" "),s("li",[s("code",[t._v("@javax.annotation.Generated")]),t._v(" — mark source code that has been generated. It can also be used to differentiate user written code from generated code in a single file (in "),s("code",[t._v("javax.annotation.processing")]),t._v(" for post JDK 8)"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SOURCE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("PACKAGE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ANNOTATION_TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("METHOD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("CONSTRUCTOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FIELD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOCAL_VARIABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("PARAMETER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Generated")]),t._v("\n")])])])]),t._v(" "),s("li",[s("code",[t._v("@FunctionalInterface")]),t._v(" — error if conditions of functional interfaces not meet"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RUNTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunctionalInterface")]),t._v("\n")])])])]),t._v(" "),s("li",[s("code",[t._v("@SafeVarargs")]),t._v(" — assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RUNTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("CONSTRUCTOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("METHOD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SafeVarargs")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("meta")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RUNTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ANNOTATION_TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("@java.lang.annotation.Target")]),t._v(" — the contexts in which an annotation type is applicable, any declaration except a type parameter declaration if absent\n"),s("ul",[s("li",[s("code",[t._v("ElementType[] value")])]),t._v(" "),s("li",[s("code",[t._v("enum java.lang.annotation.ElementType")]),t._v(" — "),s("code",[t._v("ANNOTATION_TYPE")]),t._v(", "),s("code",[t._v("CONSTRUCTOR")]),t._v(", "),s("code",[t._v("FIELD")]),t._v(", "),s("code",[t._v("LOCAL_VARIABLE")]),t._v(", "),s("code",[t._v("METHOD")]),t._v(", "),s("code",[t._v("PACKAGE")]),t._v(", "),s("code",[t._v("PARAMETER")]),t._v(", "),s("code",[t._v("TYPE")]),t._v(", "),s("code",[t._v("TYPE_PARAMETER")]),t._v(", "),s("code",[t._v("TYPE_USE")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("TYPE")]),t._v(" — class, interface (including annotation type), or enum declaration")])])])])]),t._v(" "),s("li",[s("code",[t._v("@java.lang.annotation.Retention")]),t._v(" — how long annotations with the annotated type are to be retained, defaults to "),s("code",[t._v("RetentionPolicy.CLASS")]),t._v(" if absent\n"),s("ul",[s("li",[s("code",[t._v("RetentionPolicy value")])]),t._v(" "),s("li",[s("code",[t._v("enum java.lang.annotation.RetentionPolicy")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("CLASS")]),t._v(" — in class files but not the VM")]),t._v(" "),s("li",[s("code",[t._v("RUNTIME")])]),t._v(" "),s("li",[s("code",[t._v("SOURCE")])])])])])]),t._v(" "),s("li",[s("code",[t._v("@java.lang.annotation.Documented")]),t._v(" — indicates that annotations with a type are to be documented by javadoc and similar tools by default")]),t._v(" "),s("li",[s("code",[t._v("@java.lang.annotation.Inherited")]),t._v(" — indicates that an annotation type is automatically inherited, has no effect if the annotated type is used to annotate anything other than a class")]),t._v(" "),s("li",[s("code",[t._v("@java.lang.annotation.Repeatable")]),t._v(" — indicates the annotation type is repeatable, with the containing annotation type to hold repeated annotations"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Repeatable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestCases")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestCase")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("params")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expected")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestCases")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("Class<? extends Annotation> value")]),t._v(" — a container annotation that holds the repeated annotations in an array")])])])])]),t._v(" "),s("li",[s("p",[t._v("for java EE resource managing (deprecated from JDK 9 and removed from JDK 11, available in Maven)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("@javax.annotation.PostConstruct")]),t._v(" — used on a method that needs to be executed after dependency injection is done"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RUNTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("METHOD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PostConstruct")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Only one method can be annotated with this annotation")]),t._v(" "),s("li",[t._v("annotated method signature — see javadoc")])])]),t._v(" "),s("li",[s("code",[t._v("@javax.annotation.PreDestroy")]),t._v(" — used on methods as a callback notification to signal that the instance is in the process of being removed by the container"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RUNTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("METHOD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PreDestroy")]),t._v("\n")])])]),s("ul",[s("li",[t._v("annotated method requirements — see javadoc")])])]),t._v(" "),s("li",[s("code",[t._v("@javax.annotation.Resource")]),t._v(" — marks a resource that is needed by the application"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FIELD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("METHOD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RUNTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v("\n")])])]),s("ul",[s("li",[t._v("example"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbc/mydb"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("code",[t._v("@javax.annotation.Resources")]),t._v(" — multiple resources")])])])]),t._v(" "),s("h3",{attrs:{id:"Source-Level-Annotation-Processing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#Source-Level-Annotation-Processing"}},[t._v("#")]),t._v(" Source-Level Annotation Processing")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("CLI")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("javac -processor <class1>[,<class2>,<class3>...] sourceFiles\n")])])]),s("ul",[s("li",[t._v("also other alternatives")]),t._v(" "),s("li",[t._v("produce new source files until no more — Each annotation processor is executed in turn and given the annotations in which it expressed an interest. If an annotation processor creates a new source file, the process is repeated. Once a processing round yields no further source files, all source files are compiled.\n"),s("ul",[s("li",[s("code",[t._v("-XprintRounds")]),t._v(" — show rounds")]),t._v(" "),s("li",[t._v("cannot modify source files — use with agents or bytecode engineering tools")])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("javax.annotation.processing")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SupportedAnnotationTypes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.annotations.ToString"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SupportedSourceVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SourceVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RELEASE_8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ToStringAnnotationProcessor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractProcessor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" annotations"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RoundEnvironment")]),t._v(" currentRound"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("javax.annotation.processing.AbstractProcessor")]),t._v(" — for processors to extend"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractProcessor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Processor")]),t._v("\n")])])])]),t._v(" "),s("li",[s("code",[t._v("interface")]),t._v(" "),s("code",[t._v("javax.annotation.processing.RoundEnvironment")])]),t._v(" "),s("li",[s("code",[t._v("@javax.annotation.processing.SupportedAnnotationTypes")])]),t._v(" "),s("li",[s("code",[t._v("@javax.annotation.processing.SupportedOptions")])]),t._v(" "),s("li",[s("code",[t._v("@javax.annotation.processing.SupportedSourceVersion")])])])]),t._v(" "),s("li",[s("p",[t._v("language model (AST) — "),s("code",[t._v("javax.lang.model")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("javax.lang.model.element.Element")]),t._v(" — AST nodes")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);